/* 
*****************************************************************************************************************************************************
*****************************************************************************************************************************************************
*****************************************************************************************************************************************************
***********||||||||||||||||||||||||||||||*****************||||||||||||||||||*******************************||||||||||||||||||************************
***********||||||||||||||||||||||||||||||*****************||||||||||||||||||||*****************************||||||||||||||||||||**********************
************************||||******************************||||*************||||****************************||||*************||||*********************
************************||||******************************||||**************||||***************************||||**************||||********************
************************||||******************************||||**************||||***************************||||**************||||********************
************************||||******************************||||*************||||****************************||||*************||||*********************
************************||||******************************||||************||||*****************************||||************||||**********************
************************||||******************************||||||||||||||||||*******************************|||||||||||||||||||***********************
************************||||******************************||||||||||||||||||*******************************||||||||||||||||||************************
************************||||******************************||||***********||||******************************||||**************************************
************************||||******************************||||************||||*****************************||||**************************************
***********||||*********||||******************************||||*************||||****************************||||**************************************
***********||||*********||||******************************||||**************||||***************************||||**************************************
************||||*******||||*******************************||||***************||||**************************||||**************************************
**************||||***||||*********************************||||****************||||*************************||||**************************************
*****************|||||************************************||||*****************||||************************||||**************************************
*****************************************************************************************************************************************************
*****************************************************************************************************************************************************


Developers:
Justin Phelps

Inspired by:
San Andreas Roleplay

Last Updated: 10/10/2016

*/
/**********************************
 *                                *
 *         Filter Scripts         *
 *                                *
 **********************************/
#include <a_samp> // http://sa-mp.com/
#include <a_mysql> // https://github.com/pBlueG/SA-MP-MySQL
#include <sscanf2> // http://forum.sa-mp.com/showthread.php?t=570927
//#include <skin_name> // i made this
//#include <vehicle_name> // i made this
//#include <weapon_name> // i made this
//#include <active_weapon_model> // i made this
//#include <vipcalander> // i made this
//#include <admin_help> // i made this
#include <strlib> // http://forum.sa-mp.com/showthread.php?t=85697
#include <foreach> // https://github.com/Kar2k/SAMP-foreach
#include <GetPlayerNameEx> // https://github.com/GRGServer/SAMP/blob/master/includes/grgserver/Functions/GetPlayerNameEx.inc
#include <zcmd> // http://forum.sa-mp.com/showthread.php?t=91354
#include <zones> // http://forum.sa-mp.com/showthread.php?t=161741
#include <streamer> // http://forum.sa-mp.com/showthread.php?t=102865

/**********************************
 *                                *
 *           Variables            *
 *                                *
 **********************************/

#define MAX_FACTIONS 25
#define MAX_FACTIONS_RANKS 10
#define MAX_FACTIONS_RANK_PERMISSIONS 15
#define MAX_ATMS 50
#define MAX_CUSTOM_TEXT 50
#define MAX_JOBS 30
#define MAX_ARREST_POINTS 30
#define MAX_ARREST_ZONES 100
#define MAX_DMV 10
#define MAX_HOSPITALS 10
#define MAX_TIKIS 50
#define MAX_SETTINGS 97
#define MAX_FACTIONS_LOCKERS 30
#define MAX_FACTIONS_LOCKERS_ITEMS 50
#define MAX_BIZ 50
#define MAX_AIRPORT_FASTTRAVEL 50
#define MAX_GATES 1000
#define MAX_OBJECT 1000
#define MAX_DEALERSHIPS 10
#define MAX_ROADBLOCKS 30
#define MAX_INTERIORS 1000
#define MAX_HOUSES 1000
#define MAX_STREETCAMS 50
#define MAX_DROPS 500

#define MAX_PLAYER_VEHICLES 2
#define MAX_PLAYER_JOBS 4
#define MAX_PLAYER_INVENTORY 2


/**********************************
 *                                *
 *         User Variables         *
 *                                *
 **********************************/
new FYear, FMonth, FDay;

main()
{
	print("\n- - - - - - - - - - - - - - - - - -");
	print("This gamemode is a beta!");
	print("- - - - - - - - - - - - - - - - - -\n");
	getdate(FYear, FMonth, FDay);
}

new DEVELOPERMODE = 1; // If this mode is to 1, admin password will be reminded upon joining!

new MySQL; // line 1234
//new MySQL_Forum;

enum pInfo
{
	Online, // Online status, very important
	DBID, // Database id
	Float:PosX, // Player Position
	Float:PosY, // Player Position
	Float:PosZ, // Player Position
	Float:FacingAngle, // Player Facing Angle
	Float:Temp, // This lost it's puprose some time ago, but I'm not sure if it's being used somewhere on my code, so I shall keep it here still
	Float:HP, // Health
	Float:Armor, // Armour
	WorldID, // World ID
	InteriorID, // Interior ID
	RealName[MAX_PLAYER_NAME+1], // This is for players who might be using fake names
	FakeName[MAX_PLAYER_NAME+1], // This is if a player sets their fake name
	NewbieTag[31], // Player newbie tag
	DOB[4], // player Date of birth
	PVehs[3], // Player vehicles
	PVehsID[3], // Player vehicle ig-id
	
	Gender,
	Marriage,
	Job,
	House,
	Money,
	BankMoney,
	Level,
	RespectPoints,
	Faction,
	FactionLevel,
	FactionLeader,
	Biz,
	
	Tikis,
	VIP,
	Skin,
	Warrants,
	CrimesCommitted,
	FakeFaction,
	FakeFactionLevel,
	
	NewbieWarns,
	NewbieMuteHour,
	NewbieTWarns,
	NewbieMuted,
	NewbieTMuted,
	
	// #1 Is player doing an action/animation
	// #2 is player currently cuffed
	// #3 Gametext Removal
	// #4 PLAYER TAZED?
	// #5 FORUM ID
	// #6 PLAYER DEAD?
	// #7 GPS ON?
	// #8 PLAYER TAKING TEST?
	// #9 PLAYER OWN GPS?
	// #10 VEHICLE GPS
	// #11 IS PLAYER AFK?
	// #12 CURRENTLY ARRESTED + ITS TIME
	// #13 Anti Cheat Avoid System
	// #14 VEHICLE TRACKING NUMBER
	// #15 TOGGLE MUSIC /playmusic
	// #16 1 - Handtazer, 2 - SD Tazer
	// #17 PAYCHECKS MISSED
	// #18 CURRENT PAYCHECK NUMBER
	// #19 PASSWORD GUESS CHECKER
	// #20 IS BACKUP ON FOR DEPARTMENTS
	// #21 IS BACKUP ON
	// #22 JOB TIMER
	// #23 FACTION DUTY
	TempInfo[26],
	
	Admin,
	Helper,
	FactionModerator,
	PropertyModerator,
	
	
	// #0 Total time player
	// #1 Total time of the day
	// #2 Ability to sign check time
	Minutes[3],
	
	
	// #1 Drivers License
	Licenses[6],
	
	
	// #0 NONE
	// #1 Mechanic
	// #2 Lawyer
	// #3 Pizza Delivery
	// #4 Business Salesmen
	JobLevels[11], // Job level
	
	
	// #0 NONE
	// #1 Mechanic
	// #2 Lawyer
	// #3 Pizza Delivery
	// #4 Business Salesmen
	JobLevelsP[11], // Job point level
	
	
	// #0 NONE - Some jobs do not have points or levels, but still needs to be listed here
	// #1 Mechanic
	// #2 Lawyer
	// #3 Pizza Delivery
	// #4 Business Salesmen
	JobItems[11], // Job items
	
	
	CPLoc, // Checkpoint Location
	
	PlayerText:GameText, // Game Text
	ViewingCamera, // For street cameras
	Weapons[13], // Player weapon
	WeaponsAmmo[13], // Player weapons ammo
	MDCList, // For only viewing crimes by last numbers
	AllEditingOptions,
	AllEditingOptions2,
	AllEditingOptions3[MAX_PLAYERS],
	AllEditingOptions4[MAX_PLAYERS],
};
enum vInfo
{
	Float:VehX,
	Float:VehY,
	Float:VehZ,
	Float:VehA,
	Float:VehPX,
	Float:VehPY,
	Float:VehPZ,
	Float:VehPA,
	Float:Health,
	VDBID,
	VehLicence[33],
	Vehicle,
	VehGPS,
	Faction,
	EngineS,
	LightS,
	DoorLS,
	HoodS,
	TrunkS,
	Color1,
	Color2,
	Temp
};

enum iInfo
{
	Faction,
	FactionInviter,
	MarriageInviter,
	CHMSG
};
enum bInfo
{
	BizOwner[MAX_PLAYER_NAME],
	BizType,
	BizMoney,
	BizStartWorld,
	BizStartInt,
	BizEndWorld,
	BizEndInt,
	BizStock,
	BizPrice,
	BizOPrice,
	BizTempText[325],
	Text3D:BizText,
	Text3D:BizIntText,
	BizIntIcon,
	BizIcon,
	BizMapIcon,
	Float:BizX,
	Float:BizY,
	Float:BizZ,
	Float:BizIntX,
	Float:BizIntY,
	Float:BizIntZ,
};
enum hInfo
{
	HouseOwner[MAX_PLAYER_NAME+1],
	HouseTag[31],
	Float:HouseX,
	Float:HouseY,
	Float:HouseZ,
	Float:HouseIntX,
	Float:HouseIntY,
	Float:HouseIntZ,
	Text3D:HouseText,
	Text3D:HouseIntText,
	HouseTempText[325],
	HouseIcon,
	HouseStartWorld,
	HouseLock,
	HouseMapIcon,
	HouseStartInt,
	HouseIntIcon,
	HouseEndWorld,
	HouseEndInt,
	HousePrice,
};
enum intInfo
{
	IntOwner,
	IntName[100+1],
	Float:IntX,
	Float:IntY,
	Float:IntZ,
	Float:IntIntX,
	Float:IntIntY,
	Float:IntIntZ,
	Text3D:IntText,
	Text3D:IntIntText,
	IntTempText[300],
	IntIcon,
	IntMapIcon,
	IntMapIconID,
	IntIntIcon,
	IntFaction,
	IntFaction2,
	IntFaction3,
	IntWhiteList,
	IntPassword,
	IntStartWorld,
	IntStartInt,
	IntEndWorld,
	IntEndInt,
};
enum jInfo
{
	JobType,
	JobTempText[128],
	Text3D:JobText,
	JobIcon,
	JobWorld,
	JobInterior,
	JobMapIcon,
	Float:JobX,
	Float:JobY,
	Float:JobZ
};
enum rbInfo
{
	RBID,
	Float:RBX,
	Float:RBY,
	Float:RBZ,
	Float:RBA,
	RBIcon,
	RBTempText[75],
	Text3D:RBText,
	RBWorld,
	RBInt,
};
enum apftInfo
{
	Float:APX,
	Float:APY,
	Float:APZ,
	APAirportID,
	APIcon,
	APTempText[75],
	Text3D:APText,
};
enum csttxtInfo
{
	Float:CTX,
	Float:CTY,
	Float:CTZ,
	Float:CTRX,
	Float:CTRY,
	Float:CTRZ,
	CTWorld,
	CTInterior,
	CTIcon,
	CTText[100],
};
enum hospInfo
{
	Float:HPX,
	Float:HPY,
	Float:HPZ,
	Float:HPCX,
	Float:HPCY,
	Float:HPCZ,
	HPName[51],
	HPIcon,
	HPMapIcon,
	HPTempText[51],
	Text3D:HPText,
};
enum dmvInfo
{
	Float:DMVX,
	Float:DMVY,
	Float:DMVZ,
	Float:DMVIntX,
	Float:DMVIntY,
	Float:DMVIntZ,
	DMVStartIcon,
	DMVEndIcon,
	DMVMapIcon,
	DMVTempText[128],
	Text3D:DMVStartText,
	Text3D:DMVEndText,
	DMVStartWorld,
	DMVStartInt,
	DMVEndWorld,
	DMVEndInt,
};
enum atmInfo
{
	Float:ATMX,
	Float:ATMY,
	Float:ATMZ,
	Float:ATMA,
	ATMIcon,
	Text3D:ATMText,
	ATMWorld,
	ATMInt,
};
enum dropitemsInfo
{
	Float:DIX,
	Float:DIY,
	Float:DIZ,
	Float:DIA,
	DIIcon,
	DIItem,
	DIItemC,
	DITime,
	DIPID,
	DIWorld,
	DIInt,
};
enum gInfo
{
	GateID,
	Float:GateX,
	Float:GateY,
	Float:GateZ,
	Float:GateRX,
	Float:GateRY,
	Float:GateRZ,
	Float:GateEndX,
	Float:GateEndY,
	Float:GateEndZ,
	Float:GateEndRX,
	Float:GateEndRY,
	Float:GateEndRZ,
	Float:GateRadius,
	Float:GateSpeed,
	GateWorld,
	GateInt,
	GateOwner,
	GateOpen,
	GateObjID,
	GateIcon,
	GateFaction,
	GateFaction2,
	GateFaction3,
	GateLevel,
	GateAutoClose,
	GatePassword[51],
};
enum objInfo
{
	Float:ObjX,
	Float:ObjY,
	Float:ObjZ,
	Float:ObjRX,
	Float:ObjRY,
	Float:ObjRZ,
	ObjWorld,
	ObjInt,
	ObjObjID,
	ObjIcon,
};
enum dInfo
{
	DealerName[50],
	DealerTempText[128],
	Text3D:DealerText,
	DealerMapIcon,
	DealerIcon,
	DealerWorld,
	DealerInt,
	Float:DealerX,
	Float:DealerY,
	Float:DealerZ
};
enum apzInfo
{
	Float:APZX,
	Float:APZY,
	Float:APZZ,
	APZID,
	APZWorld,
	APZInterior,
	Text3D:APZText,
};
enum apInfo
{
	Float:APXStart,
	Float:APYStart,
	Float:APZStart,
	Float:APXEnd,
	Float:APYEnd,
	Float:APZEnd,
	APFaction,
	APWorldStart,
	APInteriorStart,
	APWorldEnd,
	APInteriorEnd,
	APIconStart,
	APIconEnd,
	Text3D:APTextStart,
};

/*
	#1 - Department Radio
	#2 - Roadblock
	#3 - Fake Badge
	#4 - MDC
	#5 - Warrant
	#6 - PSA
	#7 - Arrest
	#8 - Tressury
	#9 - Taxes
*/
enum fInfo
{
	FactionLongName[50],
	FactionShortName[10],
	FactionColor[10],
	FactionBank,
	FactionPermissions[MAX_FACTIONS_RANK_PERMISSIONS+1],
};

enum gsInfo
{
	GameSettingName[50],
	GameSetting,
};
enum flInfo
{
	Float:FLX,
	Float:FLY,
	Float:FLZ,
	Text3D:FLText,
	FLWorld,
	FLInt,
	FLFaction,
	FLIcon,
};

enum tikiInfo
{
	Float:TikiX,
	Float:TikiY,
	Float:TikiZ,
	TikiWorld,
	TikiInt,
	TikiIcon,
	TikiCreatorID,
	TikiPickup,
};


// Below is a list of retarded stuff
new
	DroppedItemsInfo[MAX_DROPS+1][dropitemsInfo],
	ATMs[MAX_ATMS+1][atmInfo],
	JobInfo[MAX_JOBS+1][jInfo],
	FactionInfo[MAX_FACTIONS+1][fInfo],
	ArrestPointZonesInfo[MAX_ARREST_ZONES+1][apzInfo],
	FactionLockerInfo[MAX_FACTIONS_LOCKERS+1][flInfo],
	Businesses[MAX_BIZ+1][bInfo],
	ObjectInfo[MAX_OBJECT+1][objInfo],
	DMVInfo[MAX_DMV+1][dmvInfo],
	CustomTextInfo[MAX_CUSTOM_TEXT+1][csttxtInfo],
	ArrestPointInfo[MAX_ARREST_POINTS+1][apInfo],
	HospitalInfo[MAX_HOSPITALS+1][hospInfo],
	AirportFTInfo[MAX_AIRPORT_FASTTRAVEL+1][apftInfo],
	GateInfo[MAX_GATES+1][gInfo],
	TikiInfos[MAX_TIKIS+1][tikiInfo],
	Dealerships[MAX_DEALERSHIPS+1][dInfo],
	RoadBlocks[MAX_ROADBLOCKS+1][rbInfo],
	Vehicles[MAX_VEHICLES+1][vInfo],
	InvitesAwaiting[MAX_PLAYERS+1][iInfo],
	InteriorInfo[MAX_INTERIORS+1][intInfo],
	HouseInfo[MAX_HOUSES+1][hInfo],
	GameSettings[MAX_SETTINGS+1][gsInfo],
	ReadAllMessages[MAX_PLAYERS+1][5000],
	PlayerInfo[MAX_PLAYERS+1][pInfo],
	Float:SpawnLocationX = (1716.623657),
	Float:SpawnLocationY = (1378.363647),
	Float:SpawnLocationZ = (10.640625),
	Float:SpawnLocationA = (284.128295);

// Below is a list of even bigger retarded stuff
new
	LastDroppedItemID[MAX_DROPS+1] = 0,
	LastBusinessesID[MAX_BIZ+1] = 0,
	LastStreetCamID[MAX_STREETCAMS+1] = 0,
	LastDMVID[MAX_DMV+1] = 0,
	LastArrestPointZoneID[MAX_ARREST_ZONES+1] = 0,
	LastArrestPointID[MAX_ARREST_POINTS+1] = 0,
	LastFactionID[MAX_FACTIONS+1] = 0,
	LastFactionLockerID[MAX_FACTIONS_LOCKERS+1] = 0,
	LastFactionLockerItemsID[MAX_FACTIONS+1][MAX_FACTIONS_RANKS+1][MAX_FACTIONS_LOCKERS_ITEMS+1],
	LastHospitalID[MAX_HOSPITALS+1] = 0,
	LastCustomTextID[MAX_CUSTOM_TEXT+1] = 0,
	LastJobID[MAX_JOBS+1] = 0,
	LastAirportFTID[MAX_AIRPORT_FASTTRAVEL+1] = 0,
	LastDealershipID[MAX_DEALERSHIPS+1] = 0,
	AllFactionRanks[MAX_FACTIONS+1][MAX_FACTIONS_RANKS+1][50+1],
	AllFactionRanksPermissions[MAX_FACTIONS+1][MAX_FACTIONS_RANKS+1][MAX_FACTIONS_RANK_PERMISSIONS+1],
	LastVehicleID[MAX_VEHICLES+1] = 0,
	LastVehicleDBID[MAX_VEHICLES+1] = 0,
	LastHouseID[MAX_HOUSES+1] = 0,
	LastTikiID[MAX_TIKIS+1] = 0,
	LastInteriorID[MAX_INTERIORS+1] = 0,
	LastObjectID[MAX_OBJECT+1] = 0,
	LastGateID[MAX_GATES+1] = 0,
	LastATMsID[MAX_ATMS+1] = 0,
	LastRoadBlockID[MAX_ROADBLOCKS+1] = 0,
	NoNewbie = 0,
	NoOOC = 0,
	PaycheckFix = 0,
	Float:TaxPercentage,
	TaxMoney,
	GlobalExitRadius = 10,
	GlobalExtranceRadius = 25,
	Text:TheTime[MAX_PLAYERS],
	TotalFactions = 0;


/**********************************
 *                                *
 *        Server Functions        *
 *                                *
 **********************************/
	
stock GetActiveWeaponModels(playerid)
{
	new model;
	if(GetPlayerWeapon(playerid) == 1){
		model = 331;
	} else if(GetPlayerWeapon(playerid) == 2){
		model = 333;
	} else if(GetPlayerWeapon(playerid) == 3){
		model = 334;
	} else if(GetPlayerWeapon(playerid) == 4){
		model = 335;
	} else if(GetPlayerWeapon(playerid) == 5){
		model = 336;
	} else if(GetPlayerWeapon(playerid) == 6){
		model = 337;
	} else if(GetPlayerWeapon(playerid) == 7){
		model = 338;
	} else if(GetPlayerWeapon(playerid) == 8){
		model = 339;
	} else if(GetPlayerWeapon(playerid) == 9){
		model = 341;
	} else if(GetPlayerWeapon(playerid) == 10){
		model = 321;
	} else if(GetPlayerWeapon(playerid) == 11){
		model = 322;
	} else if(GetPlayerWeapon(playerid) == 12){
		model = 323;
	} else if(GetPlayerWeapon(playerid) == 13){
		model = 324;
	} else if(GetPlayerWeapon(playerid) == 14){
		model = 325;
	} else if(GetPlayerWeapon(playerid) == 15){
		model = 326;
	} else if(GetPlayerWeapon(playerid) == 16){
		model = 342;
	} else if(GetPlayerWeapon(playerid) == 17){
		model = 344;
	} else if(GetPlayerWeapon(playerid) == 18){
		model = 331;
	} else if(GetPlayerWeapon(playerid) == 22){
		model = 346;
	} else if(GetPlayerWeapon(playerid) == 23){
		model = 347;
	} else if(GetPlayerWeapon(playerid) == 24){
		model = 348;
	} else if(GetPlayerWeapon(playerid) == 25){
		model = 349;
	} else if(GetPlayerWeapon(playerid) == 26){
		model = 350;
	} else if(GetPlayerWeapon(playerid) == 27){
		model = 351;
	} else if(GetPlayerWeapon(playerid) == 28){
		model = 352;
	} else if(GetPlayerWeapon(playerid) == 29){
		model = 353;
	} else if(GetPlayerWeapon(playerid) == 30){
		model = 355;
	} else if(GetPlayerWeapon(playerid) == 31){
		model = 356;
	} else if(GetPlayerWeapon(playerid) == 32){
		model = 372;
	} else if(GetPlayerWeapon(playerid) == 33){
		model = 357;
	} else if(GetPlayerWeapon(playerid) == 34){
		model = 358;
	} else if(GetPlayerWeapon(playerid) == 35){
		model = 359;
	} else if(GetPlayerWeapon(playerid) == 36){
		model = 360;
	} else if(GetPlayerWeapon(playerid) == 37){
		model = 361;
	} else if(GetPlayerWeapon(playerid) == 38){
		model = 362;
	} else if(GetPlayerWeapon(playerid) == 39){
		model = 363;
	} else if(GetPlayerWeapon(playerid) == 40){
		model = 364;
	} else if(GetPlayerWeapon(playerid) == 41){
		model = 365;
	} else if(GetPlayerWeapon(playerid) == 42){
		model = 366;
	} else if(GetPlayerWeapon(playerid) == 43){
		model = 367;
	} else if(GetPlayerWeapon(playerid) == 44){
		model = 368;
	} else if(GetPlayerWeapon(playerid) == 45){
		model = 369;	
	} else if(GetPlayerWeapon(playerid) == 46){
		model = 371;
	} else {
		return 1575;
	}
	return model;
}



stock GetPlayerSkinInfo(skinid)
{
	new skininformation[128];
		
	switch(skinid)
	{
		case 0: skininformation = "Black male, white t-shirt, blue jeans.";
		case 1: skininformation = "Caucasian male, red checkered t-shirt, white under shirt, and green pants.";
		case 2: skininformation = "Caucasian male, white sweater, blue jeans.";
		case 3: skininformation = "Caucasian male, blue coat, black jeans.";
		case 4: skininformation = "Black male, tan t-shirt, blue jeans";
		case 5: skininformation = "Large black male, tan t-shirt, blue jeans";
		case 6: skininformation = "White male, green jacket, white undershirt, blue jeans";
		case 7: skininformation = "Black male, blue coat, tan pants";
		case 8: skininformation = "White male, tan-pink overals, tan-pink hat";
		case 9: skininformation = "Black female, black coat, black pants";
		case 10: skininformation = "Older black female, dark red sweater, green skirt";
		case 11: skininformation = "Black female, black vest, white shirt, blakc pants";
		case 12: skininformation = "Black female, black shirt, black skirt";
		case 13: skininformation = "Black female, dark purple shirt with 31 logo, and black pants";
		case 14: skininformation = "Black male, white shirt, dark brown pants.";
		case 15: skininformation = "Black male, tan and dark green checkered t-shirt, blue jean";
		case 16: skininformation = "Black male, orange safety coat, black under shirt. Silver jeans";
		case 17: skininformation = "Black male, black sportscoat, black pants";
		case 18: skininformation = "Black male, no shirt, red swimming trunks";
		case 19: skininformation = "Black male, no shirt, bright red pants, red bucket hat";
		case 20: skininformation = "Black male, yellow and black sportscoat, black pants";
		case 21: skininformation = "Black male, blue shirt, dark green shorts";
		case 22: skininformation = "Black male, orange shirt 12 logo, black pants with orange stripe";
		case 23: skininformation = "White male, grey shirt, dark green pants";
		case 24: skininformation = "Black male, dark blue coat, blue jeans. Mad dogg bodyguard";
		case 25: skininformation = "Black male, Black vest white under shirt, black pants";
		case 26: skininformation = "White male, black shirt, tan shorts, large blue backpack";
		case 27: skininformation = "White male, white shirt, blue jeans, yellow hard hat";
		case 28: skininformation = "Black male, black undershirt, grey pants, gold chain";
		case 29: skininformation = "White male, white hoodie sweatshirt, blue pants";
		case 30: skininformation = "Mexican male, grey undershirt, navy blue pants";
		case 31: skininformation = "White female, white shirt, blue pants, long tan boots";
		case 32: skininformation = "Older white male, blue coat, warn blue jeans";
		case 33: skininformation = "White male, black over coat, black pants, black boots, black cowboy hat";
		case 34: skininformation = "White male, blue jacket, blue jeans, tall brown boots";
		case 35: skininformation = "Black male, pink t-shirt, olive green shorts";
		case 36: skininformation = "Black male, white shirt, black shorts, black hat";
		case 37: skininformation = "White male, white vest, blue shirt, olive green shorts";
		case 38: skininformation = "White male, white shirt, brown shorts, tall white socks";
		case 39: skininformation = "Older female, dark brown coat, white shirt, dark brown skirt, long dark socks";
		case 40: skininformation = "Black female, red dress shirt";
		case 41: skininformation = "Black female, blue jogging clothes, blue hat";
		case 42: skininformation = "White male, blue overals, american flag coloured bandana";
		case 43: skininformation = "White male, black shirt, black shirt";
		case 44: skininformation = "White male, blue coat, white undershirt, brown jeans";
		case 45: skininformation = "White male, no shirt, green swimming trunks";
		case 46: skininformation = "Black male, white long sleeve shirt, blue jeans";
		case 47: skininformation = "Mexican male, olive green checkered shirt, white undershirt, tan pants";
		case 48: skininformation = "Mexican male, white and blue striped shirt, black pants";
		case 49: skininformation = "Older white male, red vest, black long sleeve shirt, black pants";
		case 50: skininformation = "Black male, grey overals";
		case 51: skininformation = "Black male, yellow shirt, black compression shorts";
		case 52: skininformation = "White male, white shirt, black compression shorts";
		case 53: skininformation = "White male, brown shirt, black shorts";
		case 54: skininformation = "Black female, black coat, olive green undershirt, red skirt";
		case 55: skininformation = "White female, black dress shirt";
		case 56: skininformation = "White female, lime green undershirt, black short skirt";
		case 57: skininformation = "Older white male, black sports coat, black pants";
		case 58: skininformation = "White male, red checkered shirt, blue jeans";
		case 59: skininformation = "White male, light black and white stripes shirt, black pants";
		case 60: skininformation = "White male, brown shirt, blue jeans";
		case 61: skininformation = "White male, pilot uniform";
		case 62: skininformation = "White male, white and sky blue stripes shirt and same coloured pants";
		case 63: skininformation = "Black female, sports bra, black pannies, long black boots.";
		case 64: skininformation = "Black female, sports bra, red skirt, long black boots.";
		case 65: skininformation = "Black female, olive green shirt with logo 31, blue jeans";
		case 66: skininformation = "Black female, black vest, white undershirt, black pants";
		case 67: skininformation = "Black female, grey long sleeve jacket, blue jeans";
		case 68: skininformation = "White female, long sleeve black shirt, black pants, possible priest";
		case 69: skininformation = "Black female, sky blue vest, sky blue pants";
		case 70: skininformation = "White male, doctor or scientist jacket, black pants";
		case 71: skininformation = "White male, blue t-shirt, black pants, possible security guard or cadet";
		case 72: skininformation = "White male, checkered blue t-shirt, blue jeans";
		case 73: skininformation = "White male, olive green shirt, army coloured pants";
		case 74: skininformation = "???";
		case 75: skininformation = "White female, red bra, red short skirt";
		case 76: skininformation = "Black female, black dress shirt, white undershirt";
		case 77: skininformation = "White female, dark blue long sleeve shirt, warn green short skirt. Possible homelss?";
		case 78: skininformation = "White male, warn checkered red long sleeve shirt, warn blue jeans. Possible homeless?";
		case 79: skininformation = "Black male, dark green coat, blue jeans. Possible homeless?";
		case 80: skininformation = "Black male, red shorts, boxing gloves";
		case 81: skininformation = "White male, blue shorts, boxing bloves";
		case 82: skininformation = "Black male, black long sleeve shirt, black pants, elvis impersonator";
		case 83: skininformation = "Black male, white long sleeve shirt, white pants, elvis impersonator";
		case 84: skininformation = "Black male, blue long sleeve shirt, blue pants, elvis impersonator";
		case 85: skininformation = "White female, lingerie dress clothing";
		case 86: skininformation = "Black male, olive green long sleeve shirt, white undershirt, blue jeans";
		case 87: skininformation = "White female, black bra, black pannies";
		case 88: skininformation = "White male, red shirt, white short";
		case 89: skininformation = "White female, blue long sleeve shirt, blue skirt";
		case 90: skininformation = "White female, red shirt, black compression shorts";
		case 91: skininformation = "Black female, white dress shirt";
		case 92: skininformation = "White female, black bra, black pannies";
		case 93: skininformation = "Whire female, black long sleeve shirt, black pants";
		case 94: skininformation = "White male, white shirt, dark green shorts";
		case 95: skininformation = "White male, tan t-shirt, blue jeans";
		case 96: skininformation = "White male, blue and white striped shirt, black shorts";
		case 97: skininformation = "White male, no shirt, red compression shorts";
		case 98: skininformation = "White male, black vest, white undershirt, blue jeans";
		case 99: skininformation = "White male, very light pink shirt, black shorts";
		case 100: skininformation = "White male, black shirt, olive green pants";
		case 299: skininformation = "White male, black leather jacket, black undershirt, olive green pants";
		case 300: skininformation = "White male, black police uniform";
		case 301: skininformation = "White male, black police uniform";
		case 302: skininformation = "White male, tan shirt, white undershirt, tan pants. Police uniform";
		case 303: skininformation = "White male, white shirt, tan pants";
		case 304: skininformation = "White male, blue shirt, tan pants";
		case 305: skininformation = "White male, red shirt, grey pants";
		case 306: skininformation = "Black female, black police uniform.";
		case 307: skininformation = "Black female, black police uniform.";
		case 308: skininformation = "White female, light blue shirt, black pants. Medic uniform";
		case 309: skininformation = "White female, tan shirt, olive green pants. Police uniform";
		case 310: skininformation = "White male, black shirt, tan pants. Police uniform";
		case 311: skininformation = "White male, tan shirt, olive green pants. Police uniform";
		default : skininformation = "NOTHING FOUND (THIS IS AN ISSUE)";
	}
	return skininformation;
}

stock CheckPlayerAFK(playerid)
{
	new Result[5];
	if(PlayerInfo[playerid][TempInfo][11] == 1){
		format(Result, sizeof(Result), "YES");
	} else if(PlayerInfo[playerid][TempInfo][11] == 0){
		format(Result, sizeof(Result), "NO");
	}
	return Result;
}

forward BizIconLoader(bizid);
public BizIconLoader(bizid)
{
	if(Businesses[bizid][BizType] == 1){ // Ammunation
		Businesses[bizid][BizIcon] = CreateDynamicPickup(2061, 23, Businesses[bizid][BizX], Businesses[bizid][BizY], Businesses[bizid][BizZ], Businesses[bizid][BizStartWorld], Businesses[bizid][BizStartInt], -1);
	} else if(Businesses[bizid][BizType] == 2){ // 24/7
		Businesses[bizid][BizIcon] = CreateDynamicPickup(2710, 23, Businesses[bizid][BizX], Businesses[bizid][BizY], Businesses[bizid][BizZ], Businesses[bizid][BizStartWorld], Businesses[bizid][BizStartInt], -1);
	} else if(Businesses[bizid][BizType] == 3){ // Binco
		Businesses[bizid][BizIcon] = CreateDynamicPickup(1275, 23, Businesses[bizid][BizX], Businesses[bizid][BizY], Businesses[bizid][BizZ], Businesses[bizid][BizStartWorld], Businesses[bizid][BizStartInt], -1);
	} else if(Businesses[bizid][BizType] == 4){ // Sex Shop
		Businesses[bizid][BizIcon] = CreateDynamicPickup(1314, 23, Businesses[bizid][BizX], Businesses[bizid][BizY], Businesses[bizid][BizZ], Businesses[bizid][BizStartWorld], Businesses[bizid][BizStartInt], -1);
	} else if(Businesses[bizid][BizType] == 5){ // Food
		Businesses[bizid][BizIcon] = CreateDynamicPickup(1644, 23, Businesses[bizid][BizX], Businesses[bizid][BizY], Businesses[bizid][BizZ], Businesses[bizid][BizStartWorld], Businesses[bizid][BizStartInt], -1);
	} else {
		Businesses[bizid][BizIcon] = CreateDynamicPickup(1239, 23, Businesses[bizid][BizX], Businesses[bizid][BizY], Businesses[bizid][BizZ], Businesses[bizid][BizStartWorld], Businesses[bizid][BizStartInt], -1);
	}
}
forward BizMapIconLoader(bizid);
public BizMapIconLoader(bizid)
{
	if(Businesses[bizid][BizType] == 1) { // Ammunation
		Businesses[bizid][BizMapIcon] = CreateDynamicMapIcon(Businesses[bizid][BizX], Businesses[bizid][BizY], Businesses[bizid][BizZ], 6, -1, Businesses[bizid][BizStartWorld], Businesses[bizid][BizStartInt], -1, 250, MAPICON_GLOBAL);
	} else if(Businesses[bizid][BizType] == 2) { // 24/7
		Businesses[bizid][BizMapIcon] = CreateDynamicMapIcon(Businesses[bizid][BizX], Businesses[bizid][BizY], Businesses[bizid][BizZ], 17, -1, Businesses[bizid][BizStartWorld], Businesses[bizid][BizStartInt], -1, 250, MAPICON_GLOBAL);
	} else if(Businesses[bizid][BizType] == 3) { // Binco
		Businesses[bizid][BizMapIcon] = CreateDynamicMapIcon(Businesses[bizid][BizX], Businesses[bizid][BizY], Businesses[bizid][BizZ], 45, -1, Businesses[bizid][BizStartWorld], Businesses[bizid][BizStartInt], -1, 250, MAPICON_GLOBAL);
	} else if(Businesses[bizid][BizType] == 4) { // Sex Shop
		Businesses[bizid][BizMapIcon] = CreateDynamicMapIcon(Businesses[bizid][BizX], Businesses[bizid][BizY], Businesses[bizid][BizZ], 38, -1, Businesses[bizid][BizStartWorld], Businesses[bizid][BizStartInt], -1, 250, MAPICON_GLOBAL);
	} else if(Businesses[bizid][BizType] == 5) { // Food
		Businesses[bizid][BizMapIcon] = CreateDynamicMapIcon(Businesses[bizid][BizX], Businesses[bizid][BizY], Businesses[bizid][BizZ], 10, -1, Businesses[bizid][BizStartWorld], Businesses[bizid][BizStartInt], -1, 250, MAPICON_GLOBAL);
	}
}

stock GetVIPDays()
{
	new TYear, TMonth, TDay, Year, Month, Day, TotalDays = 30, Total[30];
	getdate(TYear, TMonth, TDay);
	Year = TYear;
	Month = TMonth;
	Day = TDay;
	
	for(new a = 1; a <= TotalDays; a++){
		if(Month == 1){
			if(Day >= 1 && Day <= 31){
				Day = Day + 1;
			} else {
				Day = 1;
				Month = Month + 1;
				if(Month == 13){
					Month = 1;
					Year = Year + 1;
				}
			}
		} else if(Month == 2){
			if(Day >= 1 && Day <= 28){
				Day = Day + 1;
			} else {
				Day = 1;
				Month = Month + 1;
				if(Month == 13){
					Month = 1;
					Year = Year + 1;
				}
			}
		} else if(Month == 3){
			if(Day >= 1 && Day <= 31){
				Day = Day + 1;
			} else {
				Day = 1;
				Month = Month + 1;
				if(Month == 13){
					Month = 1;
					Year = Year + 1;
				}
			}
		} else if(Month == 4){
			if(Day >= 1 && Day <= 30){
				Day = Day + 1;
			} else {
				Day = 1;
				Month = Month + 1;
				if(Month == 13){
					Month = 1;
					Year = Year + 1;
				}
			}
		} else if(Month == 5){
			if(Day >= 1 && Day <= 31){
				Day = Day + 1;
			} else {
				Day = 1;
				Month = Month + 1;
				if(Month == 13){
					Month = 1;
					Year = Year + 1;
				}
			}
		} else if(Month == 6){
			if(Day >= 1 && Day <= 30){
				Day = Day + 1;
			} else {
				Day = 1;
				Month = Month + 1;
				if(Month == 13){
					Month = 1;
					Year = Year + 1;
				}
			}
		} else if(Month == 7){
			if(Day >= 1 && Day <= 31){
				Day = Day + 1;
			} else {
				Day = 1;
				Month = Month + 1;
				if(Month == 13){
					Month = 1;
					Year = Year + 1;
				}
			}
		} else if(Month == 8){
			if(Day >= 1 && Day <= 31){
				Day = Day + 1;
			} else {
				Day = 1;
				Month = Month + 1;
				if(Month == 13){
					Month = 1;
					Year = Year + 1;
				}
			}
		} else if(Month == 9){
			if(Day >= 1 && Day <= 30){
				Day = Day + 1;
			} else {
				Day = 1;
				Month = Month + 1;
				if(Month == 13){
					Month = 1;
					Year = Year + 1;
				}
			}
		} else if(Month == 10){
			if(Day >= 1 && Day <= 31){
				Day = Day + 1;
			} else {
				Day = 1;
				Month = Month + 1;
				if(Month == 13){
					Month = 1;
					Year = Year + 1;
				}
			}
		} else if(Month == 11){
			if(Day >= 1 && Day <= 30){
				Day = Day + 1;
			} else {
				Day = 1;
				Month = Month + 1;
				if(Month == 13){
					Month = 1;
					Year = Year + 1;
				}
			}
		} else if(Month == 12){
			if(Day >= 1 && Day <= 31){
				Day = Day + 1;
			} else {
				Day = 1;
				Month = Month + 1;
				if(Month == 13){
					Month = 1;
					Year = Year + 1;
				}
			}
		}
	}
	format(Total, sizeof(Total), "%i/%i/%i", Month, Day, Year);
	return Total;
}



stock GetWeaponNameInfo(weaponid)
{
	new wepinfo[50];
		
	switch(weaponid)
	{
		case 0: wepinfo = "Fist";
		case 1: wepinfo = "Brass Knuckles";
		case 2: wepinfo = "Golf Club";
		case 3: wepinfo = "Nightstick";
		case 4: wepinfo = "Knife";
		case 5: wepinfo = "Baseball Bat";
		case 6: wepinfo = "Shovel";
		case 7: wepinfo = "Pool Cue";
		case 8: wepinfo = "Katana";
		case 9: wepinfo = "Chainsaw";
		case 10: wepinfo = "John's Purple Dildo";
		case 11: wepinfo = "John's Dildo";
		case 12: wepinfo = "John's Vibrator";
		case 13: wepinfo = "John's Silver Vibrator";
		case 14: wepinfo = "Flowers";
		case 15: wepinfo = "Cane";
		case 16: wepinfo = "Grenade";
		case 17: wepinfo = "Tear Gas";
		case 18: wepinfo = "Molotov Cocktail";
		case 22: wepinfo = "Colt 45";
		case 23: wepinfo = "Silenced Pistol";
		case 24: wepinfo = "Deagle";
		case 25: wepinfo = "Shotgun";
		case 26: wepinfo = "Sawnoff Shotgun";
		case 27: wepinfo = "Combat Shotgun";
		case 28: wepinfo = "UZI";
		case 29: wepinfo = "MP5";
		case 30: wepinfo = "AK-47";
		case 31: wepinfo = "M4";
		case 32: wepinfo = "TEC9";
		case 33: wepinfo = "Country Rifle";
		case 34: wepinfo = "Sniper Rifle";
		case 35: wepinfo = "RPG";
		case 36: wepinfo = "HS Rocket";
		case 37: wepinfo = "Flamethrower";
		case 38: wepinfo = "Minigun";
		case 39: wepinfo = "Satchel Charge";
		case 40: wepinfo = "Detonator";
		case 41: wepinfo = "Spraycan";
		case 42: wepinfo = "Fire Extinguisher";
		case 43: wepinfo = "Camera";
		case 44: wepinfo = "Night Vision Goggles";
		case 45: wepinfo = "Thermal Goggles";
		case 46: wepinfo = "Parachute";
		default: wepinfo = "Unknown Weapon ???";
	}
	return wepinfo;
}



stock GetVehicleInformation(vehmodid)
{
	new vehinfo[30];
		
	switch(vehmodid)
	{
		case 0: vehinfo = "NONE";
		case 400: vehinfo = "Landstalker";
		case 401: vehinfo = "Bravura";
		case 402: vehinfo = "Buffalo";
		case 403: vehinfo = "Linerunner";
		case 404: vehinfo = "Perenniel";
		case 405: vehinfo = "Sentinel";
		case 406: vehinfo = "Dumper";
		case 407: vehinfo = "Firetruck";
		case 408: vehinfo = "Trashmaster";
		case 409: vehinfo = "Stretch";
		case 410: vehinfo = "Manana";
		case 411: vehinfo = "Infernus";
		case 412: vehinfo = "Voodoo";
		case 413: vehinfo = "Pony";
		case 414: vehinfo = "Mule";
		case 415: vehinfo = "Cheetah";
		case 416: vehinfo = "Ambulance";
		case 417: vehinfo = "Leviathan";
		case 418: vehinfo = "Moonbeam";
		case 419: vehinfo = "Esperanto";
		case 420: vehinfo = "Taxi";
		case 421: vehinfo = "Washington";
		case 422: vehinfo = "Bobcat";
		case 423: vehinfo = "Mr Whoopee";
		case 424: vehinfo = "BF Injection";
		case 425: vehinfo = "Hunter";
		case 426: vehinfo = "Premier";
		case 427: vehinfo = "Enforcer";
		case 428: vehinfo = "Securicar";
		case 429: vehinfo = "Banshee";
		case 430: vehinfo = "Predator";
		case 431: vehinfo = "Bus";
		case 432: vehinfo = "Rhino";
		case 433: vehinfo = "Barracks";
		case 434: vehinfo = "Hotknife";
		case 435: vehinfo = "Article Trailer";
		case 436: vehinfo = "Previon";
		case 437: vehinfo = "Coach";
		case 438: vehinfo = "Cabbie";
		case 439: vehinfo = "Stallion";
		case 440: vehinfo = "Rumpo";
		case 441: vehinfo = "RC Bandit";
		case 442: vehinfo = "Romero";
		case 443: vehinfo = "Packer";
		case 444: vehinfo = "Monster";
		case 445: vehinfo = "Admiral";
		case 446: vehinfo = "Squallo";
		case 447: vehinfo = "Seasparrow";
		case 448: vehinfo = "Pizzaboy";
		case 449: vehinfo = "Tram";
		case 450: vehinfo = "Article Trailer 2";
		case 451: vehinfo = "Turismo";
		case 452: vehinfo = "Speeder";
		case 453: vehinfo = "Reefer";
		case 454: vehinfo = "Tropic";
		case 455: vehinfo = "Flatbed";
		case 456: vehinfo = "Yankee";
		case 457: vehinfo = "Caddy";
		case 458: vehinfo = "Solair";
		case 459: vehinfo = "Topfun Van";
		case 460: vehinfo = "Skimmer";
		case 461: vehinfo = "PCJ-600";
		case 462: vehinfo = "Faggio";
		case 463: vehinfo = "Freeway";
		case 464: vehinfo = "RC Baron";
		case 465: vehinfo = "RC Raider";
		case 466: vehinfo = "Glendale";
		case 467: vehinfo = "Oceanic";
		case 468: vehinfo = "Sanchez";
		case 469: vehinfo = "Sparrow";
		case 470: vehinfo = "Patriot";
		case 471: vehinfo = "Quad";
		case 472: vehinfo = "Coastguard";
		case 473: vehinfo = "Dinghy";
		case 474: vehinfo = "Hermes";
		case 475: vehinfo = "Sabre";
		case 476: vehinfo = "Rustler";
		case 477: vehinfo = "ZR-350";
		case 478: vehinfo = "Walton";
		case 479: vehinfo = "Regina";
		case 480: vehinfo = "Comet";
		case 481: vehinfo = "BMX";
		case 482: vehinfo = "Burrito";
		case 483: vehinfo = "Camper";
		case 484: vehinfo = "Marquis";
		case 485: vehinfo = "Baggage";
		case 486: vehinfo = "Dozer";
		case 487: vehinfo = "Maverick";
		case 488: vehinfo = "SAN News Maverick";
		case 489: vehinfo = "Rancher";
		case 490: vehinfo = "FBI Rancher";
		case 491: vehinfo = "Virgo";
		case 492: vehinfo = "Greenwood";
		case 493: vehinfo = "Jetmax";
		case 494: vehinfo = "Hotring Racer";
		case 495: vehinfo = "Sandking";
		case 496: vehinfo = "Blista Compact";
		case 497: vehinfo = "Police Maverick";
		case 498: vehinfo = "Boxville";
		case 499: vehinfo = "Benson";
		case 500: vehinfo = "Mesa";
		case 501: vehinfo = "RC Goblin";
		case 502: vehinfo = "Hotring Racer";
		case 503: vehinfo = "Hotring Racer";
		case 504: vehinfo = "Bloodring Banger";
		case 505: vehinfo = "Rancher";
		case 506: vehinfo = "Super GT";
		case 507: vehinfo = "Elegant";
		case 508: vehinfo = "Journey";
		case 509: vehinfo = "Bike";
		case 510: vehinfo = "Mountain Bike";
		case 511: vehinfo = "Beagle";
		case 512: vehinfo = "Cropduster";
		case 513: vehinfo = "Stuntplane";
		case 514: vehinfo = "Tanker";
		case 515: vehinfo = "Roadtrain";
		case 516: vehinfo = "Nebula";
		case 517: vehinfo = "Majestic";
		case 518: vehinfo = "Buccaneer";
		case 519: vehinfo = "Shamal";
		case 520: vehinfo = "Hydra";
		case 521: vehinfo = "FCR-900";
		case 522: vehinfo = "NRG-500";
		case 523: vehinfo = "HPV1000";
		case 524: vehinfo = "Cement Truck";
		case 525: vehinfo = "Towtruck";
		case 526: vehinfo = "Fortune";
		case 527: vehinfo = "Cadrona";
		case 528: vehinfo = "SWAT Truck";
		case 529: vehinfo = "Willard";
		case 530: vehinfo = "Forklift";
		case 531: vehinfo = "Tractor";
		case 532: vehinfo = "Combine Harvester";
		case 533: vehinfo = "Feltzer";
		case 534: vehinfo = "Remington";
		case 535: vehinfo = "Slamvan";
		case 536: vehinfo = "Blade";
		case 537: vehinfo = "Freight (Train)";
		case 538: vehinfo = "Brownstreak (Train)";
		case 539: vehinfo = "Vortex";
		case 540: vehinfo = "Vincent";
		case 541: vehinfo = "Bullet";
		case 542: vehinfo = "Clover";
		case 543: vehinfo = "Sadler";
		case 544: vehinfo = "Firetruck LA";
		case 545: vehinfo = "Hustler";
		case 546: vehinfo = "Intruder";
		case 547: vehinfo = "Primo";
		case 548: vehinfo = "Cargobob";
		case 549: vehinfo = "Tampa";
		case 550: vehinfo = "Sunrise";
		case 551: vehinfo = "Merit";
		case 552: vehinfo = "Utility Van";
		case 553: vehinfo = "Nevada";
		case 554: vehinfo = "Yosemite";
		case 555: vehinfo = "Windsor";
		case 556: vehinfo = "Monster Truck";
		case 557: vehinfo = "Monster Truck";
		case 558: vehinfo = "Uranus";
		case 559: vehinfo = "Jester";
		case 560: vehinfo = "Sultan";
		case 561: vehinfo = "Stratum";
		case 562: vehinfo = "Elegy";
		case 563: vehinfo = "Raindance";
		case 564: vehinfo = "RC Tiger";
		case 565: vehinfo = "Flash";
		case 566: vehinfo = "Tahoma";
		case 567: vehinfo = "Savanna";
		case 568: vehinfo = "Bandito";
		case 569: vehinfo = "Freight Flat Trailer (Train)";
		case 570: vehinfo = "Streak Trailer (Train)";
		case 571: vehinfo = "Kart";
		case 572: vehinfo = "Mower";
		case 573: vehinfo = "Dune";
		case 574: vehinfo = "Sweeper";
		case 575: vehinfo = "Broadway";
		case 576: vehinfo = "Tornado";
		case 577: vehinfo = "AT400";
		case 578: vehinfo = "DFT-30";
		case 579: vehinfo = "Huntley";
		case 580: vehinfo = "Stafford";
		case 581: vehinfo = "BF-400";
		case 582: vehinfo = "Newsvan";
		case 583: vehinfo = "Tug";
		case 584: vehinfo = "Petrol Trailer";
		case 585: vehinfo = "Emperor";
		case 586: vehinfo = "Wayfarer";
		case 587: vehinfo = "Euros";
		case 588: vehinfo = "Hotdog";
		case 589: vehinfo = "Club";
		case 590: vehinfo = "Freight Box Trailer (Train)";
		case 591: vehinfo = "Article Trailer 3";
		case 592: vehinfo = "Andromada";
		case 593: vehinfo = "Dodo";
		case 594: vehinfo = "RC Cam";
		case 595: vehinfo = "Launch";
		case 596: vehinfo = "Police Car";
		case 597: vehinfo = "Police Car";
		case 598: vehinfo = "Police Car";
		case 599: vehinfo = "Police Ranger";
		case 600: vehinfo = "Picador";
		case 601: vehinfo = "Mr.Splashy";
		case 602: vehinfo = "Alpha";
		case 603: vehinfo = "Phoenix";
		case 604: vehinfo = "Glendale Shit";
		case 605: vehinfo = "Sadler Shit";
		case 606: vehinfo = "Baggage Trailer";
		case 607: vehinfo = "Baggage Trailer";
		case 608: vehinfo = "Tug Stairs Trailer";
		case 609: vehinfo = "Boxville";
		case 610: vehinfo = "Farm Trailer";
		case 611: vehinfo = "Utility Trailer";
		default: vehinfo = "ERROR VEHICLE NOT FOUND";
	}
	return vehinfo;
}
	
ConvertDatetoName(Month)
{
	new message[144];
	if(Month == 1){
		format(message, sizeof(message), "January");
	} else if(Month == 2){
		format(message, sizeof(message), "February");
	} else if(Month == 3){
		format(message, sizeof(message), "March");
	} else if(Month == 4){
		format(message, sizeof(message), "April");
	} else if(Month == 5){
		format(message, sizeof(message), "May");
	} else if(Month == 6){
		format(message, sizeof(message), "June");
	} else if(Month == 7){
		format(message, sizeof(message), "July");
	} else if(Month == 8){
		format(message, sizeof(message), "August");
	} else if(Month == 9){
		format(message, sizeof(message), "September");
	} else if(Month == 10){
		format(message, sizeof(message), "October");
	} else if(Month == 11){
		format(message, sizeof(message), "November");
	} else if(Month == 12){
		format(message, sizeof(message), "December");
	} else {
		format(message, sizeof(message), "Something went wrong with the date???");
	}
	return message;
}
	
ConvertMilitaryTime(Hour, Minute)
{
	new message[144];
	if(Hour == 12){
		if(Minute <= 9){
			format(message, sizeof(message), "%i:0%i PM", (Hour), Minute);
		} else {
			format(message, sizeof(message), "%i:%i PM", (Hour), Minute);
		}
	} else if(Hour == 0){
		if(Minute <= 9){
			format(message, sizeof(message), "12:0%i AM", Minute);
		} else {
			format(message, sizeof(message), "12:%i AM", Minute);
		}       
	} else if(Hour > 12){
		if(Minute <= 9){
			format(message, sizeof(message), "%i:0%i PM", (Hour-12), Minute);
		} else {
			format(message, sizeof(message), "%i:%i PM", (Hour-12), Minute);
		}
	} else {
		if(Minute <= 9){
			format(message, sizeof(message), "%i:0%i AM", (Hour), Minute);
		} else {
			format(message, sizeof(message), "%i:%i AM", (Hour), Minute);
		}
	}
	return message;
}
	
GetTime()
{
	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	foreach(Player, i){
		TextDrawSetString(TheTime[i], ConvertMilitaryTime(Hour, Minute));
		TextDrawShowForPlayer(i, TheTime[i]);
	}
}

GetPlayerFactionLeader(playerid)
{
	new PFactionLead[12];
	if(PlayerInfo[playerid][FactionLeader] == 1){
		format(PFactionLead, sizeof(PFactionLead), "Yes");
	} else if(PlayerInfo[playerid][FactionLeader] == 0){
		format(PFactionLead, sizeof(PFactionLead), "No");
	}
	return PFactionLead;
}

GetFactionPerm(factionid, id)
{
	new Permissions[5];
	if(FactionInfo[factionid][FactionPermissions][id] == 1){
		format(Permissions, sizeof(Permissions), "Yes");
	} else if(FactionInfo[factionid][FactionPermissions][id] == 0){
		format(Permissions, sizeof(Permissions), "No");
	}
	return Permissions;
}

GetRankPerm(factionid, rankid, id)
{
	new Permissions[5];
	if(AllFactionRanksPermissions[factionid][rankid][id] == 1){
		format(Permissions, sizeof(Permissions), "Yes");
	} else if(AllFactionRanksPermissions[factionid][rankid][id] == 0){
		format(Permissions, sizeof(Permissions), "No");
	}
	return Permissions;
}

GetLicensePass(id)
{
	new Pass[11];
	if(id == 1){
		format(Pass, sizeof(Pass), "Passed");
	} else if(id == 0){
		format(Pass, sizeof(Pass), "No License");
	}
	return Pass;
}

stock GetLicenseNames(licenseid)
{
	new licencename[30];
		
	switch(licenseid)
	{
		case 1: licencename = "drivers";
		case 2: licencename = "airplane";
		case 3: licencename = "weapon";
		case 4: licencename = "boating";
		case 5: licencename = "fishing";
	}
	return licencename;
}


stock GetAdminRanks(admin_rank_id) /* A default list of all the Admin Ranks */
{
	new adminrank[30];
		
	switch(admin_rank_id)
	{
		case 0: adminrank = "Administration_Removed";
		case 1: adminrank = "Moderator";
		case 2: adminrank = "Junior Admin";
		case 3: adminrank = "General Admin";
		case 4: adminrank = "Senior Admin";
		case 5: adminrank = "Head Admin";
		case 6: adminrank = "Executive Admin";
		default: adminrank = "Community Owner";
	}
	return adminrank;
}

stock GetPlayerHelperRank(playerid) /* A default list of all the Helper Ranks */
{
	new phelperrank[30];
		
	switch(PlayerInfo[playerid][Helper])
	{
		case 1: phelperrank = "Helper";
		case 2: phelperrank = "Senior Helper";
		case 3: phelperrank = "Head Helper";
		case 4: phelperrank = "Director of Public Relations";
	}
	return phelperrank;
}


stock JobNames(jobid)
{
	new jobname[20];
		
	switch(jobid)
	{
		case 0: format(jobname, sizeof(jobname), "None");
		case 1: format(jobname, sizeof(jobname), "Mechanic");
		case 2: format(jobname, sizeof(jobname), "Lawyer");
		case 3: format(jobname, sizeof(jobname), "Pizza Delivery");
		case 4: format(jobname, sizeof(jobname), "Business Salesmen");
	}
	return jobname;
}
stock JobDescriptions(jobid)
{
	new jobdesc[128];
		
	switch(jobid)
	{
		case 0: format(jobdesc, sizeof(jobdesc), "nothing, because you have no side job!");
		case 1: format(jobdesc, sizeof(jobdesc), "respond to calls for mechanics. /jobhelp to find out more about your job!");
		case 2: format(jobdesc, sizeof(jobdesc), "help people out who have warrants. /jobhelp to find out more about your job!");
		case 3: format(jobdesc, sizeof(jobdesc), "you deliver pizzas to marked houses. /jobhelp to find out more about your job!");
		case 4: format(jobdesc, sizeof(jobdesc), "you sell products to people who own business. /jobhelp to find out more about your job!");
	}
	return jobdesc;
}
stock JobCmds(jobid)
{
	new jobcmds[128];
		
	switch(jobid)
	{
		case 0: format(jobcmds, sizeof(jobcmds), "");
		case 1: format(jobcmds, sizeof(jobcmds), "/fix");
		case 2: format(jobcmds, sizeof(jobcmds), "/defend");
		case 3: format(jobcmds, sizeof(jobcmds), "/deliverpizzas");
		case 4: format(jobcmds, sizeof(jobcmds), "/sellproducts, /buyproducts");
	}
	return jobcmds;
}
stock JobObjectid(jobid)
{
	new jobobj;
		
	switch(jobid)
	{
		case 0: jobobj = 19300;
		case 1: jobobj = 19627;
		case 2: jobobj = 1247;
		case 3: jobobj = 1582;
		case 4: jobobj = 1292;
	}
	return jobobj;
}
stock GenderIdentification3(genderid)
{
	new gender[8];
		
	switch(genderid)
	{
		case 1: format(gender, sizeof(gender), "his");
		case 2: format(gender, sizeof(gender), "her");
	}
	return gender;
}
stock GenderIdentification2(genderid)
{
	new gender[8];
		
	switch(genderid)
	{
		case 1: format(gender, sizeof(gender), "him");
		case 2: format(gender, sizeof(gender), "her");
	}
	return gender;
}
stock GenderIdentification(genderid)
{
	new gender[8];
		
	switch(genderid)
	{
		case 1: format(gender, sizeof(gender), "Male");
		case 2: format(gender, sizeof(gender), "Female");
	}
	return gender;
}

stock GetAdminRanksC(admin_rank_id) /* A default list of all the Admin Ranks */
{
	new adminrankc[7];
		
	switch(admin_rank_id)
	{
		case 0: adminrankc = "FFFFFF";
		case 1: adminrankc = "6304FD";
		case 2: adminrankc = "6495ED";
		case 3: adminrankc = "00FF00";
		case 4: adminrankc = "F4A460";
		case 5: adminrankc = "FF0000";
		case 6: adminrankc = "8B0000";
		default: adminrankc = "00FFFF";
	}
	return adminrankc;
}

stock GetHelperRank(helper_rank_id) /* A default list of all the Helper Ranks */
{
	new helperrank[30];
		
	switch(helper_rank_id)
	{
		case 1: helperrank = "Helper";
		case 2: helperrank = "Senior Helper";
		case 3: helperrank = "Head Helper";
		case 4: helperrank = "Director of Public Relations";
	}
	return helperrank;
}

stock GetBusinessesMusic(businesstype)
{
	new businessesm[256];

	switch(businesstype)
	{
		case 1: businessesm = "http://us2.internet-radio.com:8071/listen.pls";
		case 2: businessesm = "http://us1.internet-radio.com:8180/listen.pls";
		case 3: businessesm = "http://uk3.internet-radio.com:11128/listen.pls";
		case 4: businessesm = "http://uk4.internet-radio.com:30884/listen.pls";
		case 5: businessesm = "http://us3.internet-radio.com:8105/listen.pls";
	}
	return businessesm;
}


stock GetBusinesses(businessid)
{
	new businesses[30];
		
	switch(businessid)
	{
		case 1: businesses = "Ammunation";
		case 2: businesses = "24/7";
		case 3: businesses = "Binco";
		case 4: businesses = "Sex Shop";
		case 5: businesses = "Food Store";
	}
	return businesses;
}

stock GetVIPLevels(viplevel)
{
	new vipname[30];
		
	switch(viplevel)
	{
		case 0: vipname = "None";
		case 1: vipname = "Bronze VIP";
		case 2: vipname = "Silver VIP";
		case 3: vipname = "Gold VIP";
		case 4: vipname = "Platinum VIP";
	}
	return vipname;
}

	
forward TIME_SIGNCHECK();
forward SERVER_SECONDS_TIMER();
forward SERVER_HALFSECOND_TIMER();
forward SERVER_MILISECONDS_TIMER();
forward OnBusinessesLoadData();
forward OnVehiclesLoadData();
forward OnGateLoadData();
forward OnSettingsLoadData();
forward OnObjectsLoadData();
forward OnHospitalLoadData();
forward OnArrestPointLoadData();
forward OnArrestPointZoneLoadData();
forward OnJobLoadData();
forward OnInteriorLoadData();
forward OnDMVLoadData();
forward OnFactionLoadData();
forward OnFactionRanksLoadData();
forward OnFactionLockerItemsLoadData();
forward OnFactionLockerLoadData();
forward OnATMLoadData();
forward OnDealershipsLoadData();
forward OnAirportFastTravelLoadData();
forward OnHouseLoadData();

public SERVER_HALFSECOND_TIMER()
{
	// Comment
}


public SERVER_SECONDS_TIMER()
{
	// Dropped item timelimit
	for(new w = 0; w <= MAX_DROPS; w++){
		if(LastDroppedItemID[w] == 1){
			if(DroppedItemsInfo[w][DITime] >= 1){
				DroppedItemsInfo[w][DITime] = (DroppedItemsInfo[w][DITime] - 1);
				if(DroppedItemsInfo[w][DITime] <= 0){
					LastDroppedItemID[w] = 0;
					DestroyDynamicObject(DroppedItemsInfo[w][DIIcon]);
					DroppedItemsInfo[w][DIX] = 0;
					DroppedItemsInfo[w][DIY] = 0;
					DroppedItemsInfo[w][DIZ] = 0;
					DroppedItemsInfo[w][DIA] = 0;
					DroppedItemsInfo[w][DIItem] = 0;
					DroppedItemsInfo[w][DIItemC] = 0;
					DroppedItemsInfo[w][DITime] = 0;
					DroppedItemsInfo[w][DIPID] = 65535;
					DroppedItemsInfo[w][DIWorld] = 0;
					DroppedItemsInfo[w][DIInt] = 0;
				}
			}
		}
	}
	
	
	// SpeedHack Warning
	foreach(Player, i)
	{
		if(PlayerInfo[i][Online] == 1 && PlayerInfo[i][Admin] <= 1){
			new Float: velocityX, Float: velocityY, Float: velocityZ;
			if(IsPlayerInAnyVehicle(i) == 1){
				GetVehicleVelocity (GetPlayerVehicleID(i), velocityX, velocityY, velocityZ);
				new speed = floatround (floatsqroot (floatpower (velocityX, 2) + floatpower (velocityY, 2) + floatpower (velocityZ, 2)) * 136.666667, floatround_round);
				if(speed >= 175) {
					new uppername[30], message[144], newname[30];
					newname = GetPlayerNameEx(i);
					for(new bb = 0; bb < sizeof(newname); bb++)
					{
						uppername[bb] = toupper(newname[bb]);
					}
					format(message, sizeof(message), "%s(%i) IS CURRENTlY GOING %i MPH, THEY MAY BE SPEED HACKING!", str_replace("_", " ", uppername), i, speed);
					ClientMessenger(0, "FA8072", 4, message);
					newname[0] = '\0';
					message[0] = '\0';
					uppername[0] = '\0';
				}
			} else {
				GetPlayerVelocity(i, velocityX, velocityY, velocityZ);
				new speed = floatround (floatsqroot (floatpower (velocityX, 2) + floatpower (velocityY, 2) + floatpower (velocityZ, 2)) * 136.666667, floatround_round);
				if(speed >= 165) {
					new uppername[30], message[144], newname[30];
					newname = GetPlayerNameEx(i);
					for(new bb = 0; bb < sizeof(newname); bb++)
					{
						uppername[bb] = toupper(newname[bb]);
					}
					format(message, sizeof(message), "%s(%i) IS CURRENTlY GOING %i MPH, THEY MAY BE SPEED HACKING!", str_replace("_", " ", uppername), i, speed);
					ClientMessenger(0, "FA8072", 4, message);
					newname[0] = '\0';
					message[0] = '\0';
					uppername[0] = '\0';
				}
			}
		}
	}
	
	
	// Vehicle Tracker System
	foreach(Player, i)
	{
		if(PlayerInfo[i][Online] == 1){
			if(PlayerInfo[i][TempInfo][14] != 0){
				new vehid = PlayerInfo[i][PVehsID][PlayerInfo[i][TempInfo][14]];
				GetVehiclePos(vehid, Vehicles[vehid][VehX], Vehicles[vehid][VehY], Vehicles[vehid][VehZ]);
				DestroyDynamicCP(PlayerInfo[i][CPLoc]);
				PlayerInfo[i][CPLoc] = CreateDynamicCP(Vehicles[vehid][VehX], Vehicles[vehid][VehY], Vehicles[vehid][VehZ], 3, -1, -1, i, 999999);
			}
		}
	}
	
	
	// DMV Test
	foreach(Player, i)
	{
		if(PlayerInfo[i][TempInfo][8] != 0 && PlayerInfo[i][Online] == 1){
			if(!IsPlayerInAnyVehicle(i)){
				GameTextForPlayer(i, "Test Failed!", 1500, 1);
				PlayerTextDrawDestroy(i, PlayerInfo[i][GameText]);
				KillTimer(PlayerInfo[i][TempInfo][3]);
				PlayerInfo[i][GameText] = CreatePlayerTextDraw(i, 160, 380, "~r~You can not leave your vehicle when taking a test!");
				PlayerTextDrawShow(i, PlayerInfo[i][GameText]);
				PlayerInfo[i][TempInfo][3] = SetTimerEx("RemovePlayerText", 3000, false, "i", i);
				PlayerInfo[i][AllEditingOptions] = 0;
				PlayerInfo[i][AllEditingOptions2] = 0;
				DestroyVehicle(PlayerInfo[i][AllEditingOptions3][0]);
				LastVehicleID[PlayerInfo[i][AllEditingOptions3][0]] = 0;
				PlayerInfo[i][AllEditingOptions3][0] = 0;
				DestroyDynamicCP(PlayerInfo[i][CPLoc]);
				PlayerInfo[i][TempInfo][8] = 0;

			} else if(GetPlayerVehicleID(i) != PlayerInfo[i][AllEditingOptions3][0]){
				GameTextForPlayer(i, "Test Failed!", 1500, 1);
				PlayerTextDrawDestroy(i, PlayerInfo[i][GameText]);
				KillTimer(PlayerInfo[i][TempInfo][3]);
				PlayerInfo[i][GameText] = CreatePlayerTextDraw(i, 160, 380, "~r~You can not leave your vehicle when taking a test!");
				PlayerTextDrawShow(i, PlayerInfo[i][GameText]);
				PlayerInfo[i][TempInfo][3] = SetTimerEx("RemovePlayerText", 3000, false, "i", i);
				PlayerInfo[i][AllEditingOptions] = 0;
				PlayerInfo[i][AllEditingOptions2] = 0;
				DestroyVehicle(PlayerInfo[i][AllEditingOptions3][0]);
				LastVehicleID[PlayerInfo[i][AllEditingOptions3][0]] = 0;
				PlayerInfo[i][AllEditingOptions3][0] = 0;
				DestroyDynamicCP(PlayerInfo[i][CPLoc]);
				PlayerInfo[i][TempInfo][8] = 0;
			}
		}
	}
	
	// If lawyer job has time on it, then start counting down on it
	foreach(Player, i)
	{
		if(PlayerInfo[i][Online] == 1) {
			if(PlayerInfo[i][TempInfo][22] == 1 && PlayerInfo[i][Job] == 2){
				new largequery[150];
				if(PlayerInfo[i][JobItems][PlayerInfo[i][Job]] >= 0){
					PlayerInfo[i][JobItems][PlayerInfo[i][Job]] = (PlayerInfo[i][JobItems][PlayerInfo[i][Job]]-1);
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_jobs` SET `jobitem` = %i WHERE `playerid` = %i AND `jobid` = %i", PlayerInfo[i][JobItems][PlayerInfo[i][Job]], PlayerInfo[i][DBID], PlayerInfo[i][Job]);
					mysql_query(MySQL, largequery);
				} else {
					PlayerInfo[i][JobItems][PlayerInfo[i][Job]] = 0;
					PlayerInfo[i][TempInfo][22] = 0;
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_jobs` SET `jobitem` = 0 WHERE `playerid` = %i AND `jobid` = %i", PlayerInfo[i][DBID], PlayerInfo[i][Job]);
					mysql_query(MySQL, largequery);
				}
				largequery[0] = '\0';
			}
		}
	}
	
	//To stop animation after a certain time.
	foreach(Player, i)
	{   
		if(PlayerInfo[i][TempInfo][2] >= 1){
			PlayerInfo[i][TempInfo][2] = (PlayerInfo[i][TempInfo][2]-1);
			if(PlayerInfo[i][TempInfo][2] <= 0){
				SetPlayerSpecialAction(i, SPECIAL_ACTION_NONE);
			}
		}
	}
	
	
	//Player is arrested, check time
	foreach(Player, i)
	{
		if(PlayerInfo[i][Online] == 1) {
			if(PlayerInfo[i][TempInfo][12] >= 1){
				PlayerInfo[i][TempInfo][12] = (PlayerInfo[i][TempInfo][12]-1);
				//printf("3: %i & %i", PlayerInfo[i][TempInfo][12], i);
				if(PlayerInfo[i][TempInfo][12] <= 0){
					new largequery[256], message[144];
					mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `player_arrested` WHERE `playerid` = %i LIMIT 1", PlayerInfo[i][DBID]);
					mysql_query(MySQL, largequery);
					mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `arrestpoints` WHERE `id` = %i LIMIT 1", cache_get_field_content_int(0, "arrestid"));
					mysql_query(MySQL, largequery);
					SetPlayerPos(i, cache_get_field_content_float(0, "xend"), cache_get_field_content_float(0, "yend"), cache_get_field_content_float(0, "zend"));
					SetPlayerVirtualWorld(i, cache_get_field_content_int(0, "worldend"));
					SetPlayerInterior(i, cache_get_field_content_int(0, "interiorend"));
					FreezePlayerAfterTeleport(i, 2500);
					
					PlayerTextDrawDestroy(i, PlayerInfo[i][GameText]);
					KillTimer(PlayerInfo[i][TempInfo][3]);
					PlayerInfo[i][GameText] = CreatePlayerTextDraw(i, 160, 380, "~g~You have served your time. You're free to go!");
					PlayerTextDrawShow(i, PlayerInfo[i][GameText]);
					PlayerInfo[i][TempInfo][3] = SetTimerEx("RemovePlayerText", 3000, false, "i", i);
					
					mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `player_arrested` WHERE `playerid` = %i", PlayerInfo[i][DBID]);
					mysql_query(MySQL, largequery);
					
					largequery[0] = '\0';
					message[0] = '\0';
				}
			}
		}
	}
	
	// AFK Checker
	for(new afk = 0; afk <= MAX_PLAYERS; afk++)
	{
		PlayerInfo[afk][TempInfo][11] = 1;
	}
	
	// Anti Cheat System
	foreach(Player, i)
	{
		if(PlayerInfo[i][Online] == 1){
			if(PlayerInfo[i][TempInfo][13] == 0){
				new largequery[256], message[144];
				new ACWeapons[50], ACWeaponsAmmo[50];
				for(new b = 0; b < 12; b++){
					GetPlayerWeaponData(i, b, ACWeapons[b], ACWeaponsAmmo[b]);
					if(ACWeaponsAmmo[b] >= 1){
						if(PlayerInfo[i][Weapons][b] != ACWeapons[b] && ACWeapons[b] != 0 && ACWeapons[b] != 46 && ACWeapons[b] != 40){
							if(PlayerInfo[i][TempInfo][16] != 2 && ACWeapons[b] != 23){ // Does player have SD tazer out.
								new playerip[16], Year, Month, Day, Hour, Minute, Second;
								GetPlayerIp(i, playerip, sizeof(playerip));
								getdate(Year, Month, Day);
								gettime(Hour, Minute, Second);
								if(PlayerInfo[i][TempInfo][13] == 0){
									//mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `banned` (`BannedID`,`BannerID`,`BannedIP`,`BanReason`,`Bandate_d`,`Bandate_m`,`Bandate_y`,`Bantime_s`,`Bantime_m`,`Bantime_h`) VALUES ('%i','-1','%e','Anti-Cheat [%e]','%i','%i','%i','%i','%i','%i')", PlayerInfo[i][DBID], playerip, GetWeaponNameInfo(ACWeapons[b]), Day, Month, Year, Second, Minute, Hour);
									//mysql_query(MySQL, largequery);
									mysql_query(MySQL, "SELECT * FROM `banned` WHERE `Banned` = 1");
									foreach(Player, a){
										if(PlayerInfo[a][Online] == 1) {
											format(message, sizeof(message), "[Anti-Cheat] %s has been banned for attempting to hack in a %s (Players Banned: %i)", str_replace("_", " ", GetPlayerNameEx(i)), GetWeaponNameInfo(ACWeapons[b]), cache_num_rows());
											ClientMessenger(a, "FA8072", 3, message);
										}
									}
									ClientMessenger(i, "FA8072", 3, "If you think your ban was a mistake, take a screenshot of this message, your current location, and post a ban appeal.");
									ClientMessenger(i, "FA8072", 3, "Please explain exactly what you were doing that triggered the anti-cheat system to ban you, and we will look into it.");
									ClientMessenger(i, "FA8072", 3, "In most cases, the anti-cheat does not make mistakes. So lying in your ban appeal makes it more difficult to be unbanned.");
									PlayAudioStreamForPlayer(i, "https://raw.githubusercontent.com/chaos12135/sarp_forum/master/_files/ban_hammer.mp3");
									//SetTimerEx("delaykick", 500, false, "i", i);
								} else {
									break;
								}
							}   
						}
					}
				}
				ACWeapons[0] = '\0';
				ACWeaponsAmmo[0] = '\0';
				largequery[0] = '\0';
				message[0] = '\0';
			}
		}
	}
}

public SERVER_MILISECONDS_TIMER()
{
	foreach(Player, i)
	{
		if(PlayerInfo[i][Online] == 1){
			if(PlayerInfo[i][TempInfo][16] == 1){
				SetPlayerArmedWeapon(i, 0);
			} else if(PlayerInfo[i][TempInfo][16] == 2){
				SetPlayerArmedWeapon(i, 23);
			}
		}
	}
}

public TIME_SIGNCHECK()
{
	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	new Year, Month, Day;
	getdate(Year, Month, Day);
	new largequery[1000], slargequery[1000];
	
	printf("%i:%i:%i", Hour, Minute, Second);
	GetTime();
	if(PaycheckFix != 0){
		PaycheckFix = (PaycheckFix - 1);
	}
	
	
	// Update account information
	foreach(Player, i)
	{
		if(PlayerInfo[i][Online] == 1){
			PlayerInfo[i][Minutes][0] = (PlayerInfo[i][Minutes][0] + 1);
			PlayerInfo[i][Minutes][1] = (PlayerInfo[i][Minutes][1] + 1);
			PlayerInfo[i][Minutes][2] = (PlayerInfo[i][Minutes][2] + 1);
			GetPlayerPos(i, PlayerInfo[i][PosX],PlayerInfo[i][PosY],PlayerInfo[i][PosZ]);
			PlayerInfo[i][WorldID] = GetPlayerVirtualWorld(i);
			PlayerInfo[i][InteriorID] = GetPlayerInterior(i);
			GetPlayerFacingAngle(i, PlayerInfo[i][FacingAngle]);
			GetPlayerHealth(i,PlayerInfo[i][HP]);
			GetPlayerArmour(i, PlayerInfo[i][Armor]);
			
			format(slargequery, sizeof(slargequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `a`='%f', `world`=%i, `interior`=%i,", PlayerInfo[i][PosX],PlayerInfo[i][PosY],PlayerInfo[i][PosZ],PlayerInfo[i][FacingAngle],PlayerInfo[i][WorldID], PlayerInfo[i][InteriorID]);
			strcat(largequery, slargequery);
			format(slargequery, sizeof(slargequery), "`money`=%i, `health`='%f', `armor`='%f', `minutes`=%i, `tminutes`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[i][Money],PlayerInfo[i][HP],PlayerInfo[i][Armor], PlayerInfo[i][Minutes][0], PlayerInfo[i][Minutes][2], PlayerInfo[i][DBID]);
			strcat(largequery, slargequery);
			mysql_query(MySQL, largequery);
			largequery[0] = '\0';
			slargequery[0] = '\0';
		}
	}
	
	// I can't find a proper place for this, it just updates the state departments money every 60 seconds.
	mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `tax_percentage` SET `treassury`=%i WHERE `id` = 1 LIMIT 1", TaxMoney);
	mysql_query(MySQL, largequery);
	
	
	// Update time played
	if(FDay != Day){
		foreach(Player, i)
		{
			FDay = Day;
			FMonth = Month;
			FYear = Year;
			PlayerInfo[i][Minutes][1] = 1;
			mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `time_played` (`player_id`, `month`, `day`, `year`, `played`) VALUES ('%i', '%i', '%i', '%i', '1')", PlayerInfo[i][DBID], Month, Day, Year);
			mysql_query(MySQL, largequery);
			largequery[0] = '\0';
		}
	} else {
		foreach(Player, i)
		{
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `time_played` SET `played` = %i WHERE `player_id` = %i AND `day` = %i AND `month` = %i AND `year` = %i", PlayerInfo[i][Minutes][1], PlayerInfo[i][DBID], Day, Month, Year);
			mysql_query(MySQL, largequery);
			largequery[0] = '\0';
		}
	}
	
	// Check Muted
	foreach(Player, i)
	{
		if(PlayerInfo[i][Online] == 1){
			if(PlayerInfo[i][NewbieMuteHour] != -1 && PlayerInfo[i][NewbieMuteHour] != 0){
				PlayerInfo[i][NewbieMuteHour] = (PlayerInfo[i][NewbieMuteHour]-1);
				if(PlayerInfo[i][NewbieMuteHour] <= 0){
					new message[144]; 
					ClientMessenger(i, "FF0000", 1, "Your newbie mute has expired. You're free to use newbie again!");
					format(message, sizeof(message), "%s has been automatically unmuted, as his mute has expired!", str_replace("_", " ", GetPlayerNameEx(i)));
					ClientMessenger(0, "FF0000", 6, message);
					PlayerInfo[i][NewbieMuteHour] = 0;
					PlayerInfo[i][NewbieMuted] = 0;
					message[0] = '\0';
				}
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_newbie` SET `muted`=%i, `unmute_hours` = %i WHERE `playerid` = %i LIMIT 1", PlayerInfo[i][NewbieMuted], PlayerInfo[i][NewbieMuteHour], PlayerInfo[i][DBID]);
				mysql_query(MySQL, largequery);
				largequery[0] = '\0';
			} else if(PlayerInfo[i][NewbieMuteHour] == -1) {
				PlayerInfo[i][NewbieMuteHour] = 0;
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_newbie` SET `unmute_hours` = 0 WHERE `playerid` = %i LIMIT 1", PlayerInfo[i][DBID]);
				mysql_query(MySQL, largequery);
				largequery[0] = '\0';
			}
		}
	}
	
	
	// Special system for checking hourly things
	if(Minute == 59 || Minute == 0){
		new message[144]; 
		if(PaycheckFix == 0){
			//Paycheck
			PaycheckFix = 5;
			print("PAYCHECK HAS ARRIVED!");
			foreach(Player, i)
			{
				SetPlayerTime(i, Hour, Minute);
				new RandomCheckNumber = random(9999);
				RandomCheckNumberIsAbovek:
				if(RandomCheckNumber < 1000){
					RandomCheckNumber = random(9999);
					goto RandomCheckNumberIsAbovek;
				} else {
					format(message, sizeof(message), "{00FFFF}* Your check has arrived. /signcheck %i *", RandomCheckNumber);
					SendClientMessage(i, -1, message);
					PlayerInfo[i][TempInfo][18] = (RandomCheckNumber);
				}
			}
			
			
			// Checks all that are banned, for a unban day of today
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `banned` WHERE `Banned` = 1 AND `UnBandate_m` = %i AND `UnBandate_d` = %i AND `UnBandate_y` = %i", Month, Day, Year);
			mysql_query(MySQL, largequery);
			for(new a = 0; a < cache_num_rows(); a++){
				new tempname[MAX_PLAYER_NAME], tempip[16];
				cache_get_field_content(a, "BannedIP", tempip);
				mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", cache_get_field_content_int(a, "BannedID"));
				mysql_query(MySQL, largequery);
				cache_get_field_content(0, "name", tempname);
				printf("[BAN SYSTEM] The account: %s(%s) has been automatically unbanned!", tempname, tempip);
				foreach(Player, i)
				{
					if(PlayerInfo[i][Online] == 1 && PlayerInfo[i][Admin] >= 2){
						format(message, sizeof(message), "The account %s(%i) with IP:%s has been unbanned automatically!", str_replace("_", " ", tempname), cache_get_field_content_int(0, "id"), tempip);
						ClientMessenger(i, "FF0000", 4, message);
					}
				}
				tempip[0] = '\0';
				tempname[0] = '\0';
				largequery[0] = '\0';
				//mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `banned` WHERE `Banned` = 1 AND `UnBandate_m` = %i AND `UnBandate_d` = %i AND `UnBandate_y` = %i", Month, Day, Year);
				//mysql_query(MySQL, largequery);
			}
			largequery[0] = '\0';
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `banned` SET `Banned` = 0 WHERE `Banned` = 1 AND `UnBandate_m` = %i AND `UnBandate_d` = %i AND `UnBandate_y` = %i", Month, Day, Year);
			mysql_query(MySQL, largequery);
			largequery[0] = '\0';
			
			
			// Checks all VIPS for expiration of today
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `vips` WHERE `expired` = 0 AND `viptime_m` = %i AND `viptime_d` = %i AND `viptime_y` = %i", Month, Day, Year);
			mysql_query(MySQL, largequery);
			for(new a = 0; a < cache_num_rows(); a++){
				new tempname[MAX_PLAYER_NAME], fixid;
				fixid = cache_get_field_content_int(a, "vipid");
				mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", fixid);
				mysql_query(MySQL, largequery);
				cache_get_field_content(0, "name", tempname);
				printf("[VIP SYSTEM] The account: %s VIP has expired!", tempname);
				foreach(Player, i)
				{
					if(PlayerInfo[i][Online] == 1){
						if(PlayerInfo[i][Admin] >= 2){
							format(message, sizeof(message), "The account %s(%i) VIP has expired!", str_replace("_", " ", tempname), fixid);
							ClientMessenger(i, "FF0000", 4, message);
						}
						if(PlayerInfo[i][DBID] == fixid){
							PlayerInfo[i][VIP] = 0;
							ClientMessenger(i, "FF0000", 3, "Your VIP has expired! Sorry :(");
						}
					}
				}
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `vip` = 0 WHERE `id` = %i ", fixid);
				mysql_query(MySQL, largequery);
				largequery[0] = '\0';
				//mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `vips` WHERE `expired` = 0 AND `viptime_m` = %i AND `viptime_d` = %i AND `viptime_y` = %i", Month, Day, Year);
				//mysql_query(MySQL, largequery);
			}
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `vips` SET `expired` = 1 WHERE `expired` = 0 AND `viptime_m` = %i AND `viptime_d` = %i AND `viptime_y` = %i", Month, Day, Year);
			mysql_query(MySQL, largequery);
			largequery[0] = '\0';
			
			
		}
		message[0] = '\0';
	}
	largequery[0] = '\0';
	slargequery[0] = '\0';
	SetWorldTime(Hour);
}


/**********************************
 *                                *
 *           Databases            *
 *                                *
 **********************************/

public OnGameModeInit()
{
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	ShowPlayerMarkers(1);
	LimitPlayerMarkerRadius(99999.0);
	UsePlayerPedAnims();
	LimitGlobalChatRadius(20.0);
	SetTimer("TIME_SIGNCHECK", 60000, true);
	SetTimer("SERVER_SECONDS_TIMER", 1000, true);
	SetTimer("SERVER_HALFSECOND_TIMER", 500, true);
	SetTimer("SERVER_MILISECONDS_TIMER", 250, true);
	MySQL = mysql_connect("127.0.0.1", "root", "samp", "rcon", 3306); // IP, USERNAME, DATABASE, PASSWORD, PORT
	//MySQL_Forum = mysql_connect("192.168.0.6", "samp_forum_check", "forums", "331c69d68db871f48255feeb7af12e9b70c0a1a9", 3306); // IP, USERNAME, DATABASE, PASSWORD, PORT
	SetGameModeText("JPM 9.2a");
	/*
	ConnectNPC("Unknown_Doctor","spawn_doctor_1");
	ConnectNPC("Agent_23","spawn_agent_1");
	ConnectNPC("Agent_89","spawn_agent_2");
	ConnectNPC("Agent_14","spawn_agent_3");
	ConnectNPC("Sergeant_Johnson","spawn_army_1");
	ConnectNPC("Private_Adams","spawn_army_2");
	ConnectNPC("Private_Waggler","spawn_army_3");
	*/
	
	mysql_query(MySQL, "SELECT * FROM `accounts`");
	if(cache_num_rows() == 0) {
		new CreateTable[3000];
		strcat(CreateTable, "CREATE TABLE accounts (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "x float NOT NULL,");
		strcat(CreateTable, "y float NOT NULL,");
		strcat(CreateTable, "z float NOT NULL,");
		strcat(CreateTable, "a float NOT NULL,");
		strcat(CreateTable, "world int(2) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "interior int(2) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "online int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "name varchar(255) NOT NULL,");
		strcat(CreateTable, "password varchar(255) NULL,");
		strcat(CreateTable, "apassword int(4) NULL,");
		strcat(CreateTable, "level int(11) NOT NULL DEFAULT '1',");
		strcat(CreateTable, "respectpoints int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "basictutorial tinyint(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "money int(11) NOT NULL,");
		strcat(CreateTable, "bank int(255) NOT NULL,");
		strcat(CreateTable, "tikis int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "health float NOT NULL DEFAULT '100',");
		strcat(CreateTable, "armor float NOT NULL DEFAULT '0',");
		strcat(CreateTable, "dead int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "sex int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "married int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "DOB_MM varchar(2) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "DOB_DD varchar(2) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "DOB_YYYY varchar(4) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "vehicle_licence int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "skin int(3) NOT NULL DEFAULT '299',");
		strcat(CreateTable, "biz int(2) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "vip int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "minutes int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "tminutes int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "signcheck_missed int(5) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "house int(5) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "job int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "faction int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "faction_level int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "faction_leader int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "faction_duty int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "admin int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "faction_mod int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "property_mod int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "helper int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "developer int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "famed int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "forum_id int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "warrants int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "crimes_committed int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "newbietag varchar(30) NOT NULL DEFAULT 'Newbie',");
		strcat(CreateTable, "fakename varchar(30) NULL,");
		strcat(CreateTable, "lastlogin_date varchar(20) NOT NULL DEFAULT 'ERROR',");
		strcat(CreateTable, "lastlogin_time varchar(20) NOT NULL DEFAULT 'ERROR',");
		strcat(CreateTable, "lastlogin_ip varchar(20) NOT NULL DEFAULT 'ERROR',");
		strcat(CreateTable, "register_ip varchar(20) NOT NULL DEFAULT 'ERROR',");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING ACCOUNT TABLE");
		print("\n- - - - - - - - - - - - - - - - - -");
		print("Thank you for testing out this gamemode!");
		print("According to this setup. This is the first time you have run this gamemode.");
		print("The first question you may ask yourself is, how do I give myself admin?");
		print("You need to login as a rcon admin. So if you know your rcon password from..");
		print("..the server.cfg file, then all you do is type that rcon password while..");
		print("..player IG. So example is that if your rcon password was 'apple', then you..");
		print("need to type /rcon login apple");
		print("\n");
		print("If it all worked correctly, you'll get a message saying that you logged in as..");
		print(".. an admin. Then you can type /makeadmin <playerid/playername> 6");
		print("You will get a message saying that you have made yourself an admin.");
		print("\n");
		print("Once you are an executive admin, you can do /help or /adminhelp to find out..");
		print("..all the admin command and such. Seeing as this gamemode is new, and for..");
		print("..testing purposes only, there isn't entirely a lot to do on /adminhelp.");
		print("Feel free to mess around with command. If you have any questions about this..");
		print("..gamemode, please reply to me directly on SARP forums, or the thread itself.");
		print("Forum Name: Agent Cole Phelps");
		print("\n");
		print("(P.S. I recommend you know what you're doing before editing this gamemode!)");
		print("\n");
		print("Signed, J.P. Morgan");
		print("- - - - - - - - - - - - - - - - - -\n");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `businesses`");
	if(cache_num_rows() == 0) {
		new CreateTable[750];
		strcat(CreateTable, "CREATE TABLE businesses (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "x float NOT NULL,");
		strcat(CreateTable, "y float NOT NULL,");
		strcat(CreateTable, "z float NOT NULL,");
		strcat(CreateTable, "intx float NOT NULL,");
		strcat(CreateTable, "inty float NOT NULL,");
		strcat(CreateTable, "intz float NOT NULL,");
		strcat(CreateTable, "OwnerID int(1) NOT NULL,");
		strcat(CreateTable, "Type int(1) NOT NULL,");
		strcat(CreateTable, "Price int(11) NOT NULL,");
		strcat(CreateTable, "Original_Sell_Price int(11) NOT NULL,");
		strcat(CreateTable, "Stock int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "Money int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "StartWorld int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "StartInt int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "EndWorld int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "EndInt int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING BUSINESSES TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `factions_skins`");
	if(cache_num_rows() == 0) {
		new CreateTable[250];
		strcat(CreateTable, "CREATE TABLE factions_skins (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "skin_id int(11) NOT NULL,");
		strcat(CreateTable, "rank_id int(11) NOT NULL,");
		strcat(CreateTable, "faction_id int(11) NOT NULL,");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING FACTION SKINS TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `factions_locker_items`");
	if(cache_num_rows() == 0) {
		new CreateTable[750];
		strcat(CreateTable, "CREATE TABLE factions_locker_items (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "faction_id int(11) NOT NULL,");
		strcat(CreateTable, "rank_id int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "item int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "price int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING FACTION LOCKER ITEMS TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `factions_locker`");
	if(cache_num_rows() == 0) {
		new CreateTable[750];
		strcat(CreateTable, "CREATE TABLE factions_locker (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "x float NOT NULL,");
		strcat(CreateTable, "y float NOT NULL,");
		strcat(CreateTable, "z float NOT NULL,");
		strcat(CreateTable, "world int(11) NOT NULL,");
		strcat(CreateTable, "interior int(11) NOT NULL,");
		strcat(CreateTable, "faction_id int(11) NOT NULL,");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING FACTION LOCKER TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}   
	
	mysql_query(MySQL, "SELECT * FROM `airport_fasttravel`");
	if(cache_num_rows() == 0) {
		new CreateTable[750];
		strcat(CreateTable, "CREATE TABLE airport_fasttravel (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "x float NOT NULL,");
		strcat(CreateTable, "y float NOT NULL,");
		strcat(CreateTable, "z float NOT NULL,");
		strcat(CreateTable, "airport_id int(3) NOT NULL,");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING AIRPORT FAST TRAVEL TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `dmv_test`");
	if(cache_num_rows() == 0) {
		new CreateTable[500];
		strcat(CreateTable, "CREATE TABLE dmv_test (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "x float NOT NULL,");
		strcat(CreateTable, "y float NOT NULL,");
		strcat(CreateTable, "z float NOT NULL,");
		strcat(CreateTable, "a float NOT NULL,");
		strcat(CreateTable, "part int(5) NOT NULL,");
		strcat(CreateTable, "world int(11) NOT NULL,");
		strcat(CreateTable, "interior int(11) NOT NULL,");
		strcat(CreateTable, "dmv_id int(11) NOT NULL,");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING DMV TEST TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}
	
	
	mysql_query(MySQL, "SELECT * FROM `system_logs`");
	if(cache_num_rows() == 0) {
		new CreateTable[1000];
		strcat(CreateTable, "CREATE TABLE system_logs (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "playerid int(11) NOT NULL,");
		strcat(CreateTable, "month int(11) NOT NULL,");
		strcat(CreateTable, "day int(11) NOT NULL,");
		strcat(CreateTable, "year int(11) NOT NULL,");
		strcat(CreateTable, "hour int(11) NOT NULL,");
		strcat(CreateTable, "minute int(11) NOT NULL,");
		strcat(CreateTable, "second int(11) NOT NULL,");
		strcat(CreateTable, "rname varchar(35) NOT NULL,");
		strcat(CreateTable, "fname varchar(35) NOT NULL,");
		strcat(CreateTable, "detail varchar(144) NOT NULL,");
		strcat(CreateTable, "command varchar(144) NOT NULL,");
		strcat(CreateTable, "ip varchar(20) NOT NULL,");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING SYSTEM LOGS TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `factions_ranks`");
	if(cache_num_rows() == 0) {
		new CreateTable[1000];
		strcat(CreateTable, "CREATE TABLE factions_ranks (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "rank_name varchar(50) NOT NULL,");
		strcat(CreateTable, "rank_id int(11) NOT NULL,");
		strcat(CreateTable, "faction_id int(11) NOT NULL,");
		strcat(CreateTable, "department_radio int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "roadblock int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "fakebadge int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "mdc int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "warrant int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "psa int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "arrests int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "tressury int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "taxes int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "backup int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING FACTION RANKS TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `factions`");
	if(cache_num_rows() == 0) {
		new CreateTable[1000];
		strcat(CreateTable, "CREATE TABLE factions (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "factionlongname varchar(50) NOT NULL,");
		strcat(CreateTable, "factionshortname varchar(10) NOT NULL,");
		strcat(CreateTable, "factioncolor varchar(10) NOT NULL,");
		strcat(CreateTable, "department_radio int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "roadblock int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "fakebadge int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "mdc int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "warrant int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "psa int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "arrests int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "tressury int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "taxes int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "backup int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "queue int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "isfamily int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING FACTIONS TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `banned`");
	if(cache_num_rows() == 0) {
		new CreateTable[750];
		strcat(CreateTable, "CREATE TABLE banned (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "BannedID int(11) NOT NULL,");
		strcat(CreateTable, "BannerID int(11) NOT NULL,");
		strcat(CreateTable, "BannedIP varchar(50) NOT NULL,");
		strcat(CreateTable, "BanReason varchar(144) NOT NULL,");
		strcat(CreateTable, "Bandate_d int(5) NOT NULL,");
		strcat(CreateTable, "Bandate_m int(5) NOT NULL,");
		strcat(CreateTable, "Bandate_y int(5) NOT NULL,");
		strcat(CreateTable, "Bantime_s int(8) NOT NULL,");
		strcat(CreateTable, "Bantime_m int(8) NOT NULL,");
		strcat(CreateTable, "Bantime_h int(8) NOT NULL,");
		strcat(CreateTable, "UnBandate_d int(5) NOT NULL DEFAULT '31',");
		strcat(CreateTable, "UnBandate_m int(5) NOT NULL DEFAULT '12',");
		strcat(CreateTable, "UnBandate_y int(5) NOT NULL DEFAULT '9999',");
		strcat(CreateTable, "Banned int(1) NOT NULL DEFAULT '1',");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING BANNED TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `amessages`");
	if(cache_num_rows() == 0) {
		new CreateTable[250];
		strcat(CreateTable, "CREATE TABLE amessages (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "Name varchar(30) NOT NULL,");
		strcat(CreateTable, "LevelAdmin int(1) NOT NULL,");
		strcat(CreateTable, "PDBID int(11) NOT NULL,");
		strcat(CreateTable, "Message varchar(144) NOT NULL,");
		strcat(CreateTable, "date varchar(12) NOT NULL,");
		strcat(CreateTable, "time varchar(12) NOT NULL,");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING ADMIN MESSAGES TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `vehicles`");
	if(cache_num_rows() == 0) {
		new CreateTable[500];
		strcat(CreateTable, "CREATE TABLE vehicles (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "x float NOT NULL,");
		strcat(CreateTable, "y float NOT NULL,");
		strcat(CreateTable, "z float NOT NULL,");
		strcat(CreateTable, "a float NOT NULL,");
		strcat(CreateTable, "vehicleid int(3) NOT NULL,");
		strcat(CreateTable, "factionid int(2) NOT NULL,");
		strcat(CreateTable, "health float NOT NULL DEFAULT '1000',");
		strcat(CreateTable, "color1 int(3) NOT NULL,");
		strcat(CreateTable, "color2 int(3) NOT NULL,");
		strcat(CreateTable, "licenceplate varchar(50) NOT NULL,");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING VEHICLE TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `player_vehicles`");
	if(cache_num_rows() == 0) {
		new CreateTable[750];
		strcat(CreateTable, "CREATE TABLE player_vehicles (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT, ");
		strcat(CreateTable, "x float NOT NULL, ");
		strcat(CreateTable, "y float NOT NULL, ");
		strcat(CreateTable, "z float NOT NULL, ");
		strcat(CreateTable, "a float NOT NULL, ");
		strcat(CreateTable, "px float NOT NULL, ");
		strcat(CreateTable, "py float NOT NULL, ");
		strcat(CreateTable, "pz float NOT NULL, ");
		strcat(CreateTable, "pa float NOT NULL, ");
		strcat(CreateTable, "color1 int(3) NOT NULL DEFAULT '-1', ");
		strcat(CreateTable, "color2 int(3) NOT NULL DEFAULT '-1', ");
		strcat(CreateTable, "vehicle int(3) NOT NULL, ");
		strcat(CreateTable, "slot int(3) NOT NULL, ");
		strcat(CreateTable, "locked int(1) NOT NULL DEFAULT '0', ");
		strcat(CreateTable, "gps int(1) NOT NULL DEFAULT '0', ");
		strcat(CreateTable, "lowjack int(1) NOT NULL DEFAULT '0', ");
		strcat(CreateTable, "licenceplate varchar(50) NOT NULL,");
		strcat(CreateTable, "world int(3) NOT NULL DEFAULT '0', ");
		strcat(CreateTable, "interior int(3) NOT NULL DEFAULT '0', ");
		strcat(CreateTable, "playerid int(11) NOT NULL, ");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING PLAYER VEHICLES TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `player_weapons`");
	if(cache_num_rows() == 0) {
		new CreateTable[750];
		strcat(CreateTable, "CREATE TABLE player_weapons (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT, ");
		strcat(CreateTable, "weapon int(11) NOT NULL, ");
		strcat(CreateTable, "weapon_ammo int(11) NOT NULL, ");
		strcat(CreateTable, "slot int(11) NOT NULL, ");
		strcat(CreateTable, "playerid int(11) NOT NULL, ");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING PLAYER WEAPONS TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		CreateTable[0] = '\0';
	}
		
	mysql_query(MySQL, "SELECT * FROM `player_arrested`");
	if(cache_num_rows() == 0) {
		new CreateTable[500];
		strcat(CreateTable, "CREATE TABLE player_arrested (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT, ");
		strcat(CreateTable, "arrestid int(11) NOT NULL, ");
		strcat(CreateTable, "arresttime int(11) NOT NULL, ");
		strcat(CreateTable, "playerid int(11) NOT NULL, ");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING PLAYER ARRESTED TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `player_newbie`");
	if(cache_num_rows() == 0) {
		new CreateTable[550];
		strcat(CreateTable, "CREATE TABLE player_newbie (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT, ");
		strcat(CreateTable, "playerid int(11) NOT NULL, ");
		strcat(CreateTable, "muted int(1) NOT NULL, ");
		strcat(CreateTable, "times_muted int(11) NOT NULL, ");
		strcat(CreateTable, "times_warned int(11) NOT NULL, ");
		strcat(CreateTable, "muted_date varchar(25) NULL,");
		strcat(CreateTable, "unmuted_date_m int(1) NOT NULL,");
		strcat(CreateTable, "unmuted_date_d int(1) NOT NULL,");
		strcat(CreateTable, "unmuted_date_y int(1) NOT NULL,");
		strcat(CreateTable, "unmute_hours int(1) NOT NULL,");
		strcat(CreateTable, "warnings int(11) NOT NULL, ");
		strcat(CreateTable, "reason varchar(55) NULL,");
		strcat(CreateTable, "warnerid int(11) NOT NULL, ");
		strcat(CreateTable, "muterid int(11) NOT NULL, ");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING PLAYER NEWBIE TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `atms`");
	if(cache_num_rows() == 0) {
		new CreateTable[250];
		strcat(CreateTable, "CREATE TABLE atms (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT, ");
		strcat(CreateTable, "x float NOT NULL, ");
		strcat(CreateTable, "y float NOT NULL, ");
		strcat(CreateTable, "z float NOT NULL, ");
		strcat(CreateTable, "a float NOT NULL, ");
		strcat(CreateTable, "world int(3) NOT NULL, ");
		strcat(CreateTable, "interior int(3) NOT NULL, ");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING ATM TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `jobs`");
	if(cache_num_rows() == 0) {
		new CreateTable[250];
		strcat(CreateTable, "CREATE TABLE jobs (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT, ");
		strcat(CreateTable, "x float NOT NULL, ");
		strcat(CreateTable, "y float NOT NULL, ");
		strcat(CreateTable, "z float NOT NULL, ");
		strcat(CreateTable, "jobtype int(3) NOT NULL, ");
		strcat(CreateTable, "worldid int(3) NOT NULL, ");
		strcat(CreateTable, "intid int(3) NOT NULL, ");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING JOB TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `warrants`");
	if(cache_num_rows() == 0) {
		new CreateTable[250];
		strcat(CreateTable, "CREATE TABLE warrants (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "reason varchar(128) NOT NULL,");
		strcat(CreateTable, "date varchar(128) NOT NULL,");
		strcat(CreateTable, "copid int(11) NOT NULL,");
		strcat(CreateTable, "suspectid int(11) NOT NULL,");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING WARRANTS TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `surnames`");
	if(cache_num_rows() == 0) {
		new CreateTable[250];
		strcat(CreateTable, "CREATE TABLE surnames (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "surname varchar(50) NOT NULL,");
		strcat(CreateTable, "playerid int(11) NOT NULL,");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING SURNAME RESTRICTION TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		CreateTable[0] = '\0';
	}   
	
	mysql_query(MySQL, "SELECT * FROM `tax_percentage`");
	if(cache_num_rows() == 0) {
		new CreateTable[250];
		strcat(CreateTable, "CREATE TABLE tax_percentage (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "percentage float NOT NULL,");
		strcat(CreateTable, "treassury int(11) NOT NULL,");
		strcat(CreateTable, "playerid int(11) NOT NULL,");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING TAX PERCENTAGE TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		mysql_query(MySQL, "INSERT INTO `tax_percentage` (`percentage`, `treassury`, `playerid`) VALUES ('11.5', '0', '1')");
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `houses`");
	if(cache_num_rows() == 0) {
		new CreateTable[500];
		strcat(CreateTable, "CREATE TABLE houses (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "x float NOT NULL,");
		strcat(CreateTable, "y float NOT NULL,");
		strcat(CreateTable, "z float NOT NULL,");
		strcat(CreateTable, "intx float NOT NULL,");
		strcat(CreateTable, "inty float NOT NULL,");
		strcat(CreateTable, "intz float NOT NULL,");
		strcat(CreateTable, "ownerid int(11) NOT NULL,");
		strcat(CreateTable, "tag varchar(30) NOT NULL,");
		strcat(CreateTable, "price int(1) NOT NULL,");
		strcat(CreateTable, "startworld int(11) NOT NULL,");
		strcat(CreateTable, "startint int(11) NOT NULL,");
		strcat(CreateTable, "endworld int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "endint int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "locked int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING HOUSE TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `vips`");
	if(cache_num_rows() == 0) {
		new CreateTable[500];
		strcat(CreateTable, "CREATE TABLE vips (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "vipid int(11) NOT NULL,");
		strcat(CreateTable, "viplevel int(1) NOT NULL,");
		strcat(CreateTable, "viptime_d int(5) NOT NULL,");
		strcat(CreateTable, "viptime_m int(5) NOT NULL,");
		strcat(CreateTable, "viptime_y int(5) NOT NULL,");
		strcat(CreateTable, "expired int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING VIP TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `dmv`");
	if(cache_num_rows() == 0) {
		new CreateTable[750];
		strcat(CreateTable, "CREATE TABLE dmv (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "x float NOT NULL,");
		strcat(CreateTable, "y float NOT NULL,");
		strcat(CreateTable, "z float NOT NULL,");
		strcat(CreateTable, "intx float NOT NULL,");
		strcat(CreateTable, "inty float NOT NULL,");
		strcat(CreateTable, "intz float NOT NULL,");
		strcat(CreateTable, "startworld int(11) NOT NULL,");
		strcat(CreateTable, "startint int(11) NOT NULL,");
		strcat(CreateTable, "endworld int(11) NOT NULL,");
		strcat(CreateTable, "endint int(11) NOT NULL,");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING DMVS TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `hospitals`");
	if(cache_num_rows() == 0) {
		new CreateTable[500];
		strcat(CreateTable, "CREATE TABLE hospitals (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "x float NOT NULL,");
		strcat(CreateTable, "y float NOT NULL,");
		strcat(CreateTable, "z float NOT NULL,");
		strcat(CreateTable, "cx float NOT NULL,");
		strcat(CreateTable, "cy float NOT NULL,");
		strcat(CreateTable, "cz float NOT NULL,");
		strcat(CreateTable, "name varchar(50) NOT NULL,");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING HOSPITALS TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `interiors`");
	if(cache_num_rows() == 0) {
		new CreateTable[750];
		strcat(CreateTable, "CREATE TABLE interiors (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "x float NOT NULL,");
		strcat(CreateTable, "y float NOT NULL,");
		strcat(CreateTable, "z float NOT NULL,");
		strcat(CreateTable, "intx float NOT NULL,");
		strcat(CreateTable, "inty float NOT NULL,");
		strcat(CreateTable, "intz float NOT NULL,");
		strcat(CreateTable, "name varchar(50) NOT NULL,");
		strcat(CreateTable, "owner int(11) NOT NULL,");
		strcat(CreateTable, "password varchar(30) NOT NULL,");
		strcat(CreateTable, "faction1 int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "faction2 int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "faction3 int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "startworld int(11) NOT NULL,");
		strcat(CreateTable, "startint int(11) NOT NULL,");
		strcat(CreateTable, "endworld int(11) NOT NULL,");
		strcat(CreateTable, "endint int(11) NOT NULL,");
		strcat(CreateTable, "faction_whitelist int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "map_icon_id int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING INTERIOR TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `dealerships`");
	if(cache_num_rows() == 0) {
		new CreateTable[250];
		strcat(CreateTable, "CREATE TABLE dealerships (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "x float NOT NULL,");
		strcat(CreateTable, "y float NOT NULL,");
		strcat(CreateTable, "z float NOT NULL,");
		strcat(CreateTable, "dname varchar(50) NOT NULL,");
		strcat(CreateTable, "world int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "worldint int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING DEALERSHIPS TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}
	mysql_query(MySQL, "SELECT * FROM `settings`");
	if(cache_num_rows() == 0) {
		new CreateTable[250];
		strcat(CreateTable, "CREATE TABLE settings (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "setting int(1) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "setting_name varchar(50) NOT NULL,");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		format(GameSettings[1][GameSettingName], 51, "StartUpMoney");
		GameSettings[1][GameSetting] = 1000;
		format(GameSettings[2][GameSettingName], 51, "StartUpBankMoney");
		GameSettings[2][GameSetting] = 5000;
		format(GameSettings[3][GameSettingName], 51, "AirportFTFee");
		GameSettings[3][GameSetting] = 750;
		format(GameSettings[4][GameSettingName], 51, "DMVTestFee");
		GameSettings[4][GameSetting] = 75;
		format(GameSettings[5][GameSettingName], 51, "PizzaDeliveryPCost");
		GameSettings[5][GameSetting] = 20;
		format(GameSettings[6][GameSettingName], 51, "PizzaDeliveryDCost");
		GameSettings[6][GameSetting] = 25;
		format(GameSettings[7][GameSettingName], 51, "Weapon_1"); // Brass Knuckles
		GameSettings[7][GameSetting] = 80;  
		format(GameSettings[51][GameSettingName], 51, "Weapon_1_Ammo"); // Brass Knuckles
		GameSettings[51][GameSetting] = 1;  
		format(GameSettings[8][GameSettingName], 51, "Weapon_2"); // Golf Club
		GameSettings[8][GameSetting] = 45;  
		format(GameSettings[52][GameSettingName], 51, "Weapon_2_Ammo"); // Golf Club
		GameSettings[52][GameSetting] = 1;  
		format(GameSettings[9][GameSettingName], 51, "Weapon_3"); // Night Stick
		GameSettings[9][GameSetting] = 90;
		format(GameSettings[53][GameSettingName], 51, "Weapon_3_Ammo"); // Night Stick
		GameSettings[53][GameSetting] = 1;  
		format(GameSettings[10][GameSettingName], 51, "Weapon_4"); // Knife
		GameSettings[10][GameSetting] = 115;
		format(GameSettings[54][GameSettingName], 51, "Weapon_4_Ammo"); // Knife
		GameSettings[54][GameSetting] = 1;  
		format(GameSettings[11][GameSettingName], 51, "Weapon_5"); // Baseball Bat
		GameSettings[11][GameSetting] = 20;
		format(GameSettings[55][GameSettingName], 51, "Weapon_5_Ammo"); // Baseball Bat
		GameSettings[55][GameSetting] = 1;  
		format(GameSettings[12][GameSettingName], 51, "Weapon_6"); // Shovel
		GameSettings[12][GameSetting] = 15;
		format(GameSettings[56][GameSettingName], 51, "Weapon_6_Ammo"); // Shovel
		GameSettings[56][GameSetting] = 1;  
		format(GameSettings[13][GameSettingName], 51, "Weapon_7"); // Poolstick
		GameSettings[13][GameSetting] = 10;
		format(GameSettings[57][GameSettingName], 51, "Weapon_7_Ammo"); // Poolstick
		GameSettings[57][GameSetting] = 1;  
		format(GameSettings[14][GameSettingName], 51, "Weapon_8"); // Katana
		GameSettings[14][GameSetting] = 65;
		format(GameSettings[58][GameSettingName], 51, "Weapon_8_Ammo"); // Katana
		GameSettings[58][GameSetting] = 1;  
		format(GameSettings[15][GameSettingName], 51, "Weapon_9"); // Chainsaw
		GameSettings[15][GameSetting] = 105;
		format(GameSettings[59][GameSettingName], 51, "Weapon_9_Ammo"); // Chainsaw
		GameSettings[59][GameSetting] = 1;  
		format(GameSettings[16][GameSettingName], 51, "Weapon_10"); // Purple Dildo
		GameSettings[16][GameSetting] = 20;
		format(GameSettings[60][GameSettingName], 51, "Weapon_10_Ammo"); // Purple Dildo
		GameSettings[60][GameSetting] = 1;  
		format(GameSettings[17][GameSettingName], 51, "Weapon_11"); // Dildo
		GameSettings[17][GameSetting] = 20;
		format(GameSettings[61][GameSettingName], 51, "Weapon_11_Ammo"); // Dildo
		GameSettings[61][GameSetting] = 1;  
		format(GameSettings[18][GameSettingName], 51, "Weapon_12"); // Vibrator
		GameSettings[18][GameSetting] = 20;
		format(GameSettings[62][GameSettingName], 51, "Weapon_12_Ammo"); // Vibrator
		GameSettings[62][GameSetting] = 1;
		format(GameSettings[19][GameSettingName], 51, "Weapon_13"); // Silver Vibrator
		GameSettings[19][GameSetting] = 20;
		format(GameSettings[63][GameSettingName], 51, "Weapon_13_Ammo"); // Silver Vibrator
		GameSettings[63][GameSetting] = 1;
		format(GameSettings[20][GameSettingName], 51, "Weapon_14"); // Flowers
		GameSettings[20][GameSetting] = 9;
		format(GameSettings[64][GameSettingName], 51, "Weapon_14_Ammo"); // Flowers
		GameSettings[64][GameSetting] = 1;
		format(GameSettings[21][GameSettingName], 51, "Weapon_15"); // Cane
		GameSettings[21][GameSetting] = 15;
		format(GameSettings[65][GameSettingName], 51, "Weapon_15_Ammo"); // Cane
		GameSettings[65][GameSetting] = 1;
		format(GameSettings[22][GameSettingName], 51, "Weapon_16"); // Grenade
		GameSettings[22][GameSetting] = 300;
		format(GameSettings[66][GameSettingName], 51, "Weapon_16_Ammo"); // Grenade
		GameSettings[66][GameSetting] = 3;
		format(GameSettings[23][GameSettingName], 51, "Weapon_17"); // Tear Gas
		GameSettings[22][GameSetting] = 215;
		format(GameSettings[67][GameSettingName], 51, "Weapon_17_Ammo"); // Tear Gas
		GameSettings[67][GameSetting] = 3;
		format(GameSettings[24][GameSettingName], 51, "Weapon_18"); // Molotov Cocktail
		GameSettings[24][GameSetting] = 75;
		format(GameSettings[68][GameSettingName], 51, "Weapon_18_Ammo"); // Molotov Cocktail
		GameSettings[68][GameSetting] = 3;
		format(GameSettings[25][GameSettingName], 51, "Weapon_22"); // 9mm
		GameSettings[25][GameSetting] = 135;
		format(GameSettings[69][GameSettingName], 51, "Weapon_22_Ammo"); // 9mm
		GameSettings[69][GameSetting] = 30;
		format(GameSettings[26][GameSettingName], 51, "Weapon_23"); // Silenced 9mm
		GameSettings[26][GameSetting] = 175;
		format(GameSettings[70][GameSettingName], 51, "Weapon_23_Ammo"); // Silenced 9mm
		GameSettings[70][GameSetting] = 30;
		format(GameSettings[27][GameSettingName], 51, "Weapon_24"); // Desert Eagle
		GameSettings[27][GameSetting] = 345;
		format(GameSettings[71][GameSettingName], 51, "Weapon_24_Ammo"); // Desert Eagle
		GameSettings[71][GameSetting] = 22;
		format(GameSettings[28][GameSettingName], 51, "Weapon_25"); // Shotgun
		GameSettings[28][GameSetting] = 275;
		format(GameSettings[72][GameSettingName], 51, "Weapon_25_Ammo"); // Shotgun
		GameSettings[72][GameSetting] = 24;
		format(GameSettings[29][GameSettingName], 51, "Weapon_26"); // Sawnoff Shotgun
		GameSettings[29][GameSetting] = 290;
		format(GameSettings[73][GameSettingName], 51, "Weapon_26_Ammo"); // Sawnoff Shotgun
		GameSettings[73][GameSetting] = 18;
		format(GameSettings[30][GameSettingName], 51, "Weapon_27"); // Combat Shotgun
		GameSettings[30][GameSetting] = 390;
		format(GameSettings[74][GameSettingName], 51, "Weapon_27_Ammo"); // Combat Shotgun
		GameSettings[74][GameSetting] = 26;
		format(GameSettings[31][GameSettingName], 51, "Weapon_28"); // Uzi
		GameSettings[31][GameSetting] = 230;
		format(GameSettings[75][GameSettingName], 51, "Weapon_28_Ammo"); // Uzi
		GameSettings[75][GameSetting] = 45;
		format(GameSettings[32][GameSettingName], 51, "Weapon_29"); // Mp5
		GameSettings[32][GameSetting] = 255;
		format(GameSettings[76][GameSettingName], 51, "Weapon_29_Ammo"); // Mp5
		GameSettings[76][GameSetting] = 45;
		format(GameSettings[33][GameSettingName], 51, "Weapon_30"); // AK47
		GameSettings[33][GameSetting] = 420;
		format(GameSettings[77][GameSettingName], 51, "Weapon_30_Ammo"); // AK47
		GameSettings[77][GameSetting] = 72;
		format(GameSettings[34][GameSettingName], 51, "Weapon_31"); // M4
		GameSettings[34][GameSetting] = 445;
		format(GameSettings[78][GameSettingName], 51, "Weapon_31_Ammo"); // M4
		GameSettings[78][GameSetting] = 72;
		format(GameSettings[35][GameSettingName], 51, "Weapon_32"); // Tec9
		GameSettings[35][GameSetting] = 200;
		format(GameSettings[79][GameSettingName], 51, "Weapon_32_Ammo"); // Tec9
		GameSettings[79][GameSetting] = 45;
		format(GameSettings[36][GameSettingName], 51, "Weapon_33"); // Rifle
		GameSettings[36][GameSetting] = 105;
		format(GameSettings[80][GameSettingName], 51, "Weapon_33_Ammo"); // Rifle
		GameSettings[80][GameSetting] = 32;
		format(GameSettings[37][GameSettingName], 51, "Weapon_34"); // Sniper Rifle
		GameSettings[37][GameSetting] = 195;
		format(GameSettings[81][GameSettingName], 51, "Weapon_34_Ammo"); // Sniper Rifle
		GameSettings[81][GameSetting] = 32;
		format(GameSettings[38][GameSettingName], 51, "Weapon_35"); // RPG
		GameSettings[38][GameSetting] = 3000;
		format(GameSettings[82][GameSettingName], 51, "Weapon_35_Ammo"); // RPG
		GameSettings[82][GameSetting] = 2;
		format(GameSettings[39][GameSettingName], 51, "Weapon_36"); // HS ROCKET
		GameSettings[39][GameSetting] = 4500;
		format(GameSettings[83][GameSettingName], 51, "Weapon_36_Ammo"); // HS ROCKET
		GameSettings[83][GameSetting] = 2;
		format(GameSettings[40][GameSettingName], 51, "Weapon_37"); // Flamethrower
		GameSettings[40][GameSetting] = 2500;
		format(GameSettings[84][GameSettingName], 51, "Weapon_37_Ammo"); // Flamethrower
		GameSettings[84][GameSetting] = 112;
		format(GameSettings[41][GameSettingName], 51, "Weapon_38"); // Minigun
		GameSettings[41][GameSetting] = 10000;
		format(GameSettings[85][GameSettingName], 51, "Weapon_38_Ammo"); // Minigun
		GameSettings[85][GameSetting] = 500;
		format(GameSettings[42][GameSettingName], 51, "Weapon_39"); // Satchel Charge
		GameSettings[42][GameSetting] = 6500;
		format(GameSettings[86][GameSettingName], 51, "Weapon_39_Ammo"); // Satchel Charge
		GameSettings[86][GameSetting] = 3;
		format(GameSettings[43][GameSettingName], 51, "Weapon_40"); // Detonator 
		GameSettings[43][GameSetting] = 15;
		format(GameSettings[87][GameSettingName], 51, "Weapon_40_Ammo"); // Detonator
		GameSettings[87][GameSetting] = 1;
		format(GameSettings[44][GameSettingName], 51, "Weapon_41"); // Spraycan
		GameSettings[44][GameSetting] = 20;
		format(GameSettings[88][GameSettingName], 51, "Weapon_41_Ammo"); // Spraycan
		GameSettings[88][GameSetting] = 99;
		format(GameSettings[45][GameSettingName], 51, "Weapon_42"); // Fire Extinguisher
		GameSettings[45][GameSetting] = 45;
		format(GameSettings[89][GameSettingName], 51, "Weapon_42_Ammo"); // Fire Extinguisher
		GameSettings[89][GameSetting] = 99;
		format(GameSettings[46][GameSettingName], 51, "Weapon_43"); // Camera
		GameSettings[46][GameSetting] = 30;
		format(GameSettings[90][GameSettingName], 51, "Weapon_43_Ammo"); // Camera
		GameSettings[90][GameSetting] = 24;
		format(GameSettings[47][GameSettingName], 51, "Weapon_44"); // Night Vis Goggles
		GameSettings[47][GameSetting] = 615;
		format(GameSettings[90][GameSettingName], 51, "Weapon_44_Ammo"); // Night Vis Goggles
		GameSettings[90][GameSetting] = 1;
		format(GameSettings[48][GameSettingName], 51, "Weapon_45"); // Thermal Goggles
		GameSettings[48][GameSetting] = 615;
		format(GameSettings[91][GameSettingName], 51, "Weapon_45_Ammo"); // Thermal Goggles
		GameSettings[91][GameSetting] = 1;
		format(GameSettings[49][GameSettingName], 51, "Weapon_46"); // Parachute
		GameSettings[49][GameSetting] = 230;
		format(GameSettings[92][GameSettingName], 51, "Weapon_46_Ammo"); // Parachute
		GameSettings[92][GameSetting] = 1;
		format(GameSettings[50][GameSettingName], 51, "Armour_Vest"); // Armor/Vest
		GameSettings[50][GameSetting] = 230;
		format(GameSettings[93][GameSettingName], 51, "GPS"); // Gps cost
		GameSettings[93][GameSetting] = 165;
		format(GameSettings[94][GameSettingName], 51, "Skin"); // Skin cost
		GameSettings[94][GameSetting] = 65;
		format(GameSettings[95][GameSettingName], 51, "Product"); // Product Cost
		GameSettings[95][GameSetting] = 50;
		format(GameSettings[96][GameSettingName], 51, "VehicleGPS"); // Vehicle GPS Cost
		GameSettings[96][GameSetting] = 875;
		format(GameSettings[97][GameSettingName], 51, "Toolkit"); // Toolkit Cost
		GameSettings[97][GameSetting] = 155;

		print("CREATING SETTINGS TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		for(new a = 1; a <= MAX_SETTINGS; a++){
			mysql_format(MySQL, CreateTable, sizeof(CreateTable), "INSERT INTO `settings` (`setting`, `setting_name`) VALUES ('%i', '%e')", GameSettings[a][GameSetting], GameSettings[a][GameSettingName]);
			mysql_query(MySQL, CreateTable);
		}   
		
		CreateTable[0] = '\0';
	}
	mysql_query(MySQL, "SELECT * FROM `dealership_vehicles`");
	if(cache_num_rows() == 0) {
		new CreateTable[250];
		strcat(CreateTable, "CREATE TABLE dealership_vehicles (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "vehicleid int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "dealershipid int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "price int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING DEALERSHIP VEHICLES TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}

	mysql_query(MySQL, "SELECT * FROM `time_played`");
	if(cache_num_rows() == 0) {
		new CreateTable[225];
		strcat(CreateTable, "CREATE TABLE `time_played` (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "player_id int(11) NOT NULL,");
		strcat(CreateTable, "month int(255) NOT NULL,");
		strcat(CreateTable, "day int(11) NOT NULL,");
		strcat(CreateTable, "year int(11) NOT NULL,");
		strcat(CreateTable, "played int(11) NOT NULL,");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING TIME PLAYED TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
			
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `player_inventory`");
	if(cache_num_rows() == 0) {
		new CreateTable[225];
		strcat(CreateTable, "CREATE TABLE `player_inventory` (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "playerid int(11) NOT NULL,");
		strcat(CreateTable, "itemname VARCHAR(255) NOT NULL,");
		strcat(CreateTable, "itemvalues int(11) NOT NULL,");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING PLAYER INVENTORY TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
			
		CreateTable[0] = '\0';
	}

	mysql_query(MySQL, "SELECT * FROM `streetcams`");
	if(cache_num_rows() == 0) {
		new CreateTable[250];
		strcat(CreateTable, "CREATE TABLE `streetcams` (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "x float NOT NULL,");
		strcat(CreateTable, "y float NOT NULL,");
		strcat(CreateTable, "z float NOT NULL,");
		strcat(CreateTable, "tx float NOT NULL,");
		strcat(CreateTable, "ty float NOT NULL,");
		strcat(CreateTable, "tz float NOT NULL,");
		strcat(CreateTable, "world int(11) NOT NULL,");
		strcat(CreateTable, "interior int(11) NOT NULL,");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING STREET CAMERAS TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}

	mysql_query(MySQL, "SELECT * FROM `gates`");
	if(cache_num_rows() == 0) {
		new CreateTable[1250];
		strcat(CreateTable, "CREATE TABLE gates (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "x float NOT NULL,");
		strcat(CreateTable, "y float NOT NULL,");
		strcat(CreateTable, "z float NOT NULL,");
		strcat(CreateTable, "rx float NOT NULL,");
		strcat(CreateTable, "ry float NOT NULL,");
		strcat(CreateTable, "rz float NOT NULL,");
		strcat(CreateTable, "tx float NOT NULL,");
		strcat(CreateTable, "ty float NOT NULL,");
		strcat(CreateTable, "tz float NOT NULL,");
		strcat(CreateTable, "trx float NOT NULL,");
		strcat(CreateTable, "try float NOT NULL,");
		strcat(CreateTable, "trz float NOT NULL,");
		strcat(CreateTable, "world int(11) NOT NULL,");
		strcat(CreateTable, "interior int(11) NOT NULL,");
		strcat(CreateTable, "speed float NOT NULL,");
		strcat(CreateTable, "radius float NOT NULL,");
		strcat(CreateTable, "owner int(11) NOT NULL,");
		strcat(CreateTable, "password varchar(50) NOT NULL,");
		strcat(CreateTable, "object int(11) NOT NULL,");
		strcat(CreateTable, "faction int(2) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "faction2 int(2) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "faction3 int(2) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "level int(11) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "autoclose int(5) NOT NULL DEFAULT '0',");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING GATES TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `player_jobs`");
	if(cache_num_rows() == 0) {
		new CreateTable[750];
		strcat(CreateTable, "CREATE TABLE player_jobs (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "playerid int(11) NOT NULL,");
		strcat(CreateTable, "jobid int(11) NOT NULL,");
		strcat(CreateTable, "joblevel int(11) NOT NULL,");
		strcat(CreateTable, "jobpoints int(11) NOT NULL,");
		strcat(CreateTable, "jobitem int(11) NOT NULL,");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING PLAYER JOB DATA");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "SELECT * FROM `objects`");
	if(cache_num_rows() == 0) {
		new CreateTable[750];
		strcat(CreateTable, "CREATE TABLE objects (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "x float NOT NULL,");
		strcat(CreateTable, "y float NOT NULL,");
		strcat(CreateTable, "z float NOT NULL,");
		strcat(CreateTable, "rx float NOT NULL,");
		strcat(CreateTable, "ry float NOT NULL,");
		strcat(CreateTable, "rz float NOT NULL,");
		strcat(CreateTable, "world int(11) NOT NULL,");
		strcat(CreateTable, "interior int(11) NOT NULL,");
		strcat(CreateTable, "object int(11) NOT NULL,");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING OBJECTS TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}   
	
	mysql_query(MySQL, "SELECT * FROM `arrestpoints`");
	if(cache_num_rows() == 0) {
		new CreateTable[750];
		strcat(CreateTable, "CREATE TABLE arrestpoints (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "xstart float NOT NULL,");
		strcat(CreateTable, "ystart float NOT NULL,");
		strcat(CreateTable, "zstart float NOT NULL,");
		strcat(CreateTable, "xend float NOT NULL,");
		strcat(CreateTable, "yend float NOT NULL,");
		strcat(CreateTable, "zend float NOT NULL,");
		strcat(CreateTable, "faction int(11) NOT NULL,");
		strcat(CreateTable, "worldstart int(11) NOT NULL,");
		strcat(CreateTable, "interiorstart int(11) NOT NULL,");
		strcat(CreateTable, "worldend int(11) NOT NULL,");
		strcat(CreateTable, "interiorend int(11) NOT NULL,");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING ARREST POINTS TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}
		
	mysql_query(MySQL, "SELECT * FROM `arrestpointzones`");
	if(cache_num_rows() == 0) {
		new CreateTable[750];
		strcat(CreateTable, "CREATE TABLE arrestpointzones (");
		strcat(CreateTable, "id int(11) NOT NULL AUTO_INCREMENT,");
		strcat(CreateTable, "x float NOT NULL,");
		strcat(CreateTable, "y float NOT NULL,");
		strcat(CreateTable, "z float NOT NULL,");
		strcat(CreateTable, "arrestid int(11) NOT NULL,");
		strcat(CreateTable, "world int(11) NOT NULL,");
		strcat(CreateTable, "interior int(11) NOT NULL,");
		strcat(CreateTable, "PRIMARY KEY (id)) ENGINE=InnoDB;");
		
		print("CREATING ARREST POINTS ZONES TABLE");
		mysql_format(MySQL, CreateTable, sizeof(CreateTable), CreateTable);
		mysql_query(MySQL, CreateTable);
		
		CreateTable[0] = '\0';
	}
	
	mysql_query(MySQL, "UPDATE `accounts` SET `fakename` = '' WHERE `fakename` <> ''");
	mysql_query(MySQL, "UPDATE `accounts` SET `fakename` = '' WHERE `fakename` != ''");
	mysql_query(MySQL, "UPDATE `accounts` SET `online` = 0 WHERE `online` = 1");
	
	
	mysql_query(MySQL, "SELECT * FROM `arrestpointzones` ORDER BY `id`");
	for(new j = 0; j < cache_num_rows(); j++){
		LastArrestPointZoneID[cache_get_row_int(j, 0)] = 1;
	}   
	mysql_query(MySQL, "SELECT * FROM `arrestpoints` ORDER BY `id`");
	for(new k = 0; k < cache_num_rows(); k++){
		LastArrestPointID[cache_get_row_int(k, 0)] = 1;
	}       
	mysql_query(MySQL, "SELECT * FROM `hospitals` ORDER BY `id`");
	for(new l = 0; l < cache_num_rows(); l++){
		LastHospitalID[cache_get_row_int(l, 0)] = 1;
	}   
	mysql_query(MySQL, "SELECT * FROM `airport_fasttravel` ORDER BY `id`");
	for(new m = 0; m < cache_num_rows(); m++){
		LastAirportFTID[cache_get_row_int(m, 0)] = 1;
	}   
	mysql_query(MySQL, "SELECT * FROM `dmv` ORDER BY `id`");
	for(new n = 0; n < cache_num_rows(); n++){
		LastDMVID[cache_get_row_int(n, 0)] = 1;
	}
	mysql_query(MySQL, "SELECT * FROM `objects` ORDER BY `id`");
	for(new o = 0; o < cache_num_rows(); o++){
		LastObjectID[cache_get_row_int(o, 0)] = 1;
	}
	mysql_query(MySQL, "SELECT * FROM `factions_locker` ORDER BY `id`");
	for(new p = 0; p < cache_num_rows(); p++){
		LastFactionLockerID[cache_get_row_int(p, 0)] = 1;
	}
	mysql_query(MySQL, "SELECT * FROM `factions` ORDER BY `id`");
	for(new q = 0; q < cache_num_rows(); q++){
		LastFactionID[cache_get_row_int(q, 0)] = 1;
	}
	mysql_query(MySQL, "SELECT * FROM `gates` ORDER BY `id`");
	for(new r = 0; r < cache_num_rows(); r++){
		LastGateID[cache_get_row_int(r, 0)] = 1;
	}
	mysql_query(MySQL, "SELECT * FROM `interiors` ORDER BY `id`");
	for(new s = 0; s < cache_num_rows(); s++){
		LastInteriorID[cache_get_row_int(s, 0)] = 1;
	}
	mysql_query(MySQL, "SELECT * FROM `streetcams` ORDER BY `id`");
	for(new t = 0; t < cache_num_rows(); t++){
		LastStreetCamID[cache_get_row_int(t, 0)] = 1;
	}
	mysql_query(MySQL, "SELECT * FROM `jobs` ORDER BY `id`");
	for(new u = 0; u < cache_num_rows(); u++){
		LastJobID[cache_get_row_int(u, 0)] = 1;
	}
	mysql_query(MySQL, "SELECT * FROM `dealerships` ORDER BY `id`");
	for(new v = 0; v < cache_num_rows(); v++){
		LastDealershipID[cache_get_row_int(v, 0)] = 1;
	}
	mysql_query(MySQL, "SELECT * FROM `houses` ORDER BY `id`");
	for(new w = 0; w < cache_num_rows(); w++){
		LastHouseID[cache_get_row_int(w, 0)] = 1;
	}
	mysql_query(MySQL, "SELECT * FROM `businesses` ORDER BY `id`");
	for(new x = 0; x < cache_num_rows(); x++){
		LastBusinessesID[cache_get_row_int(x, 0)] = 1;
	}
	mysql_query(MySQL, "SELECT * FROM `atms` ORDER BY `id`");
	for(new y = 0; y < cache_num_rows(); y++){
		LastATMsID[cache_get_row_int(y, 0)] = 1;
	}
	mysql_query(MySQL, "SELECT * FROM `vehicles` ORDER BY `id`");
	for(new z = 0; z < cache_num_rows(); z++){
		LastVehicleID[z+1] = 1;
		LastVehicleDBID[cache_get_row_int(z, 0)] = 1;
	}
	
	
	mysql_query(MySQL, "SELECT * FROM `tax_percentage` ORDER BY `id` DESC LIMIT 1");
	if(cache_num_rows() == 1){
		TaxPercentage = cache_get_row_float(0, 1);
		TaxMoney = cache_get_row_int(0, 2);
	} else {
		TaxPercentage = (0.3);
		TaxMoney = 1;
	}
	
	mysql_tquery(MySQL, "SELECT * FROM `factions`", "OnFactionLoadData");
	mysql_tquery(MySQL, "SELECT * FROM `factions_ranks`", "OnFactionRanksLoadData");
	mysql_tquery(MySQL, "SELECT * FROM `factions_locker_items`", "OnFactionLockerItemsLoadData");
	mysql_tquery(MySQL, "SELECT * FROM `factions_locker`", "OnFactionLockerLoadData");
	mysql_tquery(MySQL, "SELECT * FROM `vehicles`", "OnVehiclesLoadData");
	mysql_tquery(MySQL, "SELECT * FROM `businesses`", "OnBusinessesLoadData");
	mysql_tquery(MySQL, "SELECT * FROM `jobs`", "OnJobLoadData");
	mysql_tquery(MySQL, "SELECT * FROM `houses`", "OnHouseLoadData");
	mysql_tquery(MySQL, "SELECT * FROM `dealerships`", "OnDealershipsLoadData");
	mysql_tquery(MySQL, "SELECT * FROM `airport_fasttravel`", "OnAirportFastTravelLoadData");
	mysql_tquery(MySQL, "SELECT * FROM `atms`", "OnATMLoadData");
	mysql_tquery(MySQL, "SELECT * FROM `gates`", "OnGateLoadData");
	mysql_tquery(MySQL, "SELECT * FROM `settings`", "OnSettingsLoadData");
	mysql_tquery(MySQL, "SELECT * FROM `objects`", "OnObjectsLoadData");
	mysql_tquery(MySQL, "SELECT * FROM `hospitals`", "OnHospitalLoadData");
	mysql_tquery(MySQL, "SELECT * FROM `arrestpoints`", "OnArrestPointLoadData");
	mysql_tquery(MySQL, "SELECT * FROM `arrestpointzones`", "OnArrestPointZoneLoadData");
	mysql_tquery(MySQL, "SELECT * FROM `interiors`", "OnInteriorLoadData");
	mysql_tquery(MySQL, "SELECT * FROM `dmv`", "OnDMVLoadData");
	return 1;   
}

stock HexToInt(string[])
{
	if(!string[0]) return 0;
	new cur = 1, res = 0;
	for(new i = strlen(string); i > 0; i--)
	{
		res += cur * (string[i - 1] - ((string[i - 1] < 58) ? (48) : (55)));
		cur = cur * 16;
	}
	return res;
}

	

public OnFactionLoadData()
{
	for (new a = 0; a < cache_get_row_count(); a++)
	{
		new FactionSName[11], FactionLName[51], SFactionColor[10];
		cache_get_row(a, 1, FactionLName);
		cache_get_row(a, 2, FactionSName);
		cache_get_row(a, 3, SFactionColor);
		format(FactionInfo[cache_get_row_int(a, 0)][FactionLongName], 51, FactionLName);
		format(FactionInfo[cache_get_row_int(a, 0)][FactionShortName], 11, FactionSName);
		format(FactionInfo[cache_get_row_int(a, 0)][FactionColor], 10, SFactionColor);
		FactionInfo[cache_get_row_int(a, 0)][FactionPermissions][0] = cache_get_field_content_int(a, "queue");
		FactionInfo[cache_get_row_int(a, 0)][FactionPermissions][1] = cache_get_field_content_int(a, "department_radio");
		FactionInfo[cache_get_row_int(a, 0)][FactionPermissions][2] = cache_get_field_content_int(a, "roadblock");
		FactionInfo[cache_get_row_int(a, 0)][FactionPermissions][3] = cache_get_field_content_int(a, "fakebadge");
		FactionInfo[cache_get_row_int(a, 0)][FactionPermissions][4] = cache_get_field_content_int(a, "mdc");
		FactionInfo[cache_get_row_int(a, 0)][FactionPermissions][5] = cache_get_field_content_int(a, "warrant");
		FactionInfo[cache_get_row_int(a, 0)][FactionPermissions][6] = cache_get_field_content_int(a, "psa");
		FactionInfo[cache_get_row_int(a, 0)][FactionPermissions][7] = cache_get_field_content_int(a, "arrests");
		FactionInfo[cache_get_row_int(a, 0)][FactionPermissions][8] = cache_get_field_content_int(a, "tressury");
		FactionInfo[cache_get_row_int(a, 0)][FactionPermissions][9] = cache_get_field_content_int(a, "taxes");
		FactionInfo[cache_get_row_int(a, 0)][FactionPermissions][10] = cache_get_field_content_int(a, "backup");
		FactionInfo[cache_get_row_int(a, 0)][FactionPermissions][11] = cache_get_field_content_int(a, "isfamily");
		TotalFactions = (TotalFactions + 1);
	}
	return 1;
}

public OnFactionRanksLoadData()
{
	for (new a = 0; a < cache_get_row_count(); a++)
	{
		new FactionRankName[51];
		cache_get_row(a, 1, FactionRankName);
		format(AllFactionRanks[cache_get_row_int(a, 3)][cache_get_row_int(a, 2)], 51, FactionRankName);
		AllFactionRanksPermissions[cache_get_row_int(a, 3)][cache_get_row_int(a, 2)][1] = cache_get_field_content_int(a, "department_radio");
		AllFactionRanksPermissions[cache_get_row_int(a, 3)][cache_get_row_int(a, 2)][2] = cache_get_field_content_int(a, "roadblock");
		AllFactionRanksPermissions[cache_get_row_int(a, 3)][cache_get_row_int(a, 2)][3] = cache_get_field_content_int(a, "fakebadge");
		AllFactionRanksPermissions[cache_get_row_int(a, 3)][cache_get_row_int(a, 2)][4] = cache_get_field_content_int(a, "mdc");
		AllFactionRanksPermissions[cache_get_row_int(a, 3)][cache_get_row_int(a, 2)][5] = cache_get_field_content_int(a, "warrant");
		AllFactionRanksPermissions[cache_get_row_int(a, 3)][cache_get_row_int(a, 2)][6] = cache_get_field_content_int(a, "psa");
		AllFactionRanksPermissions[cache_get_row_int(a, 3)][cache_get_row_int(a, 2)][7] = cache_get_field_content_int(a, "arrests");
		AllFactionRanksPermissions[cache_get_row_int(a, 3)][cache_get_row_int(a, 2)][8] = cache_get_field_content_int(a, "tressury");
		AllFactionRanksPermissions[cache_get_row_int(a, 3)][cache_get_row_int(a, 2)][9] = cache_get_field_content_int(a, "taxes");
		AllFactionRanksPermissions[cache_get_row_int(a, 3)][cache_get_row_int(a, 2)][10] = cache_get_field_content_int(a, "backup");
	}
	return 1;
}


public OnFactionLockerItemsLoadData()
{
	for (new a = 0; a < cache_get_row_count(); a++)
	{
		for(new w = 1; w <= MAX_FACTIONS_LOCKERS_ITEMS; w++){
			if(LastFactionLockerItemsID[cache_get_row_int(a, 1)][cache_get_row_int(a, 2)][w] == 0){
				LastFactionLockerItemsID[cache_get_row_int(a, 1)][cache_get_row_int(a, 2)][w] = cache_get_field_content_int(a, "item");
				break;
			}
		}
	}
	return 1;
}

public OnFactionLockerLoadData()
{
	for (new a = 0; a < cache_get_row_count(); a++)
	{
		FactionLockerInfo[cache_get_row_int(a, 0)][FLX] = cache_get_row_float(a, 1);
		FactionLockerInfo[cache_get_row_int(a, 0)][FLY] = cache_get_row_float(a, 2);
		FactionLockerInfo[cache_get_row_int(a, 0)][FLZ] = cache_get_row_float(a, 3);
		FactionLockerInfo[cache_get_row_int(a, 0)][FLWorld] = cache_get_row_int(a, 4);
		FactionLockerInfo[cache_get_row_int(a, 0)][FLInt] = cache_get_row_int(a, 5);
		FactionLockerInfo[cache_get_row_int(a, 0)][FLFaction] = cache_get_row_int(a, 6);
		
		FactionLockerInfo[cache_get_row_int(a, 0)][FLIcon] = CreateDynamicPickup(1242, 23, FactionLockerInfo[cache_get_row_int(a, 0)][FLX], FactionLockerInfo[cache_get_row_int(a, 0)][FLY], FactionLockerInfo[cache_get_row_int(a, 0)][FLZ], FactionLockerInfo[cache_get_row_int(a, 0)][FLWorld], FactionLockerInfo[cache_get_row_int(a, 0)][FLInt], -1);
		FactionLockerInfo[cache_get_row_int(a, 0)][FLText] = CreateDynamic3DTextLabel("{FFFF00}/locker{FFFFFF}", -1, FactionLockerInfo[cache_get_row_int(a, 0)][FLX], FactionLockerInfo[cache_get_row_int(a, 0)][FLY], FactionLockerInfo[cache_get_row_int(a, 0)][FLZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, FactionLockerInfo[cache_get_row_int(a, 0)][FLWorld], FactionLockerInfo[cache_get_row_int(a, 0)][FLInt], -1);
	}
	return 1;
}

public OnHospitalLoadData()
{
	for (new a = 0; a < cache_get_row_count(); a++)
	{
		HospitalInfo[cache_get_row_int(a, 0)][HPX] = cache_get_row_float(a, 1);
		HospitalInfo[cache_get_row_int(a, 0)][HPY] = cache_get_row_float(a, 2);
		HospitalInfo[cache_get_row_int(a, 0)][HPZ] = cache_get_row_float(a, 3);
		HospitalInfo[cache_get_row_int(a, 0)][HPCX] = cache_get_row_float(a, 4);
		HospitalInfo[cache_get_row_int(a, 0)][HPCY] = cache_get_row_float(a, 5);
		HospitalInfo[cache_get_row_int(a, 0)][HPCZ] = cache_get_row_float(a, 6);
		new HospitalName[50+1];
		cache_get_row(a, 7, HospitalName);
		format(HospitalInfo[cache_get_row_int(a, 0)][HPName], sizeof(HospitalName), HospitalName);
		HospitalName[0] = '\0';
		format(HospitalInfo[cache_get_row_int(a, 0)][HPTempText], 144, "{FF00FF}%s Hospital\n{FFFFFF}Station #%i", HospitalInfo[cache_get_row_int(a, 0)][HPName], cache_get_row_int(a, 0));
		HospitalInfo[cache_get_row_int(a, 0)][HPText] = CreateDynamic3DTextLabel(HospitalInfo[cache_get_row_int(a, 0)][HPTempText], -1, HospitalInfo[cache_get_row_int(a, 0)][HPX], HospitalInfo[cache_get_row_int(a, 0)][HPY], HospitalInfo[cache_get_row_int(a, 0)][HPZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1);
		HospitalInfo[cache_get_row_int(a, 0)][HPMapIcon] = CreateDynamicMapIcon(HospitalInfo[cache_get_row_int(a, 0)][HPX], HospitalInfo[cache_get_row_int(a, 0)][HPY], HospitalInfo[cache_get_row_int(a, 0)][HPZ], 22, -1, -1, -1, -1, 300, MAPICON_GLOBAL);
		HospitalInfo[cache_get_row_int(a, 0)][HPIcon] = CreateDynamicPickup(1240, 23, HospitalInfo[cache_get_row_int(a, 0)][HPX], HospitalInfo[cache_get_row_int(a, 0)][HPY], HospitalInfo[cache_get_row_int(a, 0)][HPZ], -1, -1, -1);
	}
	return 1;
}

public OnDealershipsLoadData()
{
	for (new a = 0; a < cache_get_row_count(); a++)
	{
		Dealerships[cache_get_row_int(a, 0)][DealerX] = cache_get_row_float(a, 1);
		Dealerships[cache_get_row_int(a, 0)][DealerY] = cache_get_row_float(a, 2);
		Dealerships[cache_get_row_int(a, 0)][DealerZ] = cache_get_row_float(a, 3);
		new DealershipName[MAX_PLAYER_NAME+1];
		cache_get_row(a, 4, DealershipName);
		format(Dealerships[cache_get_row_int(a, 0)][DealerName], 30, DealershipName);
		Dealerships[cache_get_row_int(a, 0)][DealerWorld] = cache_get_row_int(a,5);
		Dealerships[cache_get_row_int(a, 0)][DealerInt] = cache_get_row_int(a, 6);
		DealershipName[0] = '\0';
		
		Dealerships[cache_get_row_int(a, 0)][DealerMapIcon] = CreateDynamicMapIcon(Dealerships[cache_get_row_int(a, 0)][DealerX], Dealerships[cache_get_row_int(a, 0)][DealerY], Dealerships[cache_get_row_int(a, 0)][DealerZ], 55, -1, Dealerships[cache_get_row_int(a, 0)][DealerWorld], Dealerships[cache_get_row_int(a, 0)][DealerInt], -1, 250, MAPICON_GLOBAL);
		Dealerships[cache_get_row_int(a, 0)][DealerIcon] = CreateDynamicPickup(1239, 23, Dealerships[cache_get_row_int(a, 0)][DealerX], Dealerships[cache_get_row_int(a, 0)][DealerY], Dealerships[cache_get_row_int(a, 0)][DealerZ], Dealerships[cache_get_row_int(a, 0)][DealerWorld], Dealerships[cache_get_row_int(a, 0)][DealerInt], -1);
		format(Dealerships[cache_get_row_int(a, 0)][DealerTempText], 51, "{800080}%s{FFFFFF} (%i)\n/dealership", Dealerships[cache_get_row_int(a, 0)][DealerName], (cache_get_row_int(a, 0)));
		Dealerships[cache_get_row_int(a, 0)][DealerText] = CreateDynamic3DTextLabel(Dealerships[cache_get_row_int(a, 0)][DealerTempText], -1, Dealerships[cache_get_row_int(a, 0)][DealerX], Dealerships[cache_get_row_int(a, 0)][DealerY], Dealerships[cache_get_row_int(a, 0)][DealerZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, Dealerships[cache_get_row_int(a, 0)][DealerWorld], Dealerships[cache_get_row_int(a, 0)][DealerInt], -1);
	}
	return 1;
}


public OnObjectsLoadData()
{
	for (new a = 0; a < cache_get_row_count(); a++)
	{
		ObjectInfo[cache_get_row_int(a, 0)][ObjX] = cache_get_row_float(a, 1);
		ObjectInfo[cache_get_row_int(a, 0)][ObjY] = cache_get_row_float(a, 2);
		ObjectInfo[cache_get_row_int(a, 0)][ObjZ] = cache_get_row_float(a, 3);
		ObjectInfo[cache_get_row_int(a, 0)][ObjRX] = cache_get_row_float(a, 4);
		ObjectInfo[cache_get_row_int(a, 0)][ObjRY] = cache_get_row_float(a, 5);
		ObjectInfo[cache_get_row_int(a, 0)][ObjRZ] = cache_get_row_float(a, 6);
		ObjectInfo[cache_get_row_int(a, 0)][ObjWorld] = cache_get_row_int(a,7);
		ObjectInfo[cache_get_row_int(a, 0)][ObjInt] = cache_get_row_int(a, 8);
		ObjectInfo[cache_get_row_int(a, 0)][ObjObjID] = cache_get_row_int(a, 9);
		ObjectInfo[cache_get_row_int(a, 0)][ObjIcon] = CreateDynamicObject(ObjectInfo[cache_get_row_int(a, 0)][ObjObjID], ObjectInfo[cache_get_row_int(a, 0)][ObjX], ObjectInfo[cache_get_row_int(a, 0)][ObjY], ObjectInfo[cache_get_row_int(a, 0)][ObjZ], ObjectInfo[cache_get_row_int(a, 0)][ObjRX], ObjectInfo[cache_get_row_int(a, 0)][ObjRY], ObjectInfo[cache_get_row_int(a, 0)][ObjRZ], ObjectInfo[cache_get_row_int(a, 0)][ObjWorld], ObjectInfo[cache_get_row_int(a, 0)][ObjInt], -1, 200.0, 200.0);
	}
	return 1;
}

public OnSettingsLoadData()
{
	for (new a = 0; a < cache_get_row_count(); a++)
	{
		new SettingName[51];
		GameSettings[cache_get_row_int(a, 0)][GameSetting] = cache_get_row_int(a,1);
		cache_get_row(a, 2, SettingName);
		format(GameSettings[cache_get_row_int(a, 0)][GameSettingName], 51, SettingName);
		SettingName[0] = '\0';
	}
	return 1;
}

public OnGateLoadData()
{
	for (new a = 0; a < cache_get_row_count(); a++)
	{
		GateInfo[cache_get_row_int(a, 0)][GateX] = cache_get_row_float(a, 1);
		GateInfo[cache_get_row_int(a, 0)][GateY] = cache_get_row_float(a, 2);
		GateInfo[cache_get_row_int(a, 0)][GateZ] = cache_get_row_float(a, 3);
		GateInfo[cache_get_row_int(a, 0)][GateRX] = cache_get_row_float(a, 4);
		GateInfo[cache_get_row_int(a, 0)][GateRY] = cache_get_row_float(a, 5);
		GateInfo[cache_get_row_int(a, 0)][GateRZ] = cache_get_row_float(a, 6);
		GateInfo[cache_get_row_int(a, 0)][GateEndX] = cache_get_row_float(a, 7);
		GateInfo[cache_get_row_int(a, 0)][GateEndY] = cache_get_row_float(a, 8);
		GateInfo[cache_get_row_int(a, 0)][GateEndZ] = cache_get_row_float(a, 9);
		GateInfo[cache_get_row_int(a, 0)][GateEndRX] = cache_get_row_float(a, 10);
		GateInfo[cache_get_row_int(a, 0)][GateEndRY] = cache_get_row_float(a, 11);
		GateInfo[cache_get_row_int(a, 0)][GateEndRZ] = cache_get_row_float(a, 12);
		GateInfo[cache_get_row_int(a, 0)][GateWorld] = cache_get_row_int(a,13);
		GateInfo[cache_get_row_int(a, 0)][GateInt] = cache_get_row_int(a, 14);
		GateInfo[cache_get_row_int(a, 0)][GateSpeed] = cache_get_row_int(a, 15);
		GateInfo[cache_get_row_int(a, 0)][GateRadius] = cache_get_row_int(a, 16);
		GateInfo[cache_get_row_int(a, 0)][GateOwner] = cache_get_row_int(a, 17);
		new GatesPassword[51];
		cache_get_row(a, 18, GatesPassword);
		format(GateInfo[cache_get_row_int(a, 0)][GatePassword], 51, GatesPassword);
		GatesPassword[0] = '\0';
		GateInfo[cache_get_row_int(a, 0)][GateObjID] = cache_get_row_int(a, 19);
		GateInfo[cache_get_row_int(a, 0)][GateFaction] = cache_get_row_int(a, 20);
		GateInfo[cache_get_row_int(a, 0)][GateFaction2] = cache_get_row_int(a, 21);
		GateInfo[cache_get_row_int(a, 0)][GateFaction3] = cache_get_row_int(a, 22);
		GateInfo[cache_get_row_int(a, 0)][GateLevel] = cache_get_row_int(a, 23);
		GateInfo[cache_get_row_int(a, 0)][GateAutoClose] = cache_get_row_int(a, 24);
		GateInfo[cache_get_row_int(a, 0)][GateOpen] = 0;
		
		GateInfo[cache_get_row_int(a, 0)][GateIcon] = CreateDynamicObject(GateInfo[cache_get_row_int(a, 0)][GateObjID], GateInfo[cache_get_row_int(a, 0)][GateX], GateInfo[cache_get_row_int(a, 0)][GateY], GateInfo[cache_get_row_int(a, 0)][GateZ], GateInfo[cache_get_row_int(a, 0)][GateRX], GateInfo[cache_get_row_int(a, 0)][GateRY], GateInfo[cache_get_row_int(a, 0)][GateRZ], GateInfo[cache_get_row_int(a, 0)][GateWorld], GateInfo[cache_get_row_int(a, 0)][GateInt], -1, 200.0, 200.0);
	}
	return 1;
}

public OnATMLoadData()
{
	for (new a = 0; a < cache_get_row_count(); a++)
	{
		ATMs[cache_get_row_int(a, 0)][ATMX] = cache_get_row_float(a, 1);
		ATMs[cache_get_row_int(a, 0)][ATMY] = cache_get_row_float(a, 2);
		ATMs[cache_get_row_int(a, 0)][ATMZ] = cache_get_row_float(a, 3);
		ATMs[cache_get_row_int(a, 0)][ATMA] = cache_get_row_float(a, 4);
		ATMs[cache_get_row_int(a, 0)][ATMWorld] = cache_get_row_int(a,5);
		ATMs[cache_get_row_int(a, 0)][ATMInt] = cache_get_row_int(a, 6);
		ATMs[cache_get_row_int(a, 0)][ATMIcon] = CreateDynamicObject(19526, ATMs[cache_get_row_int(a, 0)][ATMX], ATMs[cache_get_row_int(a, 0)][ATMY], (ATMs[cache_get_row_int(a, 0)][ATMZ]), 0, 0, ATMs[cache_get_row_int(a, 0)][ATMA], ATMs[cache_get_row_int(a, 0)][ATMWorld], ATMs[cache_get_row_int(a, 0)][ATMInt], -1, 150);
		new message[35];
		format(message, sizeof(message), "{00FFFF}/atm{FFFFFF}\nSerial #%i", (cache_get_row_int(a, 0)));
		ATMs[cache_get_row_int(a, 0)][ATMText] = CreateDynamic3DTextLabel(message, -1, ATMs[cache_get_row_int(a, 0)][ATMX], ATMs[cache_get_row_int(a, 0)][ATMY], (ATMs[cache_get_row_int(a, 0)][ATMZ]+1), GlobalExitRadius+10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, ATMs[cache_get_row_int(a, 0)][ATMWorld], ATMs[cache_get_row_int(a, 0)][ATMInt], -1);
		message[0] = '\0';
	}
	return 1;
}


public OnHouseLoadData()
{
	for (new a = 0; a < cache_get_row_count(); a++)
	{
		new  HouseOTag[31];
		HouseInfo[cache_get_row_int(a, 0)][HouseOwner] = cache_get_row_int(a, 7);
		cache_get_row(a, 8, HouseOTag);
		format(HouseInfo[cache_get_row_int(a, 0)][HouseTag], 31, HouseOTag);
		HouseInfo[cache_get_row_int(a, 0)][HouseX] = cache_get_row_float(a, 1);
		HouseInfo[cache_get_row_int(a, 0)][HouseY] = cache_get_row_float(a, 2);
		HouseInfo[cache_get_row_int(a, 0)][HouseZ] = cache_get_row_float(a, 3);
		HouseInfo[cache_get_row_int(a, 0)][HouseIntX] = cache_get_row_float(a, 4);
		HouseInfo[cache_get_row_int(a, 0)][HouseIntY] = cache_get_row_float(a, 5);
		HouseInfo[cache_get_row_int(a, 0)][HouseIntZ] = cache_get_row_float(a, 6);
		HouseInfo[cache_get_row_int(a, 0)][HousePrice] = cache_get_row_int(a, 9);
		HouseInfo[cache_get_row_int(a, 0)][HouseStartWorld] = cache_get_row_int(a, 10);
		HouseInfo[cache_get_row_int(a, 0)][HouseStartInt] = cache_get_row_int(a, 11);
		HouseInfo[cache_get_row_int(a, 0)][HouseEndWorld] = cache_get_row_int(a, 12);
		HouseInfo[cache_get_row_int(a, 0)][HouseEndInt] = cache_get_row_int(a, 13);
		HouseInfo[cache_get_row_int(a, 0)][HouseLock] = cache_get_row_int(a, 14);
		
		HouseInfo[cache_get_row_int(a, 0)][HouseIntIcon] = CreateDynamicPickup(1239, 23, HouseInfo[cache_get_row_int(a, 0)][HouseIntX], HouseInfo[cache_get_row_int(a, 0)][HouseIntY], HouseInfo[cache_get_row_int(a, 0)][HouseIntZ], HouseInfo[cache_get_row_int(a, 0)][HouseEndWorld], HouseInfo[cache_get_row_int(a, 0)][HouseEndInt], -1);
		HouseInfo[cache_get_row_int(a, 0)][HouseIntText] = CreateDynamic3DTextLabel("/exit", -1, HouseInfo[cache_get_row_int(a, 0)][HouseIntX], HouseInfo[cache_get_row_int(a, 0)][HouseIntY], HouseInfo[cache_get_row_int(a, 0)][HouseIntZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, HouseInfo[cache_get_row_int(a, 0)][HouseEndWorld], HouseInfo[cache_get_row_int(a, 0)][HouseEndInt], -1);
		if(HouseInfo[cache_get_row_int(a, 0)][HouseOwner] == 0) { 
			HouseInfo[cache_get_row_int(a, 0)][HouseIcon] = CreateDynamicPickup(1273, 23, HouseInfo[cache_get_row_int(a, 0)][HouseX], HouseInfo[cache_get_row_int(a, 0)][HouseY], HouseInfo[cache_get_row_int(a, 0)][HouseZ], HouseInfo[cache_get_row_int(a, 0)][HouseStartWorld], HouseInfo[cache_get_row_int(a, 0)][HouseStartInt], -1);
			format(HouseInfo[cache_get_row_int(a, 0)][HouseTempText], 325, "{FFFF00}House for Sell{FFFFFF} (ID: %i)\n {FF0000}Price{FFFFFF}: ${FF0000}%i{FFFFFF}\n Type /buyhouse to buy!", cache_get_row_int(a, 0), HouseInfo[cache_get_row_int(a, 0)][HousePrice]);
			HouseInfo[cache_get_row_int(a, 0)][HouseText] = CreateDynamic3DTextLabel(HouseInfo[cache_get_row_int(a, 0)][HouseTempText], -1, HouseInfo[cache_get_row_int(a, 0)][HouseX], HouseInfo[cache_get_row_int(a, 0)][HouseY], HouseInfo[cache_get_row_int(a, 0)][HouseZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, HouseInfo[cache_get_row_int(a, 0)][HouseStartWorld], HouseInfo[cache_get_row_int(a, 0)][HouseStartInt], -1);
		} else {
			new tempname[MAX_PLAYER_NAME], largequery[100], id = cache_get_row_int(a, 0);
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", HouseInfo[id][HouseOwner]);
			mysql_query(MySQL, largequery);
			cache_get_field_content(0, "name", tempname);
			HouseInfo[id][HouseIcon] = CreateDynamicPickup(1272, 23, HouseInfo[id][HouseX], HouseInfo[id][HouseY], HouseInfo[id][HouseZ], HouseInfo[id][HouseStartWorld], HouseInfo[id][HouseStartInt], -1);
			format(HouseInfo[id][HouseTempText], 325, "{FFFF00}%s's House{FFFFFF} (ID: %i)\n%s", str_replace("_", " ", tempname), id, HouseInfo[id][HouseTag]);
			HouseInfo[id][HouseText] = CreateDynamic3DTextLabel(HouseInfo[id][HouseTempText], -1, HouseInfo[id][HouseX], HouseInfo[id][HouseY], HouseInfo[id][HouseZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, HouseInfo[id][HouseStartWorld], HouseInfo[id][HouseStartInt], -1);
			mysql_query(MySQL, "SELECT * FROM `houses`");
			tempname[0] = '\0';
			largequery[0] = '\0';
		}
	}
	return 1;
}

public OnJobLoadData()
{
	for (new a = 0; a < cache_get_row_count(); a++)
	{
		JobInfo[cache_get_row_int(a, 0)][JobX] = cache_get_row_float(a, 1);
		JobInfo[cache_get_row_int(a, 0)][JobY] = cache_get_row_float(a, 2);
		JobInfo[cache_get_row_int(a, 0)][JobZ] = cache_get_row_float(a, 3);
		JobInfo[cache_get_row_int(a, 0)][JobType] = cache_get_row_int(a, 4);
		JobInfo[cache_get_row_int(a, 0)][JobWorld] = cache_get_row_int(a, 5);
		JobInfo[cache_get_row_int(a, 0)][JobInterior] = cache_get_row_int(a, 6);
		JobInfo[cache_get_row_int(a, 0)][JobMapIcon] = CreateDynamicMapIcon(JobInfo[cache_get_row_int(a, 0)][JobX], JobInfo[cache_get_row_int(a, 0)][JobY], JobInfo[cache_get_row_int(a, 0)][JobZ], 56, -1, JobInfo[cache_get_row_int(a, 0)][JobWorld], JobInfo[cache_get_row_int(a, 0)][JobInterior], -1, 500, MAPICON_GLOBAL);
		
		JobInfo[cache_get_row_int(a, 0)][JobIcon] = CreateDynamicPickup(JobObjectid(JobInfo[cache_get_row_int(a, 0)][JobType]), 23, JobInfo[cache_get_row_int(a, 0)][JobX], JobInfo[cache_get_row_int(a, 0)][JobY], JobInfo[cache_get_row_int(a, 0)][JobZ], JobInfo[cache_get_row_int(a, 0)][JobWorld], JobInfo[cache_get_row_int(a, 0)][JobInterior], -1);
		format(JobInfo[cache_get_row_int(a, 0)][JobTempText], 128, "{FFFFFF}%s\n/getjob\n(id: %i)", JobNames(JobInfo[cache_get_row_int(a, 0)][JobType]), (cache_get_row_int(a, 0)));
		JobInfo[cache_get_row_int(a, 0)][JobText] = CreateDynamic3DTextLabel(JobInfo[cache_get_row_int(a, 0)][JobTempText], -1, JobInfo[cache_get_row_int(a, 0)][JobX], JobInfo[cache_get_row_int(a, 0)][JobY], JobInfo[cache_get_row_int(a, 0)][JobZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, JobInfo[cache_get_row_int(a, 0)][JobWorld], JobInfo[cache_get_row_int(a, 0)][JobInterior], -1);
	}
	return 1;
}


public OnVehiclesLoadData()
{
	for (new a = 0; a < cache_get_row_count(); a++)
	{
		new VehicleLicence[33];
		cache_get_row(a, 10, VehicleLicence);
		format(Vehicles[a+1][VehLicence], 33, VehicleLicence);
		Vehicles[a+1][VDBID] = cache_get_row_int(a, 0);
		Vehicles[a+1][VehX] = cache_get_row_float(a, 1);
		Vehicles[a+1][VehY] = cache_get_row_float(a, 2);
		Vehicles[a+1][VehZ] = cache_get_row_float(a, 3);
		Vehicles[a+1][VehA] = cache_get_row_float(a, 4);
		Vehicles[a+1][Vehicle] = cache_get_row_int(a, 5);
		Vehicles[a+1][Faction] = cache_get_row_int(a, 6);
		Vehicles[a+1][Health] = cache_get_row_float(a, 7);
		Vehicles[a+1][Color1] = cache_get_row_int(a, 8);
		Vehicles[a+1][Color2] = cache_get_row_int(a, 9);
		Vehicles[a+1][Temp] = 0;
		Vehicles[a+1][EngineS] = 0;
		Vehicles[a+1][LightS] = 0;
		Vehicles[a+1][VehGPS] = 0;
		Vehicles[a+1][DoorLS] = 0;
		Vehicles[a+1][HoodS] = 0;
		Vehicles[a+1][TrunkS] = 0;
		CreateVehicle(cache_get_row_int(a, 5), cache_get_row_float(a, 1),cache_get_row_float(a, 2),cache_get_row_float(a, 3), cache_get_row_float(a, 4), cache_get_row_int(a, 8), cache_get_row_int(a, 9), 300);
		SetVehicleNumberPlate(a+1, VehicleLicence);
		SetVehicleToRespawn(a+1);
		SetVehicleHealth(a+1, cache_get_row_float(a, 7));
		SetVehicleParamsEx(a+1, 0, 0, 0, 0, 0, 0, 0);
		VehicleLicence[0] = '\0';
	}
	return 1;
}


public OnBusinessesLoadData()
{
	for (new a = 0; a < cache_get_row_count(); a++)
	{
		Businesses[cache_get_row_int(a, 0)][BizX] = cache_get_row_float(a, 1);
		Businesses[cache_get_row_int(a, 0)][BizY] = cache_get_row_float(a, 2);
		Businesses[cache_get_row_int(a, 0)][BizZ] = cache_get_row_float(a, 3);
		Businesses[cache_get_row_int(a, 0)][BizIntX] = cache_get_row_float(a, 4);
		Businesses[cache_get_row_int(a, 0)][BizIntY] = cache_get_row_float(a, 5);
		Businesses[cache_get_row_int(a, 0)][BizIntZ] = cache_get_row_float(a, 6);
		Businesses[cache_get_row_int(a, 0)][BizOwner] = cache_get_row_int(a, 7);
		Businesses[cache_get_row_int(a, 0)][BizType] = cache_get_row_int(a, 8);
		Businesses[cache_get_row_int(a, 0)][BizPrice] = cache_get_row_int(a, 9);
		Businesses[cache_get_row_int(a, 0)][BizOPrice] = cache_get_row_int(a, 10);
		Businesses[cache_get_row_int(a, 0)][BizStock] = cache_get_row_int(a, 11);
		Businesses[cache_get_row_int(a, 0)][BizMoney] = cache_get_row_int(a, 12);
		Businesses[cache_get_row_int(a, 0)][BizStartWorld] = cache_get_row_int(a, 13);
		Businesses[cache_get_row_int(a, 0)][BizStartInt] = cache_get_row_int(a, 14);
		Businesses[cache_get_row_int(a, 0)][BizEndWorld] = cache_get_row_int(a, 15);
		Businesses[cache_get_row_int(a, 0)][BizEndInt] = cache_get_row_int(a, 16);
		
		Businesses[cache_get_row_int(a, 0)][BizIntIcon] = CreateDynamicPickup(1239, 23, Businesses[cache_get_row_int(a, 0)][BizIntX], Businesses[cache_get_row_int(a, 0)][BizIntY], Businesses[cache_get_row_int(a, 0)][BizIntZ], Businesses[cache_get_row_int(a, 0)][BizEndWorld], Businesses[cache_get_row_int(a, 0)][BizEndInt], -1);
		Businesses[cache_get_row_int(a, 0)][BizIntText] = CreateDynamic3DTextLabel("/exit", -1, Businesses[cache_get_row_int(a, 0)][BizIntX], Businesses[cache_get_row_int(a, 0)][BizIntY], Businesses[cache_get_row_int(a, 0)][BizIntZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, Businesses[cache_get_row_int(a, 0)][BizEndWorld], Businesses[cache_get_row_int(a, 0)][BizEndInt], -1);
		
		BizMapIconLoader(cache_get_row_int(a, 0));
		BizIconLoader(cache_get_row_int(a, 0));
		
		if(cache_get_row_int(a, 7) == 0) { 
			format(Businesses[cache_get_row_int(a, 0)][BizTempText], 325, "{FFFF00}%s for Sell{FFFFFF} (ID: %i)\n {FF0000}Price{FFFFFF}: ${FF0000}%i{FFFFFF}\n Type /buybiz to buy!", GetBusinesses(Businesses[cache_get_row_int(a, 0)][BizType]), cache_get_row_int(a, 0), Businesses[cache_get_row_int(a, 0)][BizPrice]);
			Businesses[cache_get_row_int(a, 0)][BizText] = CreateDynamic3DTextLabel(Businesses[cache_get_row_int(a, 0)][BizTempText], -1, Businesses[cache_get_row_int(a, 0)][BizX], Businesses[cache_get_row_int(a, 0)][BizY], Businesses[cache_get_row_int(a, 0)][BizZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, Businesses[cache_get_row_int(a, 0)][BizStartWorld], Businesses[cache_get_row_int(a, 0)][BizStartInt], -1);
		} else {
			new tempname[MAX_PLAYER_NAME], largequery[100], id = cache_get_row_int(a, 0);
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", Businesses[id][BizOwner]);
			mysql_query(MySQL, largequery);
			cache_get_field_content(0, "name", tempname);
			format(Businesses[id][BizTempText], 325, "{FFFF00}%s{FFFFFF} (ID: %i)\n {FFFFFF}Type /enter\n {FFFFFF}Entrance Price{FFFFFF}: ${FF0000}%i{FFFFFF}\n Owner: %s", GetBusinesses(Businesses[id][BizType]), id, Businesses[id][BizPrice], str_replace("_", " ", tempname));
			Businesses[id][BizText] = CreateDynamic3DTextLabel(Businesses[id][BizTempText], -1, Businesses[id][BizX], Businesses[id][BizY], Businesses[id][BizZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, Businesses[id][BizStartWorld], Businesses[id][BizStartInt], -1);
			mysql_query(MySQL, "SELECT * FROM `businesses`");
			tempname[0] = '\0';
			largequery[0] = '\0';
		}
	}
	return 1;
}

public OnAirportFastTravelLoadData()
{
	for (new a = 0; a < cache_num_rows(); a++)
	{
		AirportFTInfo[cache_get_row_int(a, 0)][APX] = cache_get_row_float(a, 1);
		AirportFTInfo[cache_get_row_int(a, 0)][APY] = cache_get_row_float(a, 2);
		AirportFTInfo[cache_get_row_int(a, 0)][APZ] = cache_get_row_float(a, 3);
		AirportFTInfo[cache_get_row_int(a, 0)][APAirportID] = cache_get_row_int(a, 4);

		if(AirportFTInfo[cache_get_row_int(a, 0)][APAirportID] == 1){
			format(AirportFTInfo[cache_get_row_int(a, 0)][APTempText], 325, "{FF0000}Los Santos Airport{FFFFFF} Checkout #%i\n/airportfasttravel ", (cache_get_row_int(a, 0)));
			AirportFTInfo[cache_get_row_int(a, 0)][APIcon] = CreateDynamicPickup(19606, 23, AirportFTInfo[cache_get_row_int(a, 0)][APX], AirportFTInfo[cache_get_row_int(a, 0)][APY], AirportFTInfo[cache_get_row_int(a, 0)][APZ], -1, -1, -1);
		} else if(AirportFTInfo[cache_get_row_int(a, 0)][APAirportID] == 2){
			format(AirportFTInfo[cache_get_row_int(a, 0)][APTempText], 325, "{FF0000}San Fierro Airport{FFFFFF} Checkout #%i\n/airportfasttravel", (cache_get_row_int(a, 0)));
			AirportFTInfo[cache_get_row_int(a, 0)][APIcon] = CreateDynamicPickup(19607, 23, AirportFTInfo[cache_get_row_int(a, 0)][APX], AirportFTInfo[cache_get_row_int(a, 0)][APY], AirportFTInfo[cache_get_row_int(a, 0)][APZ], -1, -1, -1);
		} else if(AirportFTInfo[cache_get_row_int(a, 0)][APAirportID] == 3){
			format(AirportFTInfo[cache_get_row_int(a, 0)][APTempText], 325, "{FF0000}Las Venturas Airport{FFFFFF} Checkout #%i\n/airportfasttravel", (cache_get_row_int(a, 0)));
			AirportFTInfo[cache_get_row_int(a, 0)][APIcon] = CreateDynamicPickup(19605, 23, AirportFTInfo[cache_get_row_int(a, 0)][APX], AirportFTInfo[cache_get_row_int(a, 0)][APY], AirportFTInfo[cache_get_row_int(a, 0)][APZ], -1, -1, -1);
		}
		AirportFTInfo[cache_get_row_int(a, 0)][APText] = CreateDynamic3DTextLabel(AirportFTInfo[cache_get_row_int(a, 0)][APTempText], -1, AirportFTInfo[cache_get_row_int(a, 0)][APX], AirportFTInfo[cache_get_row_int(a, 0)][APY], AirportFTInfo[cache_get_row_int(a, 0)][APZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1);
	}
	return 1;
}

public OnDMVLoadData()
{
	for (new a = 0; a < cache_num_rows(); a++)
	{
		DMVInfo[cache_get_row_int(a, 0)][DMVX] = cache_get_row_float(a, 1);
		DMVInfo[cache_get_row_int(a, 0)][DMVY] = cache_get_row_float(a, 2);
		DMVInfo[cache_get_row_int(a, 0)][DMVZ] = cache_get_row_float(a, 3);
		DMVInfo[cache_get_row_int(a, 0)][DMVIntX] = cache_get_row_float(a, 4);
		DMVInfo[cache_get_row_int(a, 0)][DMVIntY] = cache_get_row_float(a, 5);
		DMVInfo[cache_get_row_int(a, 0)][DMVIntZ] = cache_get_row_float(a, 6);
		DMVInfo[cache_get_row_int(a, 0)][DMVStartWorld] = cache_get_row_int(a, 7);
		DMVInfo[cache_get_row_int(a, 0)][DMVStartInt] = cache_get_row_int(a, 8);
		DMVInfo[cache_get_row_int(a, 0)][DMVEndWorld] = cache_get_row_int(a, 9);
		DMVInfo[cache_get_row_int(a, 0)][DMVEndInt] = cache_get_row_int(a, 10);
		
		DMVInfo[cache_get_row_int(a, 0)][DMVMapIcon] = CreateDynamicMapIcon(DMVInfo[cache_get_row_int(a, 0)][DMVX], DMVInfo[cache_get_row_int(a, 0)][DMVY], DMVInfo[cache_get_row_int(a, 0)][DMVZ], 51, -1, DMVInfo[cache_get_row_int(a, 0)][DMVStartWorld], DMVInfo[cache_get_row_int(a, 0)][DMVStartInt], -1, 500, MAPICON_GLOBAL);
		
		DMVInfo[cache_get_row_int(a, 0)][DMVEndIcon] = CreateDynamicPickup(1239, 23, DMVInfo[cache_get_row_int(a, 0)][DMVIntX], DMVInfo[cache_get_row_int(a, 0)][DMVIntY], DMVInfo[cache_get_row_int(a, 0)][DMVIntZ], DMVInfo[cache_get_row_int(a, 0)][DMVEndWorld], DMVInfo[cache_get_row_int(a, 0)][DMVEndInt], -1);
		DMVInfo[cache_get_row_int(a, 0)][DMVEndText] = CreateDynamic3DTextLabel("/exit", -1, DMVInfo[cache_get_row_int(a, 0)][DMVIntX], DMVInfo[cache_get_row_int(a, 0)][DMVIntY], DMVInfo[cache_get_row_int(a, 0)][DMVIntZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DMVInfo[cache_get_row_int(a, 0)][DMVEndWorld], DMVInfo[cache_get_row_int(a, 0)][DMVEndInt], -1);
		
		DMVInfo[cache_get_row_int(a, 0)][DMVStartIcon] = CreateDynamicPickup(1239, 23, DMVInfo[cache_get_row_int(a, 0)][DMVX], DMVInfo[cache_get_row_int(a, 0)][DMVY], DMVInfo[cache_get_row_int(a, 0)][DMVZ], DMVInfo[cache_get_row_int(a, 0)][DMVStartWorld], DMVInfo[cache_get_row_int(a, 0)][DMVStartInt], -1);
		format(DMVInfo[cache_get_row_int(a, 0)][DMVTempText], 325, "DMV (%i){FFFFFF}\n(/enter)", (cache_get_row_int(a, 0)));
		DMVInfo[cache_get_row_int(a, 0)][DMVStartText] = CreateDynamic3DTextLabel(DMVInfo[cache_get_row_int(a, 0)][DMVTempText], -1, DMVInfo[cache_get_row_int(a, 0)][DMVX], DMVInfo[cache_get_row_int(a, 0)][DMVY], DMVInfo[cache_get_row_int(a, 0)][DMVZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DMVInfo[cache_get_row_int(a, 0)][DMVStartWorld], DMVInfo[cache_get_row_int(a, 0)][DMVStartInt], -1);
	}
	return 1;
}

public OnInteriorLoadData()
{
	for (new a = 0; a < cache_num_rows(); a++)
	{
		new InteriorName[100], InteriorPass[31];
		cache_get_row(a, 7, InteriorName);
		format(InteriorInfo[cache_get_row_int(a, 0)][IntName], 100, InteriorName);
		cache_get_row(a, 9, InteriorPass);
		format(InteriorInfo[cache_get_row_int(a, 0)][IntPassword], 30, InteriorPass);
		InteriorInfo[cache_get_row_int(a, 0)][IntX] = cache_get_row_float(a, 1);
		InteriorInfo[cache_get_row_int(a, 0)][IntY] = cache_get_row_float(a, 2);
		InteriorInfo[cache_get_row_int(a, 0)][IntZ] = cache_get_row_float(a, 3);
		InteriorInfo[cache_get_row_int(a, 0)][IntIntX] = cache_get_row_float(a, 4);
		InteriorInfo[cache_get_row_int(a, 0)][IntIntY] = cache_get_row_float(a, 5);
		InteriorInfo[cache_get_row_int(a, 0)][IntIntZ] = cache_get_row_float(a, 6);
		InteriorInfo[cache_get_row_int(a, 0)][IntOwner] = cache_get_row_int(a, 8);
		InteriorInfo[cache_get_row_int(a, 0)][IntFaction] = cache_get_row_int(a, 10);
		InteriorInfo[cache_get_row_int(a, 0)][IntFaction2] = cache_get_row_int(a, 11);
		InteriorInfo[cache_get_row_int(a, 0)][IntFaction3] = cache_get_row_int(a, 12);
		InteriorInfo[cache_get_row_int(a, 0)][IntStartWorld] = cache_get_row_int(a, 13);
		InteriorInfo[cache_get_row_int(a, 0)][IntStartInt] = cache_get_row_int(a, 14);
		InteriorInfo[cache_get_row_int(a, 0)][IntEndWorld] = cache_get_row_int(a, 15);
		InteriorInfo[cache_get_row_int(a, 0)][IntEndInt] = cache_get_row_int(a, 16);
		InteriorInfo[cache_get_row_int(a, 0)][IntWhiteList] = cache_get_row_int(a, 17);
		InteriorInfo[cache_get_row_int(a, 0)][IntMapIconID] = cache_get_row_int(a, 18);
		if(InteriorInfo[cache_get_row_int(a, 0)][IntMapIconID] != 0) {
			InteriorInfo[cache_get_row_int(a, 0)][IntMapIcon] = CreateDynamicMapIcon(InteriorInfo[cache_get_row_int(a, 0)][IntX], InteriorInfo[cache_get_row_int(a, 0)][IntY], InteriorInfo[cache_get_row_int(a, 0)][IntZ], InteriorInfo[cache_get_row_int(a, 0)][IntMapIconID], -1, InteriorInfo[cache_get_row_int(a, 0)][IntStartWorld], InteriorInfo[cache_get_row_int(a, 0)][IntStartInt], -1, 500, MAPICON_GLOBAL);
		}
		
		InteriorInfo[cache_get_row_int(a, 0)][IntIntIcon] = CreateDynamicPickup(1239, 23, InteriorInfo[cache_get_row_int(a, 0)][IntIntX], InteriorInfo[cache_get_row_int(a, 0)][IntIntY], InteriorInfo[cache_get_row_int(a, 0)][IntIntZ], InteriorInfo[cache_get_row_int(a, 0)][IntEndWorld], InteriorInfo[cache_get_row_int(a, 0)][IntEndInt], -1);
		InteriorInfo[cache_get_row_int(a, 0)][IntIntText] = CreateDynamic3DTextLabel("/exit", -1, InteriorInfo[cache_get_row_int(a, 0)][IntIntX], InteriorInfo[cache_get_row_int(a, 0)][IntIntY], InteriorInfo[cache_get_row_int(a, 0)][IntIntZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, InteriorInfo[cache_get_row_int(a, 0)][IntEndWorld], InteriorInfo[cache_get_row_int(a, 0)][IntEndInt], -1);
		
		InteriorInfo[cache_get_row_int(a, 0)][IntIcon] = CreateDynamicPickup(1239, 23, InteriorInfo[cache_get_row_int(a, 0)][IntX], InteriorInfo[cache_get_row_int(a, 0)][IntY], InteriorInfo[cache_get_row_int(a, 0)][IntZ], InteriorInfo[cache_get_row_int(a, 0)][IntStartWorld], InteriorInfo[cache_get_row_int(a, 0)][IntStartInt], -1);
		format(InteriorInfo[cache_get_row_int(a, 0)][IntTempText], 300, "%s (%i){FFFFFF}\n(/enter)", InteriorInfo[cache_get_row_int(a, 0)][IntName], (cache_get_row_int(a, 0)));
		InteriorInfo[cache_get_row_int(a, 0)][IntText] = CreateDynamic3DTextLabel(InteriorInfo[cache_get_row_int(a, 0)][IntTempText], -1, InteriorInfo[cache_get_row_int(a, 0)][IntX], InteriorInfo[cache_get_row_int(a, 0)][IntY], InteriorInfo[cache_get_row_int(a, 0)][IntZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, InteriorInfo[cache_get_row_int(a, 0)][IntStartWorld], InteriorInfo[cache_get_row_int(a, 0)][IntStartInt], -1);
		InteriorName[0] = '\0';
		InteriorPass[0] = '\0';
	}
	return 1;
}

public OnArrestPointLoadData()
{
	for (new a = 0; a < cache_get_row_count(); a++)
	{
		ArrestPointInfo[cache_get_row_int(a, 0)][APXStart] = cache_get_row_float(a, 1);
		ArrestPointInfo[cache_get_row_int(a, 0)][APYStart] = cache_get_row_float(a, 2);
		ArrestPointInfo[cache_get_row_int(a, 0)][APZStart] = cache_get_row_float(a, 3);
		ArrestPointInfo[cache_get_row_int(a, 0)][APXEnd] = cache_get_row_float(a, 4);
		ArrestPointInfo[cache_get_row_int(a, 0)][APYEnd] = cache_get_row_float(a, 5);
		ArrestPointInfo[cache_get_row_int(a, 0)][APZEnd] = cache_get_row_float(a, 6);
		ArrestPointInfo[cache_get_row_int(a, 0)][APFaction] = cache_get_row_int(a,7);
		ArrestPointInfo[cache_get_row_int(a, 0)][APWorldStart] = cache_get_row_int(a,8);
		ArrestPointInfo[cache_get_row_int(a, 0)][APInteriorStart] = cache_get_row_int(a,9);
		ArrestPointInfo[cache_get_row_int(a, 0)][APWorldEnd] = cache_get_row_int(a,10);
		ArrestPointInfo[cache_get_row_int(a, 0)][APInteriorEnd] = cache_get_row_int(a,11);
		
		new ArrestPointName[75+1];
		format(ArrestPointName, 325, "{FFFFFF}%s (%i)\n/arrest", FactionInfo[ArrestPointInfo[cache_get_row_int(a, 0)][APFaction]][FactionLongName], cache_get_row_int(a, 0));
		ArrestPointInfo[cache_get_row_int(a, 0)][APTextStart] = CreateDynamic3DTextLabel(ArrestPointName, -1, ArrestPointInfo[cache_get_row_int(a, 0)][APXStart], ArrestPointInfo[cache_get_row_int(a, 0)][APYStart], ArrestPointInfo[cache_get_row_int(a, 0)][APZStart], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, ArrestPointInfo[cache_get_row_int(a, 0)][APWorldStart], ArrestPointInfo[cache_get_row_int(a, 0)][APInteriorStart], -1);
		
		ArrestPointInfo[cache_get_row_int(a, 0)][APIconStart] = CreateDynamicPickup(19605, 23, ArrestPointInfo[cache_get_row_int(a, 0)][APXStart], ArrestPointInfo[cache_get_row_int(a, 0)][APYStart], ArrestPointInfo[cache_get_row_int(a, 0)][APZStart], ArrestPointInfo[cache_get_row_int(a, 0)][APWorldStart], ArrestPointInfo[cache_get_row_int(a, 0)][APInteriorStart], -1);
		ArrestPointInfo[cache_get_row_int(a, 0)][APIconEnd] = CreateDynamicPickup(19607, 23, ArrestPointInfo[cache_get_row_int(a, 0)][APXEnd], ArrestPointInfo[cache_get_row_int(a, 0)][APYEnd], ArrestPointInfo[cache_get_row_int(a, 0)][APZEnd], ArrestPointInfo[cache_get_row_int(a, 0)][APWorldEnd], ArrestPointInfo[cache_get_row_int(a, 0)][APInteriorEnd], -1);
		ArrestPointName[0] = '\0';
	}
	return 1;
}

public OnArrestPointZoneLoadData()
{
	for (new a = 0; a < cache_get_row_count(); a++)
	{
		ArrestPointZonesInfo[cache_get_row_int(a, 0)][APZX] = cache_get_row_float(a, 1);
		ArrestPointZonesInfo[cache_get_row_int(a, 0)][APZY] = cache_get_row_float(a, 2);
		ArrestPointZonesInfo[cache_get_row_int(a, 0)][APZZ] = cache_get_row_float(a, 3);
		ArrestPointZonesInfo[cache_get_row_int(a, 0)][APZID] = cache_get_row_int(a, 4);
		ArrestPointZonesInfo[cache_get_row_int(a, 0)][APZWorld] = cache_get_row_int(a, 5);
		ArrestPointZonesInfo[cache_get_row_int(a, 0)][APZInterior] = cache_get_row_int(a, 6);
		
		new ArrestPointName[75+1];
		format(ArrestPointName, 325, "{FFFFFF}Cell #%i", cache_get_row_int(a, 0));
		ArrestPointZonesInfo[cache_get_row_int(a, 0)][APZText] = CreateDynamic3DTextLabel(ArrestPointName, -1, ArrestPointZonesInfo[cache_get_row_int(a, 0)][APZX], ArrestPointZonesInfo[cache_get_row_int(a, 0)][APZY], ArrestPointZonesInfo[cache_get_row_int(a, 0)][APZZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, ArrestPointZonesInfo[cache_get_row_int(a, 0)][APZWorld], ArrestPointZonesInfo[cache_get_row_int(a, 0)][APZInterior], -1);
		ArrestPointName[0] = '\0';
	}
	return 1;
}

/**********************************
 *                                *
 *      Player Speak Locator      *
 *                                *
 **********************************/

IsPlayerNearAnotherPlayer(playerid, text[])
{
	if(PlayerInfo[playerid][Online] == 1){
		new message[144];
		
		format(message, sizeof(message), "Says: %s", text);
		SetPlayerChatBubble(playerid, message, 0xFFFFFFFF, 16, 7000);
		format(message, sizeof(message), "%s: %s", str_replace("_", " ", GetPlayerNameEx(playerid)), text);
		
		GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
		foreach(Player, i){
			if(PlayerInfo[i][Online] == 1) {
				if(IsPlayerInRangeOfPoint(i, 1, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
					SendClientMessage(i, 0xFFFFFFFF, message);
				} else if(IsPlayerInRangeOfPoint(i, 2, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
					SendClientMessage(i, 0xFAFAFAFF, message);
				} else if(IsPlayerInRangeOfPoint(i, 3, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
					SendClientMessage(i, 0xF6F6F6FF, message);
				} else if(IsPlayerInRangeOfPoint(i, 4, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
					SendClientMessage(i, 0xF1F1F1FF, message);
				} else if(IsPlayerInRangeOfPoint(i, 5, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
					SendClientMessage(i, 0xEDEDEDFF, message);
				} else if(IsPlayerInRangeOfPoint(i, 6, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
					SendClientMessage(i, 0xE9E9E9FF, message);
				} else if(IsPlayerInRangeOfPoint(i, 7, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
					SendClientMessage(i, 0xE4E4E4FF, message);
				} else if(IsPlayerInRangeOfPoint(i, 8, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
					SendClientMessage(i, 0xE0E0E0FF, message);
				} else if(IsPlayerInRangeOfPoint(i, 9, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
					SendClientMessage(i, 0xDBDBDBFF, message);
				} else if(IsPlayerInRangeOfPoint(i, 10, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
					SendClientMessage(i, 0xD7D7D7FF, message);
				} else if(IsPlayerInRangeOfPoint(i, 11, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
					SendClientMessage(i, 0xD3D3D3FF, message);
				} else if(IsPlayerInRangeOfPoint(i, 12, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
					SendClientMessage(i, 0xBDBDBDFF, message);
				} else if(IsPlayerInRangeOfPoint(i, 13, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
					SendClientMessage(i, 0xA8A8A8FF, message);
				} else if(IsPlayerInRangeOfPoint(i, 14, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
					SendClientMessage(i, 0x939393FF, message);
				} else if(IsPlayerInRangeOfPoint(i, 15, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
					SendClientMessage(i, 0x7E7E7EFF, message);
				} else if(IsPlayerInRangeOfPoint(i, 16, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
					SendClientMessage(i, 0x696969FF, message);
				}
			}
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
}

public OnPlayerText(playerid, text[])
{
	IsPlayerNearAnotherPlayer(playerid, text);
	SystemLogsInsert(playerid, "CHAT", text);
	return 0;
}

/*
public OnPlayerCommandText(playerid, cmdtext[])
{
	return 1;
}
*/

/**********************************
 *                                *
 *          Updates Tax           *
 *                                *
 **********************************/

public OnGameModeExit()
{
	new largequery[200];
	mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `tax_percentage` SET `treassury`=%i WHERE `id` = 1 LIMIT 1", TaxMoney);
	mysql_query(MySQL, largequery);
	largequery[0] = '\0';
	
	mysql_close(MySQL);
	return 1;
}

/**********************************
 *                                *
 *       Dealer Test Drive        *
 *                                *
 **********************************/

forward DealershipTestDrive(playerid, vehid);
public DealershipTestDrive(playerid, vehid)
{
	LastVehicleID[vehid] = 0;
	Vehicles[vehid][VDBID] = 0;
	DestroyVehicle(vehid);
	ClientMessenger(playerid, "FFFF00", 3, "Times up, you can go back to the dealer to test another car, or buy a vehicle!");
	PlayerInfo[playerid][AllEditingOptions4][1] = 0;
}

/**********************************
 *                                *
 *         Player Spawner         *
 *                                *
 **********************************/

forward AlowedtoRespawn(playerid);
public AlowedtoRespawn(playerid)
{
	new largequery[256];
	SetPlayerHealth(playerid, 100);
	PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - 2000);
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
	PlayerInfo[playerid][HP] = 100;
	PlayerInfo[playerid][Armor] = 0;
	if(LastHospitalID[PlayerInfo[playerid][TempInfo][6]] == 1){
		SetPlayerPos(playerid, HospitalInfo[PlayerInfo[playerid][TempInfo][6]][HPX], HospitalInfo[PlayerInfo[playerid][TempInfo][6]][HPY], (HospitalInfo[PlayerInfo[playerid][TempInfo][6]][HPZ]+1.5));
		PlayerInfo[playerid][PosX] = HospitalInfo[PlayerInfo[playerid][TempInfo][6]][HPX];
		PlayerInfo[playerid][PosY] = HospitalInfo[PlayerInfo[playerid][TempInfo][6]][HPY];
		PlayerInfo[playerid][PosZ] = (HospitalInfo[PlayerInfo[playerid][TempInfo][6]][HPZ]+1.5);
		mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `dead`=0, `money`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
		mysql_query(MySQL, largequery);
	}
	PlayerInfo[playerid][FacingAngle] = 0;
	PlayerInfo[playerid][TempInfo][6] = 0;
	PlayerInfo[playerid][TempInfo][13] = 0;
	
	TogglePlayerControllable(playerid,1);
	
	SetCameraBehindPlayer(playerid);
	
	ClientMessenger(playerid, "CD5C5C", 3, "You have been released, stay safe. We've charged you $2,000 dollars towards your bill.");
}

public OnPlayerSpawn(playerid)
{
	if(!IsPlayerNPC(playerid)){
		new largequery[256];
		PlayerInfo[playerid][Online] = 1;
		ResetPlayerMoney(playerid);
		GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
		SetPlayerSkin(playerid, PlayerInfo[playerid][Skin]);
		if(PlayerInfo[playerid][TempInfo][6] >= 1) {
			if(PlayerInfo[playerid][TempInfo][12] <= 0){
				SetPlayerHealth(playerid, 100);
				SetPlayerArmour(playerid, 0);
				TogglePlayerControllable(playerid,0);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				if(LastHospitalID[PlayerInfo[playerid][TempInfo][6]] == 1){
					SetPlayerPos(playerid, HospitalInfo[PlayerInfo[playerid][TempInfo][6]][HPX], HospitalInfo[PlayerInfo[playerid][TempInfo][6]][HPY], (HospitalInfo[PlayerInfo[playerid][TempInfo][6]][HPZ]-10));
					PlayerInfo[playerid][PosX] = HospitalInfo[PlayerInfo[playerid][TempInfo][6]][HPX];
					PlayerInfo[playerid][PosY] = HospitalInfo[PlayerInfo[playerid][TempInfo][6]][HPY];
					PlayerInfo[playerid][PosZ] = (HospitalInfo[PlayerInfo[playerid][TempInfo][6]][HPZ]-10);
					SetPlayerCameraPos(playerid, HospitalInfo[PlayerInfo[playerid][TempInfo][6]][HPCX], HospitalInfo[PlayerInfo[playerid][TempInfo][6]][HPCY], HospitalInfo[PlayerInfo[playerid][TempInfo][6]][HPCZ]);
					SetPlayerCameraLookAt(playerid,HospitalInfo[PlayerInfo[playerid][TempInfo][6]][HPX], HospitalInfo[PlayerInfo[playerid][TempInfo][6]][HPY], HospitalInfo[PlayerInfo[playerid][TempInfo][6]][HPZ]);
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`=0, `interior`=0, `health`='100', `armor`='0' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][DBID]);
					mysql_query(MySQL, largequery);
				}
				PlayerInfo[playerid][HP] = 100;
				PlayerInfo[playerid][Armor] = 0;
				PlayerInfo[playerid][FacingAngle] = 0;
				PlayerInfo[playerid][InteriorID] = 0;
				PlayerInfo[playerid][WorldID] = 0;
				ClientMessenger(playerid, "CD5C5C", 3, "Doctor: You passed out due to blood loss, you're going to have to wait a while before you are released!");
				ClientMessenger(playerid, "CD5C5C", 3, "((You have lost 30 minutes of your memory, you must now wait 60 seconds before respawning!))");
				SetTimerEx("AlowedtoRespawn", 5000, false, "i", playerid);
				PlayerInfo[playerid][TempInfo][13] = 0;
			} else {
				IsPlayerPrisonedJailed(playerid);
			}
		} else {
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid,1);
			SetPlayerInterior(playerid, PlayerInfo[playerid][InteriorID]);
			SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][WorldID]);
			SetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
			SetPlayerFacingAngle(playerid, PlayerInfo[playerid][FacingAngle]);
			SetPlayerHealth(playerid, PlayerInfo[playerid][HP]);
			SetPlayerArmour(playerid, PlayerInfo[playerid][Armor]);
			SpawnPlayerWeapons(playerid);
			IsPlayerPrisonedJailed(playerid);
			PlayerInfo[playerid][TempInfo][13] = 0;
		}
	} else {
		/*s
		if(!strcmp(GetPlayerNameEx(playerid), "Unknown_Doctor")){
			SetPlayerVirtualWorld(playerid, 666);
			SetPlayerSkin(playerid, 70);
		} else if(!strcmp(GetPlayerNameEx(playerid), "Agent_23")){
			SetPlayerVirtualWorld(playerid, 666);
			SetPlayerSkin(playerid, 166);
		} else if(!strcmp(GetPlayerNameEx(playerid), "Agent_89")){
			SetPlayerVirtualWorld(playerid, 666);
			SetPlayerSkin(playerid, 166);
		} else if(!strcmp(GetPlayerNameEx(playerid), "Agent_14")){
			SetPlayerVirtualWorld(playerid, 666);
			SetPlayerSkin(playerid, 165);
		} else if(!strcmp(GetPlayerNameEx(playerid), "Sergeant_Johnson")){
			SetPlayerVirtualWorld(playerid, 666);
			SetPlayerSkin(playerid, 287);
		} else if(!strcmp(GetPlayerNameEx(playerid), "Private_Adams")){
			SetPlayerVirtualWorld(playerid, 666);
			SetPlayerSkin(playerid, 287);
		} else if(!strcmp(GetPlayerNameEx(playerid), "Private_Waggler")){
			SetPlayerVirtualWorld(playerid, 666);
			SetPlayerSkin(playerid, 287);
		}
		*/
	}
	return 1;
}

/******************************************
 *                                        *
 *  Check to see if player is bot/online  *
 *                                        *
 ******************************************/

public OnPlayerRequestSpawn(playerid)
{
	if(PlayerInfo[playerid][Online] == 1 && !IsPlayerNPC(playerid)){
		return 1;
	} else if(IsPlayerNPC(playerid)) {
		return 1;
	} else {
		return 0;
	}
}
forward findplayerhouse(playerid);
forward resetvehiclespawn(playerid);
forward delayspawn(playerid);
forward delaykick(playerid);

/**********************************
 *                                *
 *    Initial Player Startups     *
 *                                *
 **********************************/
public resetvehiclespawn(playerid)
{
	for(new a = 1; a <= MAX_PLAYER_VEHICLES; a++)
	{
		if(PlayerInfo[playerid][PVehs][a] != 0){
			SetVehiclePos(PlayerInfo[playerid][PVehsID][a], Vehicles[PlayerInfo[playerid][PVehsID][a]][VehX], Vehicles[PlayerInfo[playerid][PVehsID][a]][VehY], Vehicles[PlayerInfo[playerid][PVehsID][a]][VehZ]);
			SetVehicleZAngle(PlayerInfo[playerid][PVehsID][a], Vehicles[PlayerInfo[playerid][PVehsID][a]][VehA]);
		}
	}
}
public findplayerhouse(playerid)
{
	DestroyDynamicMapIcon(HouseInfo[PlayerInfo[playerid][House]][HouseMapIcon]);
	HouseInfo[PlayerInfo[playerid][House]][HouseMapIcon] = CreateDynamicMapIcon(HouseInfo[PlayerInfo[playerid][House]][HouseX], HouseInfo[PlayerInfo[playerid][House]][HouseY], HouseInfo[PlayerInfo[playerid][House]][HouseZ], 31, -1, HouseInfo[PlayerInfo[playerid][House]][HouseStartWorld], HouseInfo[PlayerInfo[playerid][House]][HouseStartInt], playerid, -1, MAPICON_GLOBAL);
}
public delayspawn(playerid)
{
	ClearPlayerScreen(playerid);
	new message[144];
	if(PlayerInfo[playerid][Level] == 1) {
		ClientMessenger(playerid, "FFFFFF", 3, "You are new here. If you need help feel free to use {ADD8E6}/newb{FFFFFF} or {FF0000}/help{FFFFFF}.");
	} else {
		new hostname[64];
		GetServerVarAsString("hostname", hostname, sizeof(hostname));
		format(message, sizeof(message), "Welcone back to {00FFFF}%s{FFFFFF}! Enjoy your stay here!", hostname);
		ClientMessenger(playerid, "FFFFFF", 3, message);
		ClientMessenger(playerid, "FFFFFF", 3, "If you need help feel free to use {ADD8E6}/newb{FFFFFF} or {FF0000}/help{FFFFFF}.");
		hostname[0] = '\0';
		message[0] = '\0';
	}
	if(PlayerInfo[playerid][Admin] >= 1){
		format(message, sizeof(message), "You have logged in as a {%s}%s", GetAdminRanksC(PlayerInfo[playerid][Admin]), GetAdminRanks(PlayerInfo[playerid][Admin]));
		ClientMessenger(playerid, "FF0000", 1, message);
		ClientMessenger(playerid, "FFFFFF", 3, "Remeber to check {FF0000}/amsgs{FFFFFF} to view anything new!");
		message[0] = '\0';
	}
	message[0] = '\0';
	SpawnPlayer(playerid);
}
public delaykick(playerid)
{
	Kick(playerid);
}

ClearPlayerScreen(playerid)
{
	for(new a = 0; a < 100; a++){
		SendClientMessage(playerid,-1,"");
	}
}

RemoveBuildings(playerid)
{
	RemoveBuildingForPlayer(playerid, -1, 266.3516, 81.1953, 1001.2813, 0.25); // LSPD Cell Doors
	RemoveBuildingForPlayer(playerid, 14856, 198.4688, 168.6797, 1003.8984, 0.25); // LVPD Cell Doors
}

ResetPlayerVariables(playerid)
{
	SetPlayerHealth(playerid, 100);
	InvitesAwaiting[playerid][Faction] = 0;
	InvitesAwaiting[playerid][FactionInviter] = 65535;
	InvitesAwaiting[playerid][MarriageInviter] = 65535;
	PlayerInfo[playerid][Admin] = 0;
	PlayerInfo[playerid][FactionModerator] = 0;
	PlayerInfo[playerid][PropertyModerator] = 0;
	PlayerInfo[playerid][Helper] = 0;
	PlayerInfo[playerid][Online] = 0;
	PlayerInfo[playerid][HP] = 0;
	PlayerInfo[playerid][Skin] = 0;
	PlayerInfo[playerid][Armor] = 0;
	PlayerInfo[playerid][TempInfo][9] = 0;
	PlayerInfo[playerid][ViewingCamera] = 0;
	PlayerInfo[playerid][TempInfo][7] = 0;
	PlayerInfo[playerid][TempInfo][16] = 0;
	PlayerInfo[playerid][Level] = 0;
	PlayerInfo[playerid][RespectPoints] = 0;
	PlayerInfo[playerid][House] = 0;
	PlayerInfo[playerid][TempInfo][17] = 0;
	PlayerInfo[playerid][TempInfo][8] = 0;
	PlayerInfo[playerid][CrimesCommitted] = 0;
	PlayerInfo[playerid][TempInfo][18] = 0;
	PlayerInfo[playerid][Biz] = 0;
	PlayerInfo[playerid][TempInfo][12] = 0;
	PlayerInfo[playerid][VIP] = 0;
	PlayerInfo[playerid][Minutes][0] = 0;
	PlayerInfo[playerid][Minutes][1] = 0;
	PlayerInfo[playerid][Minutes][2] = 0;
	PlayerInfo[playerid][TempInfo][13] = 0;
	PlayerInfo[playerid][TempInfo][15] = 0;
	PlayerInfo[playerid][TempInfo][19] = 0;
	PlayerInfo[playerid][MDCList] = 0;
	PlayerInfo[playerid][AllEditingOptions2] = 0;
	PlayerInfo[playerid][AllEditingOptions] = 0;
	PlayerInfo[playerid][Tikis] = 0;
	PlayerInfo[playerid][Gender] = 0;
	PlayerInfo[playerid][WorldID] = 0;
	PlayerInfo[playerid][InteriorID] = 0;
	PlayerInfo[playerid][Faction] = 0;
	PlayerInfo[playerid][TempInfo][23] = 0;
	PlayerInfo[playerid][TempInfo][22] = 0;
	PlayerInfo[playerid][FakeFaction] = 0;
	PlayerInfo[playerid][FactionLevel] = 0;
	PlayerInfo[playerid][FactionLeader] = 0;
	PlayerInfo[playerid][PosX] = 0;
	PlayerInfo[playerid][PosY] = 0;
	PlayerInfo[playerid][PosZ] = 0;
	PlayerInfo[playerid][FacingAngle] = 0;
	PlayerInfo[playerid][Job] = 0;
	PlayerInfo[playerid][Warrants] = 0;
	ReadAllMessages[playerid][0] = '\0';
	PlayerTextDrawDestroy(playerid, PlayerInfo[playerid][GameText]);
	for(new a = 1; a <= 5; a++)
	{
	PlayerInfo[playerid][Licenses][a] = 0;
	}
	PlayerInfo[playerid][CPLoc] = 0;
	for(new a = 0; a < 6; a++)
	{
	PlayerInfo[playerid][TempInfo][a] = 0;
	}
	for(new a = 0; a < MAX_PLAYERS; a++)
	{
	PlayerInfo[playerid][AllEditingOptions3][a] = 0;
	PlayerInfo[playerid][AllEditingOptions4][a] = 0;
	}
	for(new a = 1; a <= MAX_PLAYER_VEHICLES; a++)
	{
	PlayerInfo[playerid][PVehs][a] = 0;
	PlayerInfo[playerid][PVehsID][a] = 0;
	}
	for(new a = 1; a <= 3; a++)
	{
	PlayerInfo[playerid][DOB][a] = 0;
	}
	for(new a = 1; a <= 10; a++)
	{
	PlayerInfo[playerid][JobLevels][a] = 1;
	PlayerInfo[playerid][JobLevelsP][a] = 0;
	PlayerInfo[playerid][JobItems][a] = 0;
	}
	for(new a = 0; a <= 12; a++)
	{
	PlayerInfo[playerid][Weapons][a] = 0;
	}
	format(PlayerInfo[playerid][NewbieTag], 31, "Newbie");
	format(PlayerInfo[playerid][RealName], MAX_PLAYER_NAME, "");
	format(PlayerInfo[playerid][FakeName], MAX_PLAYER_NAME, "");
}

public OnPlayerConnect(playerid)
{
	ResetPlayerVariables(playerid);
	/* Defaultly will set all Infos to 0 to avoid any issues - justin */
	if(!IsPlayerNPC(playerid)){
	
		//Sets Usable Colours to White
		SetPlayerColor(playerid, 0xFFFFFF00);
		foreach(Player, i)
		{
			SetPlayerMarkerForPlayer( i, playerid, ( GetPlayerColor( playerid ) & 0xFFFFFF00 ) );
		}
	
		new largequery[256], plrIP[16], message[144];

		// Checks player to see if he/she is banned
		GetPlayerIp(playerid, plrIP, sizeof(plrIP));
		mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `name` = '%e' LIMIT 1", GetPlayerNameEx(playerid));
		mysql_query(MySQL, largequery);
		mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `banned` WHERE `Banned` = 1 AND `BannedIP` = '%e' OR `Banned` = 1 AND `BannedID` = %i LIMIT 1", plrIP, cache_get_field_content_int(0, "id"));
		mysql_query(MySQL, largequery);
		if(cache_num_rows() == 1) { // Player was found to be banned
			PlayAudioStreamForPlayer(playerid, "https://raw.githubusercontent.com/chaos12135/sarp_forum/master/_files/ban_hammer.mp3");
			SendClientMessage(playerid,-1,"");
			SendClientMessage(playerid,-1,"|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -|");
			SendClientMessage(playerid,-1,"|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -|");
			SendClientMessage(playerid,-1,"");
			new tempname[MAX_PLAYER_NAME], tempip[16], tempreason[50];
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", cache_get_field_content_int(0, "BannedID"));
			mysql_query(MySQL, largequery);
			cache_get_field_content(0, "name", tempname);
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `banned` WHERE `Banned` = 1 AND `BannedIP` = '%e' OR `Banned` = 1 AND `BannedID` = %i LIMIT 1", plrIP, cache_get_field_content_int(0, "id"));
			mysql_query(MySQL, largequery);
			cache_get_field_content(0, "BannedIP", tempip);
			cache_get_field_content(0, "BanReason", tempreason);
			format(message, sizeof(message), "The account: {FF0000}%s{FFFFFF}({00FFFF}%s{FFFFFF}) is banned for {FFFF00}%s", tempname, tempip, tempreason);
			ClientMessenger(playerid, "FFFFFF", 3, message);
			
			if(cache_get_field_content_int(0, "BannerID") != -1){
				mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", cache_get_field_content_int(0, "BannerID"));
				mysql_query(MySQL, largequery);
				if(cache_get_field_content_int(0, "admin") != 1){
					cache_get_field_content(0, "name", tempname);
				} else {
					format(tempname, sizeof(tempname), "SILENT ADMINISTRATOR");
				}
			} else {
				format(tempname, sizeof(tempname), "SYSTEM ANTI-CHEAT");
			}
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `name` = '%e' LIMIT 1", GetPlayerNameEx(playerid));
			mysql_query(MySQL, largequery);
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `banned` WHERE `Banned` = 1 AND `BannedIP` = '%e' OR `Banned` = 1 AND `BannedID` = %i LIMIT 1", plrIP, cache_get_field_content_int(0, "id"));
			mysql_query(MySQL, largequery);
			format(message, sizeof(message), "You were banned by: {FF0000}%s{FFFFFF} on {FFFF00}%i/%i/%i %i:%i:%i", tempname, cache_get_field_content_int(0, "Bandate_m"), cache_get_field_content_int(0, "Bandate_d"), cache_get_field_content_int(0, "Bandate_y"), cache_get_field_content_int(0, "Bantime_h"), cache_get_field_content_int(0, "Bantime_m"), cache_get_field_content_int(0, "Bantime_s"));
			ClientMessenger(playerid, "FFFFFF", 3, message);
			
			format(message, sizeof(message), "Your ban will be lifted on: {008000}%i/%i/%i", cache_get_field_content_int(0, "UnBandate_m"), cache_get_field_content_int(0, "UnBandate_d"), cache_get_field_content_int(0, "UnBandate_y"));
			ClientMessenger(playerid, "FFFFFF", 3, message);
			SendClientMessage(playerid,-1,"");
			SendClientMessage(playerid,-1,"|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -|");
			SendClientMessage(playerid,-1,"|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -|");
			SetTimerEx("delaykick", 500, false, "i", playerid);
			
		} else { // Player was not banned
		
			TheTime[playerid] = TextDrawCreate(555.000000, 25.000000,"LOADING..");
			TextDrawShowForPlayer(playerid, TheTime[playerid]);
			PlayAudioStreamForPlayer(playerid, "https://raw.githubusercontent.com/chaos12135/sarp_forum/master/_files/theme.mp3");
			ClearPlayerScreen(playerid);
			new Hour, Minute, Second;
			if(DEVELOPERMODE == 1){ // Developer mode just make it so you don't have to use Admin Apassword, because im lazy
				SendClientMessage(playerid,-1,"{FF0000}DEVELOPER MODE{FFFFFF}: Developer mode is currently on!");
			}
			new hostname[64];
			GetServerVarAsString("hostname", hostname, sizeof(hostname));
			format(message, sizeof(message), "Welcome to {00FFFF}%s{FFFFFF}!", hostname);
			ClientMessenger(playerid, "FFFFFF", 3, message);
			hostname[0] = '\0';
			message[0] = '\0';
			
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `fakename` = '%e' LIMIT 1", GetPlayerNameEx(playerid));
			mysql_query(MySQL, largequery);
			if(cache_num_rows() == 1) {
				ClientMessenger(playerid, "FF0000", 1, "This name is already registerd, or is currently in use!");
				SetTimerEx("delaykick", 500, false, "i", playerid);
			} else {
				if(!strcmp(GetPlayerNameEx(playerid), "nil")){
					ClientMessenger(playerid, "FF0000", 1, "You can not join with that name!");
					SetTimerEx("delaykick", 500, false, "i", playerid);
				} else {
					//ResetPlayerVariables(playerid);
					gettime(Hour, Minute, Second);
					SetPlayerTime(playerid, Hour, Minute);
					
					mysql_format(MySQL, largequery, sizeof(largequery), "SELECT `id` FROM `accounts` WHERE `name` = '%e' LIMIT 1;", GetPlayerNameEx(playerid));
					mysql_query(MySQL, largequery);
					TogglePlayerSpectating(playerid, 1);
					TogglePlayerControllable(playerid, 0);
					SetTimerEx("DelayTheSpawnCamera", 750, false, "i", playerid);
					RemoveBuildings(playerid);
					if(cache_num_rows() == 1) { /* Account exists or does not exist, so I decide if there is at least one row or not */
						SetTimerEx("LoginAccount", 500, false, "i", playerid); /* Due to a bug in SAMP, I need to make a timer, or for some reason it won't run correctly */
					} else if(cache_num_rows() >= 1) {
						printf("test3: %i", cache_num_rows() );
					} else {
						new output[10][MAX_PLAYER_NAME], count;
						count = strexplode(output, GetPlayerNameEx(playerid), "_");
						mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `surnames` WHERE `surname` = '%e'", output[sizeof(count)]);
						mysql_query(MySQL, largequery);
						if (count >= 2 && count <= 3) {
							if(cache_num_rows() == 0){
								SetTimerEx("RegisterAccount", 500, false, "i", playerid); /* Due to a bug in SAMP, I need to make a timer, or for some reason it won't run correctly */
							} else {
								printf("%s(%i) attempted to join with surname of: %s",GetPlayerNameEx(playerid), count, output[sizeof(count)]);
								ClientMessenger(playerid, "FF0000", 1, "Sorry, your lastname(surname) is restricted from public use!");
								SetTimerEx("delaykick", 500, false, "i", playerid);
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "You have a incorrect name format. Please rejoin with a name format of FIRST_LAST or FIRST_MIDDLE_LAST.");
							ClientMessenger(playerid, "FFFFFF", 3, "{FF0000}Example{FFFFFF}: James_Rogers, Peter_Griffin, John_M_Zackary, Kyle_Lyn_Tulez");
							ClientMessenger(playerid, "FFFFFF", 3, "The above are example names, not recommendations. They may already be taken, feel free to try though.");
							SetTimerEx("delaykick", 750, false, "i", playerid);
						}
					}
				}
			}
		}
	}
	return 1;
}


new CoolSpawnCamerai[MAX_PLAYERS];
forward CoolSpawnCamera8(playerid);
forward CoolSpawnCamera7(playerid);
forward CoolSpawnCamera6(playerid);
forward CoolSpawnCamera5(playerid);
forward CoolSpawnCamera4(playerid);
forward CoolSpawnCamera3(playerid);
forward CoolSpawnCamera2(playerid);
CoolSpawnCamera(playerid)
{
	if(PlayerInfo[playerid][Online] == 0){
		InterpolateCameraPos(playerid, 1514.113281, -2286.437988, 15.873454, 1565.682006, -2286.484375, 15.873454, 9999, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 1514.113281, -2286.437988, 15.873454, 1565.682006, -2286.484375, 15.873454, 10000, CAMERA_MOVE);
		CoolSpawnCamerai[playerid] = SetTimerEx("CoolSpawnCamera2", 10000, false, "i", playerid);
	}
}
public CoolSpawnCamera8(playerid)
{
	if(PlayerInfo[playerid][Online] == 0){
		KillTimer(CoolSpawnCamerai[playerid]);
		CoolSpawnCamera(playerid);
	}
}
public CoolSpawnCamera7(playerid)
{
	if(PlayerInfo[playerid][Online] == 0){
		KillTimer(CoolSpawnCamerai[playerid]);
		InterpolateCameraPos(playerid, 2445.141357, -1650.780395, 28.769479, 2512.289550, -1689.273437, 20.340950, 9999, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 2497.157714, -1684.764038, 13.400550, 2507.368896, -1657.637573, 13.593750, 9999, CAMERA_MOVE);
		CoolSpawnCamerai[playerid] = SetTimerEx("CoolSpawnCamera8", 9000, false, "i", playerid);
	}
}
public CoolSpawnCamera6(playerid)
{
	if(PlayerInfo[playerid][Online] == 0){
		KillTimer(CoolSpawnCamerai[playerid]);
		InterpolateCameraPos(playerid, 96.913375, 1940.016479, 37.597412, 280.967254, 1827.429931, 31.173822, 9999, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 191.448898, 1914.470581, 17.640625, 268.194244, 1888.891723, 17.640625, 9999, CAMERA_MOVE);
		CoolSpawnCamerai[playerid] = SetTimerEx("CoolSpawnCamera7", 9000, false, "i", playerid);
	}
}
public CoolSpawnCamera5(playerid)
{
	if(PlayerInfo[playerid][Online] == 0){
		KillTimer(CoolSpawnCamerai[playerid]);
		SetPlayerInterior(playerid, 0);
		InterpolateCameraPos(playerid, -2831.555419, 2136.164062, 162.737014, -2536.202636, 1310.551757, 78.119697, 9999, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, -2690.416992, 2026.809082, 72.404762, -2680.600830, 1396.928588, 56.639339, 9999, CAMERA_MOVE);
		CoolSpawnCamerai[playerid] = SetTimerEx("CoolSpawnCamera6", 9000, false, "i", playerid);
	}
}
public CoolSpawnCamera4(playerid)
{
	if(PlayerInfo[playerid][Online] == 0){
		KillTimer(CoolSpawnCamerai[playerid]);
		SetPlayerInterior(playerid, 1);
		InterpolateCameraPos(playerid, -713.135986, 577.603942, 1392.530517, -721.964111, 491.045959, 1384.881591, 9999, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, -735.313842, 564.991027, 1375.188964, -766.490600, 498.859405, 1375.188964, 9999, CAMERA_MOVE);
		CoolSpawnCamerai[playerid] = SetTimerEx("CoolSpawnCamera5", 9000, false, "i", playerid);
	}
}
public CoolSpawnCamera3(playerid)
{
	if(PlayerInfo[playerid][Online] == 0){
		KillTimer(CoolSpawnCamerai[playerid]);
		InterpolateCameraPos(playerid, 2068.817138, -1799.175781, 27.257205, 2068.766357, -1781.741577, 27.257205, 9999, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 2102.630126, -1821.751342, 16.395057, 2103.107666, -1775.086669, 16.127647, 9999, CAMERA_MOVE);
		CoolSpawnCamerai[playerid] = SetTimerEx("CoolSpawnCamera4", 9000, false, "i", playerid);
	}
}
public CoolSpawnCamera2(playerid)
{
	if(PlayerInfo[playerid][Online] == 0){
		KillTimer(CoolSpawnCamerai[playerid]);
		InterpolateCameraPos(playerid, 1482.007202, -1770.195312, 121.889656, 1640.882812, -1642.433349, 88.830139, 9999, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 1481.504150, -1642.420898, 29.112533, 1538.468994, -1400.997680, 325.412567, 9999, CAMERA_MOVE);
		CoolSpawnCamerai[playerid] = SetTimerEx("CoolSpawnCamera3", 9000, false, "i", playerid);
	}
}

SetPlayerUserColor(playerid)
{
	foreach(Player, i)
	{
		SetPlayerMarkerForPlayer( i, playerid, ( GetPlayerColor( playerid ) & 0xFFFFFF00 ) );
	}
}


SetPlayerFactionColor(playerid)
{
	new message[25];
	if(PlayerInfo[playerid][Faction] != 0){
		if(PlayerInfo[playerid][TempInfo][23] == 1){
			format(message, sizeof(message), "0x%s00", FactionInfo[PlayerInfo[playerid][Faction]][FactionColor]);
			SetPlayerColor(playerid, HexToInt(message)); // Sets Faction Colour
			SetPlayerUserColor(playerid); // Sets Marker Colour
		} else {
			SetPlayerColor(playerid, 0xFFFFFF00); // Faction, but off duty, set white colour
			SetPlayerUserColor(playerid); // Sets Marker Colour
		}
	} else {
		SetPlayerColor(playerid, 0xFFFFFF00); // No Faction, set white colour
		SetPlayerUserColor(playerid); // Sets Marker Colour
	}
	message[0] = '\0';
}

UpdatePlayerLastLogin(playerid)
{
	new largequery[200];
	new TotalDate[18], TotalTime[18], GetPIP[18], Year, Month, Day, Hour, Minute, Second;
	getdate(Year, Month, Day);
	gettime(Hour, Minute, Second);
	GetPlayerIp(playerid, GetPIP, sizeof(GetPIP));
	format(TotalDate, 18, "%i/%i/%i", Month, Day, Year);
	format(TotalTime, 18, "%s", ConvertMilitaryTime(Hour, Minute));
	mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `lastlogin_date` = '%e' WHERE `id` = %i;", TotalDate, PlayerInfo[playerid][DBID]);
	mysql_query(MySQL, largequery);
	mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `lastlogin_time` = '%e' WHERE `id` = %i;", TotalTime, PlayerInfo[playerid][DBID]);
	mysql_query(MySQL, largequery);
	mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `lastlogin_ip` = '%e' WHERE `id` = %i;", GetPIP, PlayerInfo[playerid][DBID]);
	mysql_query(MySQL, largequery);
	largequery[0] = '\0';
	TotalDate[0] = '\0';
	TotalTime[0] = '\0';
	
	mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `time_played` WHERE `player_id` = %i AND `month` = %i AND `day` = %i AND `year` = %i LIMIT 1", PlayerInfo[playerid][DBID], Month, Day, Year);
	mysql_query(MySQL, largequery);
	new TotalNum = cache_num_rows();
	if(TotalNum == 1){
		PlayerInfo[playerid][Minutes][1] = cache_get_field_content_int(0, "played");
	} else {
		mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `time_played` (`player_id`, `month`, `day`, `year`, `played`) VALUES ('%i', '%i', '%i', '%i', '0')", PlayerInfo[playerid][DBID], Month, Day, Year);
		mysql_query(MySQL, largequery);
		PlayerInfo[playerid][Minutes][1] = 0;
	}
}

SpawnPlayerWeapons(playerid)
{
	new largequery[255];
	mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `player_weapons` WHERE `playerid` = %i", PlayerInfo[playerid][DBID]);
	mysql_query(MySQL, largequery);
	if(cache_num_rows() >= 1){
		for(new c = 0; c < cache_num_rows(); c++)
		{
			PlayerInfo[playerid][Weapons][cache_get_field_content_int(c, "slot")] = cache_get_field_content_int(c, "weapon");
			PlayerInfo[playerid][WeaponsAmmo][cache_get_field_content_int(c, "slot")] = cache_get_field_content_int(c, "weapon_ammo");
			GivePlayerWeapon(playerid, cache_get_field_content_int(c, "weapon"), cache_get_field_content_int(c, "weapon_ammo"));
		}
	} else {
		for(new c = 0; c < 12; c++){
			mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `player_weapons` (`weapon`, `weapon_ammo`, `slot`, `playerid`) VALUES ('0', '0', '%i', '%i')", c, PlayerInfo[playerid][DBID]);
			mysql_query(MySQL, largequery);
			PlayerInfo[playerid][Weapons][c] = 0;
			PlayerInfo[playerid][WeaponsAmmo][c] = 0;
		}
	}
	largequery[0] = '\0';
}

IsPlayerPrisonedJailed(playerid)
{
	new largequery[255];
	mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `player_arrested` WHERE `playerid` = %i LIMIT 1", PlayerInfo[playerid][DBID]);
	mysql_query(MySQL, largequery);
	new NumberRows = cache_num_rows();
	if(NumberRows == 1){
		PlayerIsArrested(playerid, cache_get_field_content_int(0, "arrestid"), cache_get_field_content_int(0, "arresttime"));
	}
	largequery[0] = '\0';
}

forward LoadPlayerNewbieData(playerid);
public LoadPlayerNewbieData(playerid)
{
	new NumberRows = cache_num_rows();
	if(NumberRows == 0){
		new largequery[400];
		mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `player_newbie` (`playerid`, `muted`, `times_muted`, `times_warned`, `muted_date`, `unmuted_date_m`, `unmuted_date_d`, `unmuted_date_y`, `unmute_hours`, `warnings`, `reason`, `warnerid`, `muterid`) VALUES ('%i','0','0','0','','0','0','0','0','0', '','0','0')", PlayerInfo[playerid][DBID]);
		mysql_query(MySQL, largequery);
		PlayerInfo[playerid][NewbieMuted] = 0;
		PlayerInfo[playerid][NewbieTMuted] = 0;
		PlayerInfo[playerid][NewbieTWarns] = 0;
		PlayerInfo[playerid][NewbieWarns] = 0;
		PlayerInfo[playerid][NewbieMuteHour] = 0;
		largequery[0] = '\0';
	} else {
		PlayerInfo[playerid][NewbieMuted] = cache_get_field_content_int(0, "muted");
		PlayerInfo[playerid][NewbieTMuted] = cache_get_field_content_int(0, "times_muted");
		PlayerInfo[playerid][NewbieTWarns] = cache_get_field_content_int(0, "times_warned");
		PlayerInfo[playerid][NewbieWarns] = cache_get_field_content_int(0, "warnings");
		PlayerInfo[playerid][NewbieMuteHour] = cache_get_field_content_int(0, "unmute_hours");
	}
}

forward LoadPlayerJobData(playerid);
public LoadPlayerJobData(playerid)
{
	for(new a = 0; a <= (MAX_PLAYER_JOBS); a++)
	{
		if (cache_get_field_content_int(a, "jobid") == 0){
			new largequery[255];
			mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `player_jobs` (`playerid`, `jobid`, `joblevel`, `jobpoints`, `jobitem`) VALUES ('%i','%i','1','0','0')", PlayerInfo[playerid][DBID], (a+1));
			mysql_query(MySQL, largequery);
			PlayerInfo[playerid][JobLevels][a+1] = 1;
			PlayerInfo[playerid][JobLevelsP][a+1] = 0;
			PlayerInfo[playerid][JobItems][a+1] = 0;
			largequery[0] = '\0';
		} else {
			PlayerInfo[playerid][JobLevels][a+1] = cache_get_field_content_int(a, "joblevel");
			PlayerInfo[playerid][JobLevelsP][a+1] = cache_get_field_content_int(a, "jobpoints");
			PlayerInfo[playerid][JobItems][a+1] = cache_get_field_content_int(a, "jobitem");
		}
	}
}

forward LoadPlayerInventory(playerid);
public LoadPlayerInventory(playerid)
{
	new NumberRows = cache_num_rows();
	if(NumberRows == 0){
		new largequery[255];
		mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `player_inventory` (`playerid`, `itemname`, `itemvalues`) VALUES ('%i','GPS','0')", PlayerInfo[playerid][DBID]);
		mysql_query(MySQL, largequery);
		mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `player_inventory` (`playerid`, `itemname`, `itemvalues`) VALUES ('%i','VehicleGPS','0')", PlayerInfo[playerid][DBID]);
		mysql_query(MySQL, largequery);
		mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `player_inventory` (`playerid`, `itemname`, `itemvalues`) VALUES ('%i','ToolKits','0')", PlayerInfo[playerid][DBID]);
		mysql_query(MySQL, largequery);
		PlayerInfo[playerid][TempInfo][9] = 0;
		PlayerInfo[playerid][TempInfo][10] = 0;
		PlayerInfo[playerid][JobItems][1] = 0;
		largequery[0] = '\0';
	} else {
		for(new a = 0; a <= (NumberRows); a++)
		{
			PlayerInfo[playerid][TempInfo][9] = cache_get_field_content_int(a, "itemvalues");
			PlayerInfo[playerid][TempInfo][10] = cache_get_field_content_int(a, "itemvalues");
			PlayerInfo[playerid][JobItems][1] = cache_get_field_content_int(a, "itemvalues");
		}
	}
}

forward LoadPlayerVehicles(playerid);
public LoadPlayerVehicles(playerid)
{
	new NumberRows = cache_num_rows();
	if(NumberRows >= 1){
		for(new c = 0; c < NumberRows; c++)
		{
			new a = cache_get_field_content_int(c, "slot");
			PlayerInfo[playerid][PVehs][a] = cache_get_field_content_int(c, "vehicle");
			if(cache_get_field_content_int(c, "vehicle") != 0){
				for(new w = 1; w <= sizeof(LastVehicleID); w++){
					if(LastVehicleID[w] == 0){
						PlayerInfo[playerid][PVehsID][a] = w;
						LastVehicleID[w] = 1;
						CreateVehicle(cache_get_field_content_int(c, "vehicle"), cache_get_field_content_float(c, "px"), cache_get_field_content_float(c, "py"), cache_get_field_content_float(c, "pz"), cache_get_field_content_float(c, "pa"), cache_get_field_content_int(c, "color1"), cache_get_field_content_int(c, "color2"), -1);
						Vehicles[w][Vehicle] = cache_get_field_content_int(c, "vehicle");
						Vehicles[w][Faction] = 0;
						Vehicles[w][Color1] = cache_get_field_content_int(c, "color1");
						Vehicles[w][Color2] = cache_get_field_content_int(c, "color2");
						Vehicles[w][EngineS] = 0;
						Vehicles[w][LightS] = 0;
						Vehicles[w][VehGPS] = cache_get_field_content_int(c, "gps");
						Vehicles[w][DoorLS] = cache_get_field_content_int(c, "locked");
						Vehicles[w][HoodS] = 0;
						Vehicles[w][TrunkS] = 0;
						SetVehicleParamsEx(w, Vehicles[w][EngineS], Vehicles[w][LightS], 0, Vehicles[w][DoorLS], Vehicles[w][HoodS], Vehicles[w][TrunkS], 0);
						new tempvehiclelicence[15];
						cache_get_field_content(c, "licenceplate", tempvehiclelicence);
						format(Vehicles[w][VehLicence], 33, tempvehiclelicence);
						SetVehicleNumberPlate(w, Vehicles[w][VehLicence]);
						tempvehiclelicence[0] = '\0';
						Vehicles[w][Temp] = 2;
						Vehicles[w][Health] = 1000;
						SetVehicleHealth(w, 1000);
						Vehicles[w][VDBID] = 0;
						Vehicles[w][VehPX] = cache_get_field_content_float(c, "px");
						Vehicles[w][VehPY] = cache_get_field_content_float(c, "py");
						Vehicles[w][VehPZ] = cache_get_field_content_float(c, "pz");
						Vehicles[w][VehPA] = cache_get_field_content_float(c, "pa");
						Vehicles[w][VehX] = cache_get_field_content_float(c, "x");
						Vehicles[w][VehY] = cache_get_field_content_float(c, "y");
						Vehicles[w][VehZ] = cache_get_field_content_float(c, "z");
						Vehicles[w][VehA] = cache_get_field_content_float(c, "a");
						break;
					}
				}
			}
		}
		SetTimerEx("resetvehiclespawn", 3000, false, "i", playerid);
	}
}

forward DelayTheSpawnCamera(playerid);
public DelayTheSpawnCamera(playerid)
{
	CoolSpawnCamera(playerid);
}

forward RegisterAccount(playerid);
public RegisterAccount(playerid)
{
	SendClientMessage(playerid,-1,"{FF0000}SERVER{FFFFFF}: Account not registered!");
	ShowPlayerDialog(playerid,1, DIALOG_STYLE_PASSWORD, "Register", "Enter a password below", "Register", "Cancel");
}
forward LoginAccount(playerid);
public LoginAccount(playerid)
{
	SendClientMessage(playerid,-1,"{FF0000}SERVER{FFFFFF}: Account registered, enter password now!");
	ShowPlayerDialog(playerid,2, DIALOG_STYLE_PASSWORD, "Login", "Enter your password below:", "Login", "Cancel");
}


BeginRoleplayTest(playerid)
{
	ShowPlayerDialog(playerid, 12, DIALOG_STYLE_MSGBOX, "Information & Guide", "{FFFFFF}Welcome to our server!\n\nWe hope you enjoy your stay, but before you can start playing.\nYou need to learn a few things about this server first.\nDo not worry, this will not take too long.\n\n{FF0000}If you exit at any time, you will have to restart the entire thing on your next visit!", "Next", "Exit");
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	new largequery[600], message[500], message2[500];
	if(response && dialogid == 1) /* Inserts new account unless password is too short */
	{
		if(strlen(inputtext) > 3 && strlen(inputtext) < 30) /* I do not like passwords shorter then 4 characters, so I've decided to make it so people must have 4 or more */
		{
			new FSE[75], fixhash[100];
			SHA256_PassHash(inputtext, "p7h7e7l7p7s", FSE, sizeof(FSE));
			//printf("BLOCK3: %s", FSE);
			new GetPIP[15];
			GetPlayerIp(playerid, GetPIP, sizeof(GetPIP));
			
			mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `accounts` (`x`, `y`, `z`, `a`, `world`, `interior`, `name`, `money`, `bank`, `skin`, `register_ip`) VALUES ('%f', '%f', '%f', '%f', '0', '0', '%e', '%i', '%i', '299', '%e')", SpawnLocationX, SpawnLocationY, SpawnLocationZ, SpawnLocationA, GetPlayerNameEx(playerid), GameSettings[1][GameSetting], GameSettings[2][GameSetting], GetPIP);
			mysql_query(MySQL, largequery);
			//printf("%s", largequery);
			GetPIP[0] = '\0';
			
			// This is the only way to get the password to fix itself. 
			fixhash = FSE;
			PlayerInfo[playerid][DBID] = cache_insert_id(MySQL);
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `password` = '%e' WHERE `id` = %i LIMIT 1;", fixhash, cache_insert_id(MySQL));
			mysql_query(MySQL, largequery);
			
			format(PlayerInfo[playerid][RealName], MAX_PLAYER_NAME, GetPlayerNameEx(playerid));
			PlayerInfo[playerid][Money] = GameSettings[1][GameSetting];
			PlayerInfo[playerid][BankMoney] = GameSettings[2][GameSetting];
			PlayerInfo[playerid][HP] = 100;
			PlayerInfo[playerid][Skin] = 299;
			PlayerInfo[playerid][Level] = 1;
			printf("Player registered as: %s", GetPlayerNameEx(playerid));
			GetTime();
			SetPlayerScore(playerid, 1);
			for(new a = 1; a <= 10; a++)
			{
				PlayerInfo[playerid][JobLevels][a] = 0;
				PlayerInfo[playerid][JobLevelsP][a] = 0;
				PlayerInfo[playerid][JobItems][a] = 0;
			}
			PlayerInfo[playerid][PosX] = SpawnLocationX;
			PlayerInfo[playerid][PosY] = SpawnLocationY;
			PlayerInfo[playerid][PosZ] = SpawnLocationZ;
			PlayerInfo[playerid][FacingAngle] = SpawnLocationA;
			

			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `name` = '%e' LIMIT 1", GetPlayerNameEx(playerid));
			mysql_query(MySQL, largequery);
			PlayerInfo[playerid][DBID] = cache_get_field_content_int(0, "id");
			printf("%i", PlayerInfo[playerid][DBID]);
			
			// Load Player Inventory
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `player_inventory` WHERE `playerid` = %i", PlayerInfo[playerid][DBID]);
			mysql_tquery(MySQL, largequery, "LoadPlayerInventory", "i", playerid);
			// Load Player Job Data
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `player_jobs` WHERE `playerid` = %i", PlayerInfo[playerid][DBID]);
			mysql_tquery(MySQL, largequery, "LoadPlayerJobData", "i", playerid);
			// Load Player Newbie Data
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `player_newbie` WHERE `playerid` = %i", PlayerInfo[playerid][DBID]);
			mysql_tquery(MySQL, largequery, "LoadPlayerNewbieData", "i", playerid);
			
			SetPlayerFactionColor(playerid);
			BeginRoleplayTest(playerid); // This is decalred as a new variable, because new player, derp.
			SpawnPlayerWeapons(playerid);
			
			SystemLogsInsert(playerid, "CONNECTION", "PLAYER_JOINED");
			UpdatePlayerLastLogin(playerid);
			FSE[0] = '\0';
			fixhash[0] = '\0';
		} else { /* Someone entered password less then 4 characters */
			ShowPlayerDialog(playerid,1, DIALOG_STYLE_PASSWORD, "Register", "Enter a password below:", "Register", "Quit");
			SendClientMessage(playerid,-1,"{FF0000}SERVER{FFFFFF}: Your password can not have less then 4 or more then 29 character!");
		}
	} else if(response && dialogid == 2) { /* An account already exists with that name, so you need to check the password that was entered */
		new CheckPassword[75], SuperSecretEncryption[75];
		mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `name` = '%e' LIMIT 1", GetPlayerNameEx(playerid));
		mysql_query(MySQL, largequery);
		if(strlen(inputtext) > 3 && strlen(inputtext) < 30) { /* I do not like passwords shorter then 4 characters, so I've decided to make it so people must have 4 or more */
			
			cache_get_field_content(0, "password", CheckPassword);
			SHA256_PassHash(inputtext, "p7h7e7l7p7s", SuperSecretEncryption, sizeof(SuperSecretEncryption));
			//printf("BLOCK1: %s", SuperSecretEncryption);
			//printf("BLOCK2: %s", CheckPassword);
			if(!strcmp(CheckPassword, SuperSecretEncryption)) { /* Compares the password on database from the password just entered */
				SendClientMessage(playerid,-1,"{FF0000}SERVER{FFFFFF}: Account login successful!");
				PlayerInfo[playerid][Job] = cache_get_field_content_int(0, "job");
				if(cache_get_field_content_int(0, "job") == 2 && PlayerInfo[playerid][JobItems][2] != 0) {
					PlayerInfo[playerid][TempInfo][22] = 1;
					//PlayerInfo[playerid][TempInfo][22] = SetTimerEx("LawyerDefendAbility", 1000, true, "i", playerid);
				}
				printf("Player logging in: %s", GetPlayerNameEx(playerid));
				GetTime();
				
				// Player Spawn Vehicles, Job Data, and Inventory is located towards the bottom of all this shit
				PlayerInfo[playerid][PosX] = cache_get_field_content_float(0, "x");
				PlayerInfo[playerid][PosY] = cache_get_field_content_float(0, "y");
				PlayerInfo[playerid][PosZ] = cache_get_field_content_float(0, "z");
				PlayerInfo[playerid][FacingAngle] = cache_get_field_content_float(0, "a");
				PlayerInfo[playerid][Money] = cache_get_field_content_int(0, "money");
				PlayerInfo[playerid][Warrants] = cache_get_field_content_int(0, "warrants");
				SetPlayerWantedLevel(playerid, cache_get_field_content_int(0, "warrants"));
				PlayerInfo[playerid][BankMoney] = cache_get_field_content_int(0, "bank");
				PlayerInfo[playerid][HP] = cache_get_field_content_float(0, "health");
				PlayerInfo[playerid][Armor] = cache_get_field_content_float(0, "armor");
				PlayerInfo[playerid][TempInfo][17] = cache_get_field_content_int(0, "signcheck_missed");
				PlayerInfo[playerid][Level] = cache_get_field_content_int(0, "level");
				PlayerInfo[playerid][CrimesCommitted] = cache_get_field_content_int(0, "crimes_committed");
				PlayerInfo[playerid][RespectPoints] = cache_get_field_content_int(0, "respectpoints");
				SetPlayerScore(playerid, cache_get_field_content_int(0, "level"));
				PlayerInfo[playerid][DBID] = cache_get_field_content_int(0, "id");
				PlayerInfo[playerid][TempInfo][5] = cache_get_field_content_int(0, "forum_id");
				PlayerInfo[playerid][VIP] = cache_get_field_content_int(0, "vip");
				PlayerInfo[playerid][Minutes][0] = cache_get_field_content_int(0, "minutes");
				PlayerInfo[playerid][Gender] = cache_get_field_content_int(0, "sex");
				PlayerInfo[playerid][Marriage] = cache_get_field_content_int(0, "married");
				PlayerInfo[playerid][Tikis] = cache_get_field_content_int(0, "tikis");
				PlayerInfo[playerid][Minutes][2] = cache_get_field_content_int(0, "tminutes");
				PlayerInfo[playerid][House] = cache_get_field_content_int(0, "house");
				if(cache_get_field_content_int(0, "house") != 0){
					SetTimerEx("findplayerhouse", 1500, false, "i", playerid);
				}
				PlayerInfo[playerid][Skin] = cache_get_field_content_int(0, "skin");
				PlayerInfo[playerid][DOB][1] = cache_get_field_content_int(0, "DOB_MM");
				PlayerInfo[playerid][DOB][2] = cache_get_field_content_int(0, "DOB_DD");
				PlayerInfo[playerid][DOB][3] = cache_get_field_content_int(0, "DOB_YYYY");
				PlayerInfo[playerid][Licenses][1] = cache_get_field_content_int(0, "vehicle_licence");
				PlayerInfo[playerid][WorldID] = cache_get_field_content_int(0, "world");
				PlayerInfo[playerid][InteriorID] = cache_get_field_content_int(0, "interior");
				PlayerInfo[playerid][Faction] = cache_get_field_content_int(0, "faction");
				PlayerInfo[playerid][FactionLevel] = cache_get_field_content_int(0, "faction_level");
				PlayerInfo[playerid][FactionLeader] = cache_get_field_content_int(0, "faction_leader");
				PlayerInfo[playerid][TempInfo][23] = cache_get_field_content_int(0, "faction_duty");
				PlayerInfo[playerid][TempInfo][6] = cache_get_field_content_int(0, "dead");
				PlayerInfo[playerid][Helper] = cache_get_field_content_int(0, "helper");
				PlayerInfo[playerid][Admin] = cache_get_field_content_int(0, "admin");
				PlayerInfo[playerid][FactionModerator] = cache_get_field_content_int(0, "faction_mod");
				PlayerInfo[playerid][PropertyModerator] = cache_get_field_content_int(0, "property_mod");
				PlayerInfo[playerid][Biz] = cache_get_field_content_int(0, "biz");
				SetPlayerFactionColor(playerid);
				new tempnewbietag[31];
				cache_get_field_content(0, "newbietag", tempnewbietag);
				format(PlayerInfo[playerid][NewbieTag], 31, tempnewbietag);
				format(PlayerInfo[playerid][RealName], MAX_PLAYER_NAME, GetPlayerNameEx(playerid));
				tempnewbietag[0] = '\0';

				// Has the player completed the tutorial
				if(cache_get_field_content_int(0, "basictutorial") == 1){ 

					// It appears that at some point, I remade this and forgot to comment about it.
					// It looks like it no longer calls for twice anymore for anything that glitches from spawning.
					// I believe that is the reason I had added "delayspawn" to the spawning grounds.
					// 9/20/2016
					if(cache_get_field_content_int(0, "admin") >= 1){
						if(DEVELOPERMODE == 1){
							format(message, sizeof(message), "{FF0000}DEVELOPER MODE{FFFFFF}: Your admin password is: %i", cache_get_field_content_int(0, "apassword"));
							SendClientMessage(playerid,-1,message);
						}
						format(message, sizeof(message), "{FFFFFF}You are trying to login on to {%s}%s{FFFFFF} %s", GetAdminRanksC(cache_get_field_content_int(0, "admin")), GetAdminRanks(cache_get_field_content_int(0, "admin")), str_replace("_", " ", GetPlayerNameEx(playerid)));
						ShowPlayerDialog(playerid,22, DIALOG_STYLE_INPUT, "Administration Login", message, "Login", "Quit");
					} else {
						TogglePlayerSpectating(playerid, 0);
						TogglePlayerControllable(playerid, 1);
						SetCameraBehindPlayer(playerid);
						StopAudioStreamForPlayer(playerid);

						KillTimer(CoolSpawnCamerai[playerid]);
						SetTimerEx("delayspawn", 500, false, "i", playerid);
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `online` = 1 WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][DBID]);
						mysql_query(MySQL, largequery);
					}
				} else {
					BeginRoleplayTest(playerid); // BeginRoleplayTest
					ClientMessenger(playerid, "FF0000", 1, "Basic roleplay(RP) test has not been completed!");
				}
				
				// Account loaders that were removed from account.tbl, and now must load sep
				
				// Load Player Vehicles
				mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `player_vehicles` WHERE `playerid` = %i", PlayerInfo[playerid][DBID]);
				mysql_tquery(MySQL, largequery, "LoadPlayerVehicles", "i", playerid);
				// Load Player Inventory
				mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `player_inventory` WHERE `playerid` = %i", PlayerInfo[playerid][DBID]);
				mysql_tquery(MySQL, largequery, "LoadPlayerInventory", "i", playerid);
				// Load Player Job Data
				mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `player_jobs` WHERE `playerid` = %i", PlayerInfo[playerid][DBID]);
				mysql_tquery(MySQL, largequery, "LoadPlayerJobData", "i", playerid);
				// Load Player Newbie Data
				mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `player_newbie` WHERE `playerid` = %i", PlayerInfo[playerid][DBID]);
				mysql_tquery(MySQL, largequery, "LoadPlayerNewbieData", "i", playerid);
				
				SystemLogsInsert(playerid, "CONNECTION", "PLAYER_JOINED");
				UpdatePlayerLastLogin(playerid);
				
				PlayerInfo[playerid][TempInfo][19] = 0;

			} else { /* Someone entered password the wrong password for this account */
				PlayerInfo[playerid][TempInfo][19] = (PlayerInfo[playerid][TempInfo][19] + 1);
				if(PlayerInfo[playerid][TempInfo][19] < 3){
					SendClientMessage(playerid,-1,"{FF0000}SERVER{FFFFFF}: Account login unsuccessful! Wrong Password!");
					ShowPlayerDialog(playerid,2, DIALOG_STYLE_PASSWORD, "Login", "Enter your password below:", "Login", "Quit");
				} else {
					SendClientMessage(playerid,-1,"{FF0000}SERVER{FFFFFF}: Incorrect password too many times. You are now being kicked!");
					SetTimerEx("delaykick", 500, false, "i", playerid);
				}
			}
		} else { /* Someone entered password less then 4 characters */
			ShowPlayerDialog(playerid,2, DIALOG_STYLE_PASSWORD, "Login", "Enter your password below:", "Login", "Quit");
			SendClientMessage(playerid,-1,"{FF0000}SERVER{FFFFFF}: Your password can not have less then 4 or more then 29 character!");
		}
		CheckPassword[0] = '\0';
		SuperSecretEncryption[0] = '\0';
		
		
		
	} else if(response && dialogid == 3) { // For editing faction ranks
		PlayerInfo[playerid][AllEditingOptions2] = (listitem+1);
		BackToEditingRanks:
		format(message, sizeof(message), "Name:\t%s\n", AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]]);
		strcat(ReadAllMessages[playerid], message);
		format(message, sizeof(message), "Department Radio:\t%s\n", GetRankPerm(PlayerInfo[playerid][AllEditingOptions], (PlayerInfo[playerid][AllEditingOptions2]), 1));
		strcat(ReadAllMessages[playerid], message);
		format(message, sizeof(message), "Roadblock:\t%s\n", GetRankPerm(PlayerInfo[playerid][AllEditingOptions], (PlayerInfo[playerid][AllEditingOptions2]), 2));
		strcat(ReadAllMessages[playerid], message);
		format(message, sizeof(message), "Fake Badge:\t%s\n", GetRankPerm(PlayerInfo[playerid][AllEditingOptions], (PlayerInfo[playerid][AllEditingOptions2]), 3));
		strcat(ReadAllMessages[playerid], message);
		format(message, sizeof(message), "MDC:\t%s\n", GetRankPerm(PlayerInfo[playerid][AllEditingOptions], (PlayerInfo[playerid][AllEditingOptions2]), 4));
		strcat(ReadAllMessages[playerid], message);
		format(message, sizeof(message), "Warrant Players:\t%s\n", GetRankPerm(PlayerInfo[playerid][AllEditingOptions], (PlayerInfo[playerid][AllEditingOptions2]), 5));
		strcat(ReadAllMessages[playerid], message);
		format(message, sizeof(message), "Public Service Announcement:\t%s\n", GetRankPerm(PlayerInfo[playerid][AllEditingOptions], (PlayerInfo[playerid][AllEditingOptions2]), 6));
		strcat(ReadAllMessages[playerid], message);
		format(message, sizeof(message), "Arrests:\t%s\n", GetRankPerm(PlayerInfo[playerid][AllEditingOptions], (PlayerInfo[playerid][AllEditingOptions2]), 7));
		strcat(ReadAllMessages[playerid], message);
		format(message, sizeof(message), "State Tressury:\t%s\n", GetRankPerm(PlayerInfo[playerid][AllEditingOptions], (PlayerInfo[playerid][AllEditingOptions2]), 8));
		strcat(ReadAllMessages[playerid], message);
		format(message, sizeof(message), "Set Taxes:\t%s\n", GetRankPerm(PlayerInfo[playerid][AllEditingOptions], (PlayerInfo[playerid][AllEditingOptions2]), 9));
		strcat(ReadAllMessages[playerid], message);
		format(message, sizeof(message), "Call Backup:\t%s", GetRankPerm(PlayerInfo[playerid][AllEditingOptions], (PlayerInfo[playerid][AllEditingOptions2]), 10));
		strcat(ReadAllMessages[playerid], message);
		ShowPlayerDialog(playerid,4, DIALOG_STYLE_TABLIST, AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], ReadAllMessages[playerid], "Edit", "Cancel");
		ReadAllMessages[playerid][0] = '\0';
		
	} else if(!response && dialogid == 3) { // if they exit the faction rank screen
		PlayerInfo[playerid][AllEditingOptions] = 0;
		PlayerInfo[playerid][AllEditingOptions2] = 0;
		
		
	} else if(response && dialogid == 4) { // if they select one of the options of editing faction ranks
		if(listitem == 0) {
			ShowPlayerDialog(playerid,5, DIALOG_STYLE_INPUT, "Change Rank Name", "Enter New Rank Name", "Edit", "Quit");
		} else if(listitem == 1) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][1] == 1){
				if(AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][1] == 1){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `department_radio` = 0 WHERE `faction_id` = %i AND `rank_id` = %i",PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
					format(message, sizeof(message), "%s has disallowed %s(%i) of {%s}%s{FFFFFF} to use department radio!", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], PlayerInfo[playerid][AllEditingOptions2], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
					AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][1] = 0;
				} else if(AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][1] == 0){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `department_radio` = 1 WHERE `faction_id` = %i AND `rank_id` = %i",PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
					format(message, sizeof(message), "%s has allowed %s(%i) of {%s}%s{FFFFFF} to use department radio!", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], PlayerInfo[playerid][AllEditingOptions2], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
					AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][1] = 1;
				}
				mysql_query(MySQL, largequery);
				ClientMessenger(playerid, "FF0000", 4, message);
				goto BackToEditingRanks;
				//EditFactionRanks(playerid, PlayerInfo[playerid][AllEditingOptions]);
			} else {
				ClientMessenger(playerid, "FF0000", 1, "This faction doesn't have the ability to use department radio. Change that first!");
				goto BackToEditingRanks;
			}
		} else if(listitem == 2) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][2] == 1){
				if(AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][2] == 1){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `roadblock` = 0 WHERE `faction_id` = %i AND `rank_id` = %i",PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
					format(message, sizeof(message), "%s has disallowed %s(%i) of {%s}%s{FFFFFF} to use roadblocks!", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], PlayerInfo[playerid][AllEditingOptions2], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
					AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][2] = 0;
				} else if(AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][2] == 0){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `roadblock` = 1 WHERE `faction_id` = %i AND `rank_id` = %i",PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
					format(message, sizeof(message), "%s has allowed %s(%i) of {%s}%s{FFFFFF} to use roadblocks!", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], PlayerInfo[playerid][AllEditingOptions2], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
					AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][2] = 1;
				}
				mysql_query(MySQL, largequery);
				ClientMessenger(playerid, "FF0000", 4, message);
				goto BackToEditingRanks;
				//EditFactionRanks(playerid, PlayerInfo[playerid][AllEditingOptions]);
			} else {
				ClientMessenger(playerid, "FF0000", 1, "This faction doesn't have the ability to use roadblocks. Change that first!");
				goto BackToEditingRanks;
			}
		} else if(listitem == 3) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][3] == 1){
				if(AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][3] == 1){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `fakebadge` = 0 WHERE `faction_id` = %i AND `rank_id` = %i",PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
					format(message, sizeof(message), "%s has disallowed %s(%i) of {%s}%s{FFFFFF} to use fake badges!", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], PlayerInfo[playerid][AllEditingOptions2], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
					AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][3] = 0;
				} else if(AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][3] == 0){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `fakebadge` = 1 WHERE `faction_id` = %i AND `rank_id` = %i",PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
					format(message, sizeof(message), "%s has allowed %s(%i) of {%s}%s{FFFFFF} to use fake badges!", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], PlayerInfo[playerid][AllEditingOptions2], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
					AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][3] = 1;
				}
				mysql_query(MySQL, largequery);
				ClientMessenger(playerid, "FF0000", 4, message);
				goto BackToEditingRanks;
				//EditFactionRanks(playerid, PlayerInfo[playerid][AllEditingOptions]);
			} else {
				ClientMessenger(playerid, "FF0000", 1, "This faction doesn't have the ability to use fakebadges. Change that first!");
				goto BackToEditingRanks;
			}
		} else if(listitem == 4) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][4] == 1){
				if(AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][4] == 1){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `mdc` = 0 WHERE `faction_id` = %i AND `rank_id` = %i",PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
					format(message, sizeof(message), "%s has disallowed %s(%i) of {%s}%s{FFFFFF} to use the MDC!", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], PlayerInfo[playerid][AllEditingOptions2], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
					AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][4] = 0;
				} else if(AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][4] == 0){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `mdc` = 1 WHERE `faction_id` = %i AND `rank_id` = %i",PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
					format(message, sizeof(message), "%s has allowed %s(%i) of {%s}%s{FFFFFF} to use the MDC!", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], PlayerInfo[playerid][AllEditingOptions2], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
					AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][4] = 1;
				}
				mysql_query(MySQL, largequery);
				ClientMessenger(playerid, "FF0000", 4, message);
				goto BackToEditingRanks;
				//EditFactionRanks(playerid, PlayerInfo[playerid][AllEditingOptions]);
			} else {
				ClientMessenger(playerid, "FF0000", 1, "This faction doesn't have the ability to use the MDC. Change that first!");
				goto BackToEditingRanks;
			}
		} else if(listitem == 5) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][5] == 1){
				if(AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][5] == 1){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `warrant` = 0 WHERE `faction_id` = %i AND `rank_id` = %i",PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
					format(message, sizeof(message), "%s has disallowed %s(%i) of {%s}%s{FFFFFF} to warrant players!", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], PlayerInfo[playerid][AllEditingOptions2], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
					AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][5] = 0;
				} else if(AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][5] == 0){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `warrant` = 1 WHERE `faction_id` = %i AND `rank_id` = %i",PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
					format(message, sizeof(message), "%s has allowed %s(%i) of {%s}%s{FFFFFF} to warrant players!", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], PlayerInfo[playerid][AllEditingOptions2], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
					AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][5] = 1;
				}
				mysql_query(MySQL, largequery);
				ClientMessenger(playerid, "FF0000", 4, message);
				goto BackToEditingRanks;
				//EditFactionRanks(playerid, PlayerInfo[playerid][AllEditingOptions]);
			} else {
				ClientMessenger(playerid, "FF0000", 1, "This faction doesn't have the ability to use warrant players. Change that first!");
				goto BackToEditingRanks;
			}
		} else if(listitem == 6) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][6] == 1){
				if(AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][6] == 1){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `psa` = 0 WHERE `faction_id` = %i AND `rank_id` = %i",PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
					format(message, sizeof(message), "%s has disallowed %s(%i) of {%s}%s{FFFFFF} to make public service announcements", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], PlayerInfo[playerid][AllEditingOptions2], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
					AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][6] = 0;
				} else if(AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][6] == 0){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `psa` = 1 WHERE `faction_id` = %i AND `rank_id` = %i",PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
					format(message, sizeof(message), "%s has allowed %s(%i) of {%s}%s{FFFFFF} to make public service announcements", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], PlayerInfo[playerid][AllEditingOptions2], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
					AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][6] = 1;
				}
				mysql_query(MySQL, largequery);
				ClientMessenger(playerid, "FF0000", 4, message);
				goto BackToEditingRanks;
				//EditFactionRanks(playerid, PlayerInfo[playerid][AllEditingOptions]);
			} else {
				ClientMessenger(playerid, "FF0000", 1, "This faction doesn't have the ability to make public service announcements. Change that first!");
				goto BackToEditingRanks;
			}
		} else if(listitem == 7) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][7] == 1){
				if(AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][7] == 1){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `arrests` = 0 WHERE `faction_id` = %i AND `rank_id` = %i",PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
					format(message, sizeof(message), "%s has disallowed %s(%i) of {%s}%s{FFFFFF} to make arrests", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], PlayerInfo[playerid][AllEditingOptions2], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
					AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][7] = 0;
				} else if(AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][7] == 0){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `arrests` = 1 WHERE `faction_id` = %i AND `rank_id` = %i",PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
					format(message, sizeof(message), "%s has allowed %s(%i) of {%s}%s{FFFFFF} to make arrests", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], PlayerInfo[playerid][AllEditingOptions2], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
					AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][7] = 1;
				}
				mysql_query(MySQL, largequery);
				ClientMessenger(playerid, "FF0000", 4, message);
				goto BackToEditingRanks;
				//EditFactionRanks(playerid, PlayerInfo[playerid][AllEditingOptions]);
			} else {
				ClientMessenger(playerid, "FF0000", 1, "This faction doesn't have the ability to make arrests. Change that first!");
				goto BackToEditingRanks;
			}
		} else if(listitem == 8) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][8] == 1){
				if(AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][8] == 1){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `tressury` = 0 WHERE `faction_id` = %i AND `rank_id` = %i",PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
					format(message, sizeof(message), "%s has disallowed %s(%i) of {%s}%s{FFFFFF} to touch the state tressury", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], PlayerInfo[playerid][AllEditingOptions2], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
					AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][8] = 0;
				} else if(AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][8] == 0){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `tressury` = 1 WHERE `faction_id` = %i AND `rank_id` = %i",PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
					format(message, sizeof(message), "%s has allowed %s(%i) of {%s}%s{FFFFFF} to touch the state tressury", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], PlayerInfo[playerid][AllEditingOptions2], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
					AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][8] = 1;
				}
				mysql_query(MySQL, largequery);
				ClientMessenger(playerid, "FF0000", 4, message);
				goto BackToEditingRanks;
				//EditFactionRanks(playerid, PlayerInfo[playerid][AllEditingOptions]);
			} else {
				ClientMessenger(playerid, "FF0000", 1, "This faction doesn't have the ability to use the tressury. Change that first!");
				goto BackToEditingRanks;
			}
		} else if(listitem == 9) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][9] == 1){
				if(AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][9] == 1){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `taxes` = 0 WHERE `faction_id` = %i AND `rank_id` = %i",PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
					format(message, sizeof(message), "%s has disallowed %s(%i) of {%s}%s{FFFFFF} to set taxes", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], PlayerInfo[playerid][AllEditingOptions2], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
					AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][9] = 0;
				} else if(AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][9] == 0){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `taxes` = 1 WHERE `faction_id` = %i AND `rank_id` = %i",PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
					format(message, sizeof(message), "%s has allowed %s(%i) of {%s}%s{FFFFFF} to set taxes", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], PlayerInfo[playerid][AllEditingOptions2], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
					AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][9] = 1;
				}
				mysql_query(MySQL, largequery);
				ClientMessenger(playerid, "FF0000", 4, message);
				goto BackToEditingRanks;
				//EditFactionRanks(playerid, PlayerInfo[playerid][AllEditingOptions]);
			} else {
				ClientMessenger(playerid, "FF0000", 1, "This faction doesn't have the ability to set taxes. Change that first!");
				goto BackToEditingRanks;
			}
		} else if(listitem == 10) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][10] == 1){
				if(AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][10] == 1){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `backup` = 0 WHERE `faction_id` = %i AND `rank_id` = %i",PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
					format(message, sizeof(message), "%s has disallowed %s(%i) of {%s}%s{FFFFFF} to use backup", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], PlayerInfo[playerid][AllEditingOptions2], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
					AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][10] = 0;
				} else if(AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][10] == 0){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `backup` = 1 WHERE `faction_id` = %i AND `rank_id` = %i",PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
					format(message, sizeof(message), "%s has allowed %s(%i) of {%s}%s{FFFFFF} to use backup", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], PlayerInfo[playerid][AllEditingOptions2], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
					AllFactionRanksPermissions[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]][10] = 1;
				}
				mysql_query(MySQL, largequery);
				ClientMessenger(playerid, "FF0000", 4, message);
				goto BackToEditingRanks;
				//EditFactionRanks(playerid, PlayerInfo[playerid][AllEditingOptions]);
			} else {
				ClientMessenger(playerid, "FF0000", 1, "This faction doesn't have the ability to call backup. Change that first!");
				goto BackToEditingRanks;
			}
		}
		
		
	} else if(!response && dialogid == 4) { // if they exit the faction rank screen
		PlayerInfo[playerid][AllEditingOptions] = 0;
		PlayerInfo[playerid][AllEditingOptions2] = 0;
		
		
	} else if(response && dialogid == 5) { // if they're changing a faction rank name
		if(strlen(inputtext) > 0 && strlen(inputtext) < 50) { 
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_ranks` SET `rank_name` = '%e' WHERE `faction_id` = %i AND `rank_id` = %i",inputtext,PlayerInfo[playerid][AllEditingOptions],PlayerInfo[playerid][AllEditingOptions2]);
			mysql_query(MySQL, largequery);
			format(message, sizeof(message), "%s has changed rank(%i) from %s to %s", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions2], AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], inputtext);
			ClientMessenger(playerid, "FF0000", 4, message);
			format(AllFactionRanks[PlayerInfo[playerid][AllEditingOptions]][PlayerInfo[playerid][AllEditingOptions2]], 51, inputtext);
			EditFactionRanks(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "Can't be below 0 or above 50 characters!");
			ShowPlayerDialog(playerid,5, DIALOG_STYLE_INPUT, "Change Rank Name", "Enter New Rank Name", "Edit", "Cancel");
		}
		
		
	} else if(!response && dialogid == 5){ // if they exit the faction rank screen
		PlayerInfo[playerid][AllEditingOptions] = 0;
		PlayerInfo[playerid][AllEditingOptions2] = 0;
		
		
	} else if(response && dialogid == 6){ // /amsgs input box
		if(strlen(inputtext) == 0){
			ClientMessenger(playerid, "FF0000", 1, "You can not add a message with nothing in it!");
		} else {
			new TotalDate[13], TotalTime[13], Year, Month, Day, Hour, Minute, Second;
			getdate(Year, Month, Day);
			gettime(Hour, Minute, Second);
			format(TotalDate, 13, "%i/%i/%i", Month, Day, Year);
			format(TotalTime, 13, "%i:%i:%i", Hour, Minute, Second);
			mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `amessages` (`Name`, `LevelAdmin`, `PDBID`, `Message`, `Date`, `Time`) VALUES ('%e', '%i', '%i', '%e', '%e', '%s')", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][Admin], PlayerInfo[playerid][DBID], inputtext, TotalDate, TotalTime);
			mysql_query(MySQL, largequery);
		}
		CheckAMessages(playerid);
		
		
	} else if(response && dialogid == 7){ // for editing faction
		if(listitem == 0) {
			ShowPlayerDialog(playerid,8, DIALOG_STYLE_INPUT, "Change Faction Long Name", "Enter New Faction Long Name", "Edit", "Cancel");
		} else if(listitem == 1) {
			ShowPlayerDialog(playerid,9, DIALOG_STYLE_INPUT, "Change Faction Short Name", "Enter New Faction Short Name", "Edit", "Cancel");
		} else if(listitem == 2) {
			ShowPlayerDialog(playerid,10, DIALOG_STYLE_INPUT, "Change Faction Color", "Enter New Faction HEX Color", "Edit", "Cancel");
		} else if(listitem == 3) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][1] == 1){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `department_radio` = 0 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has disallowed {%s}%s{FFFFFF} to use department radio!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][1] = 0;
			} else if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][1] == 0){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `department_radio` = 1 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has allowed {%s}%s{FFFFFF} to use department radio!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][1] = 1;
			}
			mysql_query(MySQL, largequery);
			ClientMessenger(playerid, "FF0000", 4, message);
			EditFaction(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else if(listitem == 4) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][2] == 1){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `roadblock` = 0 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has disallowed {%s}%s{FFFFFF} to use roadblocks!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][2] = 0;
			} else if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][2] == 0){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `roadblock` = 1 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has allowed {%s}%s{FFFFFF} to use roadblocks!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][2] = 1;
			}
			mysql_query(MySQL, largequery);
			ClientMessenger(playerid, "FF0000", 4, message);
			EditFaction(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else if(listitem == 5) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][3] == 1){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `fakebadge` = 0 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has disallowed {%s}%s{FFFFFF} to use fake badges!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][3] = 0;
			} else if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][3] == 0){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `fakebadge` = 1 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has allowed {%s}%s{FFFFFF} to use fake badges!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][3] = 1;
			}
			mysql_query(MySQL, largequery);
			ClientMessenger(playerid, "FF0000", 4, message);
			EditFaction(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else if(listitem == 6) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][4] == 1){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `mdc` = 0 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has disallowed {%s}%s{FFFFFF} to use the MDC!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][4] = 0;
			} else if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][4] == 0){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `mdc` = 1 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has allowed {%s}%s{FFFFFF} to use the MDC!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][4] = 1;
			}
			mysql_query(MySQL, largequery);
			ClientMessenger(playerid, "FF0000", 4, message);
			EditFaction(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else if(listitem == 7) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][5] == 1){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `warrant` = 0 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has disallowed {%s}%s{FFFFFF} to warrant players!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][5] = 0;
			} else if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][5] == 0){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `warrant` = 1 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has allowed {%s}%s{FFFFFF} to warrant players!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][5] = 1;
			}
			mysql_query(MySQL, largequery);
			ClientMessenger(playerid, "FF0000", 4, message);
			EditFaction(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else if(listitem == 8) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][6] == 1){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `psa` = 0 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has disallowed {%s}%s{FFFFFF} to make public service announcements!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][6] = 0;
			} else if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][6] == 0){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `psa` = 1 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has allowed {%s}%s{FFFFFF} to make public service announcements!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][6] = 1;
			}
			mysql_query(MySQL, largequery);
			ClientMessenger(playerid, "FF0000", 4, message);
			EditFaction(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else if(listitem == 9) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][7] == 1){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `arrests` = 0 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has disallowed {%s}%s{FFFFFF} to make arrests!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][7] = 0;
			} else if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][7] == 0){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `arrests` = 1 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has allowed {%s}%s{FFFFFF} to make arrests!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][7] = 1;
			}
			mysql_query(MySQL, largequery);
			ClientMessenger(playerid, "FF0000", 4, message);
			EditFaction(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else if(listitem == 10) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][8] == 1){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `tressury` = 0 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has disallowed {%s}%s{FFFFFF} to touch the state tressury!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][8] = 0;
			} else if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][8] == 0){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `tressury` = 1 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has allowed {%s}%s{FFFFFF} to touch the state tressury!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][8] = 1;
			}
			mysql_query(MySQL, largequery);
			ClientMessenger(playerid, "FF0000", 4, message);
			EditFaction(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else if(listitem == 11) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][9] == 1){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `taxes` = 0 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has disallowed {%s}%s{FFFFFF} to set taxes!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][9] = 0;
			} else if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][9] == 0){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `taxes` = 1 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has allowed {%s}%s{FFFFFF} to set taxes!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][9] = 1;
			}
			mysql_query(MySQL, largequery);
			ClientMessenger(playerid, "FF0000", 4, message);
			EditFaction(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else if(listitem == 12) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][10] == 1){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `backup` = 0 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has disallowed {%s}%s{FFFFFF} to use backup!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][10] = 0;
			} else if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][10] == 0){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `backup` = 1 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has allowed {%s}%s{FFFFFF} to use backup!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][10] = 1;
			}
			mysql_query(MySQL, largequery);
			ClientMessenger(playerid, "FF0000", 4, message);
			EditFaction(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else if(listitem == 13) {
			ShowPlayerDialog(playerid,89, DIALOG_STYLE_INPUT, "Change Queue Number", "Enter New Queue Number", "Edit", "Cancel");
		} else if(listitem == 14) {
			if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][11] == 1){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `isfamily` = 0 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has made {%s}%s{FFFFFF} not a family!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][11] = 0;
			} else if(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][11] == 0){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `isfamily` = 1 WHERE `id` = %i",PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has made {%s}%s{FFFFFF} a family!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName]);
				FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][11] = 1;
			}
			mysql_query(MySQL, largequery);
			ClientMessenger(playerid, "FF0000", 4, message);
			EditFaction(playerid, PlayerInfo[playerid][AllEditingOptions]);
		}
			
	} else if(response && dialogid == 89){ // Queue Number
		
		new queuenum;
		if (!sscanf(inputtext, "i", queuenum)) {
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `queue` = %i WHERE `id` = %i;", strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionPermissions][0] = strval(inputtext);
			format(message, sizeof(message), "%s has set {%s}%s{FFFFFF} queue to %i!", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName], queuenum);
			ClientMessenger(playerid, "FF0000", 4, message);
			EditFaction(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else {
			EditFaction(playerid, PlayerInfo[playerid][AllEditingOptions]);
			format(message, sizeof(message), "You can not set the faction's queue number to %s", inputtext);
			ClientMessenger(playerid, "FF0000", 1, message);
		}
		
	} else if(response && dialogid == 90){ // for tracking player vehicless
		for(new bb = 1; bb <= MAX_VEHICLES; bb++)
		{
			if(PlayerInfo[playerid][PVehsID][(listitem+1)] == bb) {
				if(Vehicles[bb][VehGPS] == 1){
					PlayerInfo[playerid][TempInfo][14] = (listitem+1);
					GetVehiclePos(bb, Vehicles[bb][VehX], Vehicles[bb][VehY], Vehicles[bb][VehZ]);
					//format(message, sizeof(message), The2DZone(1, 2));
					format(message, sizeof(message), "* The vehicle has been located, and is currently at %s. Please refer to your GPS! *", The2DZone(floatround(Vehicles[bb][VehPX], floatround_round), floatround(Vehicles[bb][VehPY], floatround_round)));
					ClientMessenger(playerid, "FFFF00", 3, message);
					PlayerInfo[playerid][CPLoc] = CreateDynamicCP(Vehicles[bb][VehX], Vehicles[bb][VehY], Vehicles[bb][VehZ], 3, -1, -1, playerid, 999999);
					break;
				} else {
					ClientMessenger(playerid, "FF0000", 2, "* That vehicle does not have a GPS installed. Go get a vehicle GPS from 24/7 *");
					break;
				}
			}
		}
		
	} else if(!response && dialogid == 7 || !response && dialogid == 8 || !response && dialogid == 9 || !response && dialogid == 10 || !response && dialogid == 89){ // if they close faction editing
		PlayerInfo[playerid][AllEditingOptions] = 0;
		
		
	} else if(response && dialogid == 8){ // for editing faction long name
		mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `factionlongname`='%e' WHERE `id` = %i LIMIT 1", str_replace("_", " ", inputtext), PlayerInfo[playerid][AllEditingOptions]);
		mysql_query(MySQL, largequery);
		format(message, sizeof(message), "%s has changed faction long name for {%s}%s{FFFFFF} to {%s}%s", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName], inputtext);
		ClientMessenger(playerid, "FF0000", 4, message);
		format(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionLongName], 51, inputtext);
		EditFaction(playerid, PlayerInfo[playerid][AllEditingOptions]);
		
		
	} else if(response && dialogid == 9){ // for editing faction short name
		mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `factionshortname`='%e' WHERE `id` = %i LIMIT 1", str_replace("_", " ", inputtext), PlayerInfo[playerid][AllEditingOptions]);
		mysql_query(MySQL, largequery);
		format(message, sizeof(message), "%s has changed faction short name for {%s}%s{FFFFFF} to {%s}%s", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName], inputtext);
		ClientMessenger(playerid, "FF0000", 4, message);
		format(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName], 11, inputtext);
		EditFaction(playerid, PlayerInfo[playerid][AllEditingOptions]);
		
		
	} else if(response && dialogid == 10){ // for editing faction color
		mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions` SET `factioncolor`='%e' WHERE `id` = %i LIMIT 1", str_replace("_", " ", inputtext), PlayerInfo[playerid][AllEditingOptions]);
		mysql_query(MySQL, largequery);
		format(message, sizeof(message), "%s has changed faction color for {%s}%s{FFFFFF} to {%s}%s", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionShortName], inputtext, inputtext);
		ClientMessenger(playerid, "FF0000", 4, message);
		format(FactionInfo[PlayerInfo[playerid][AllEditingOptions]][FactionColor], 11, inputtext);
		EditFaction(playerid, PlayerInfo[playerid][AllEditingOptions]);
		
		
	} else if(response && dialogid == 11){ // leave avilable for other shit
	
	
	} else if(response && dialogid == 12){ // the tutorial
		ShowPlayerDialog(playerid, 13, DIALOG_STYLE_MSGBOX, "Information & Guide [1/9]", "{FFFFFF}This is a RP server, which stands for roleplay server.\nIf you do not know how to roleplay, that is fine, you will learn as time passes.\nYou use /me for action commands, and /do to explain any type of roleplay.\n{FF0000}Example{FFFFFF}: /me went over to the table and picked up an apple\n{FF0000}Example{FFFFFF}: /do I have the apple in my hand\n/do is helpful just to keep track of roleplay.", "Next", "Exit");
	} else if(response && dialogid == 13){ // the tutorial
		ShowPlayerDialog(playerid, 14, DIALOG_STYLE_MSGBOX, "Information & Guide [2/9]", "{FFFFFF}Now that we understand what /me & /do are for, next we're going to mobe on to server information.\nBefore you can join a faction or family, you need to level up first.\nYou can only level up using the command /buylevel if you have the correct amount of respect points.\nYou can check how much respect points you have by doing /stats.", "Next", "Exit");
	} else if(response && dialogid == 14){ // the tutorial
		ShowPlayerDialog(playerid, 15, DIALOG_STYLE_MSGBOX, "Information & Guide [3/9]", "{FFFFFF}The word IC stands for In-Character, meaning that you are acting as how your character would in real life, which is for roleplay.\nOOC or also known as Out-of-Character, is for non-roleplay discussions or activities, you use /b to speak OOCly.\n", "Next", "Exit");
	} else if(response && dialogid == 15){ // the tutorial
		ShowPlayerDialog(playerid, 16, DIALOG_STYLE_MSGBOX, "Information & Guide [4/9]", "{FFFFFF}Meta-Gaming(MG) is when you mix IC information and OOC information together, which is not allowed.\n{FF0000}Example{FFFFFF}: If you started talking to someone, and said their name, because it is above their head, and you didn't know them, that would be MG.", "Next", "Exit");
	} else if(response && dialogid == 16){ // the tutorial
		ShowPlayerDialog(playerid, 17, DIALOG_STYLE_MSGBOX, "Information & Guide [5/9]", "{FFFFFF}Power-Gaming(PG) is when you are doing something not realistic, or impossible in real life. This is also considered NON-RP\n{FF0000}Example{FFFFFF}: If someone said '/me puts on cape, and flys away', that would be PG and NON-RP, which is against the rules!", "Next", "Exit");
	} else if(response && dialogid == 17){ // the tutorial
		ShowPlayerDialog(playerid, 18, DIALOG_STYLE_MSGBOX, "Information & Guide [6/9]", "{FFFFFF}Non-Roleplay(NON-RP) is when you are acting or doing something not realstic, or doing something you could not do in real life.\nThis is pretty much the same as PG.\n{FF0000}Example{FFFFFF}: You're in a gun fight, and take out a soda to start healing. In real life, sodas don't heal people.\nWhich would make that NON-RP.", "Next", "Exit");
	} else if(response && dialogid == 18){ // the tutorial
		ShowPlayerDialog(playerid, 19, DIALOG_STYLE_MSGBOX, "Information & Guide [7/9]", "{FFFFFF}Death-Matching(DM) is when you start killing people without a roleplay purpose.\nWhenever you kill someone, you need to have a roleplay reason to kill them.\nNever kill anyone for a stupid reason, always make sure, it's a valid reason for them to die!", "Next", "Exit");
	} else if(response && dialogid == 19){ // the tutorial
		ShowPlayerDialog(playerid, 20, DIALOG_STYLE_MSGBOX, "Information & Guide [8/9]", "{FFFFFF}Kill-On-Sight(KOS) is when you're just killing someone without any valid reason. Very similar to death matching.\n{FF0000}Example{FFFFFF}: You're grove street, and you see a cop drive by, and then you start shooting him and his car.\nThat would be NON-RP and KOS", "Next", "Exit");
	} else if(response && dialogid == 20){ // the tutorial
		ShowPlayerDialog(playerid, 30, DIALOG_STYLE_MSGBOX, "Information & Guide [9/9]", "{FFFFFF}Congratulations, you've made it through the {FF0000}extremely{FFFFFF} long and boring information & guide test.\nYou are now free to roam and play on the server.\n\nIf you have any questions, feel free to use /newb, /helpme, or /help, and one of those will help you.\nUse /report if you see someone breaking any of these rules, or if someone is hacking!\n\n{0000FF}Enjoy your stay!", "Next", "Exit");
	} else if(response && dialogid == 30){ // the tutorial
		ShowPlayerDialog(playerid, 31, DIALOG_STYLE_TABLIST_HEADERS, "Gender Identification [IC]", "What gender is your character?\nMale\nFemale", "Next", "Exit");
	} else if(response && dialogid == 31){ // the tutorial
		mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `sex`=%i WHERE `id` = %i LIMIT 1", listitem+1, PlayerInfo[playerid][DBID]);
		mysql_query(MySQL, largequery);
		PlayerInfo[playerid][Gender] = (listitem+1);
		ShowPlayerDialog(playerid, 32, DIALOG_STYLE_LIST, "{FFFFFF}Date of Birth [{FF0000}Month{FFFFFF}] [IC]", "January\nFebruary\nMarch\nApril\nMay\nJune\nJuly\nAugust\nSeptember\nOctober\nNovember\nDecember", "Next", "Exit");
	} else if(response && dialogid == 32){ // the tutorial
		PlayerInfo[playerid][DOB][1] = listitem+1;
		ShowPlayerDialog(playerid, 33, DIALOG_STYLE_LIST, "{FFFFFF}Date of Birth [{FF0000}Day{FFFFFF}] [IC]", "01\n02\n03\n04\n05\n06\n07\n08\n09\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31", "Next", "Exit");
	} else if(response && dialogid == 33){ // the tutorial
		PlayerInfo[playerid][DOB][2] = listitem+1;
		ShowPlayerDialog(playerid, 34, DIALOG_STYLE_INPUT, "{FFFFFF}Date of Birth [{FF0000}Year{FFFFFF}] [IC]", "{FFFFFF}What {FF0000}year{FFFFFF} was your character born?\n(Your character must be at leat 21 and not older then 70)", "Next", "Exit");
	} else if(response && dialogid == 34){ // the tutorial
		new Year, Month, Day;
		getdate(Year, Month, Day);
		if(strlen(inputtext) == 4 && (Year - strval(inputtext)) <= 70 && (Year - strval(inputtext)) >= 21){
			PlayerInfo[playerid][DOB][3] = strval(inputtext);
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `DOB_MM`=%i, `DOB_DD`=%i, `DOB_YYYY`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][DOB][1], PlayerInfo[playerid][DOB][2], PlayerInfo[playerid][DOB][3], PlayerInfo[playerid][DBID]);
			mysql_query(MySQL, largequery);
			format(message, sizeof(message), "Your name: %s\nGender: %s\nDate of Birth: %i/%i/%i", GetPlayerNameEx(playerid), GenderIdentification(PlayerInfo[playerid][Gender]), PlayerInfo[playerid][DOB][1], PlayerInfo[playerid][DOB][2], PlayerInfo[playerid][DOB][3]);
			ShowPlayerDialog(playerid, 21, DIALOG_STYLE_MSGBOX, "Character Information", message, "Finish", "Exit");
		} else {
			ShowPlayerDialog(playerid, 34, DIALOG_STYLE_INPUT, "Date of Birth [Year] [IC]", "{FFFFFF}What {FF0000}year{FFFFFF} was your character born?\n(Your character must be at leat 21 and not older then 70)", "Next", "Exit");
		}
		
		
	} else if(response && dialogid == 21){ // AFTER ROLEPLAY TEST -- Completed
		//PlayerInfo[playerid][Online] = 1;
		TogglePlayerSpectating(playerid, 0);
		TogglePlayerControllable(playerid, 1);
		SetCameraBehindPlayer(playerid);
		StopAudioStreamForPlayer(playerid);
		KillTimer(CoolSpawnCamerai[playerid]);
		SetTimerEx("delayspawn", 500, false, "i", playerid);
		mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `online` = 1, `basictutorial`=1 WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][DBID]);
		mysql_query(MySQL, largequery);
		
		
	} else if(response && dialogid == 22){ // IF PLAYER IS ADMIN
		mysql_format(MySQL, largequery, sizeof(largequery), "SELECT `apassword` FROM `accounts` WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][DBID]);
		mysql_query(MySQL, largequery);
		if(cache_get_field_content_int(0, "apassword") == strval(inputtext)) {
			//PlayerInfo[playerid][Online] = 1;
			TogglePlayerSpectating(playerid, 0);
			TogglePlayerControllable(playerid, 1);
			SetCameraBehindPlayer(playerid);
			StopAudioStreamForPlayer(playerid);
			KillTimer(CoolSpawnCamerai[playerid]);
			SetTimerEx("delayspawn", 500, false, "i", playerid);
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `online` = 1 WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][DBID]);
			mysql_query(MySQL, largequery);
		} else {
			PlayerInfo[playerid][TempInfo][19] = (PlayerInfo[playerid][TempInfo][19]+1);
			if(PlayerInfo[playerid][TempInfo][19] >= 3){
				SendClientMessage(playerid,-1,"{FF0000}SERVER{FFFFFF}: Admin password was incorrect. You are being kicked now!");
				SetTimerEx("delaykick", 500, false, "i", playerid);
			} else {
				SendClientMessage(playerid,-1,"{FF0000}SERVER{FFFFFF}: Admin password was incorrect.");
				format(message, sizeof(message), "{FFFFFF}You are trying to login on to {%s}%s{FFFFFF} %s", GetAdminRanksC(PlayerInfo[playerid][Admin]), GetAdminRanks(PlayerInfo[playerid][Admin]), str_replace("_", " ", GetPlayerNameEx(playerid)));
				ShowPlayerDialog(playerid,22, DIALOG_STYLE_INPUT, "Administration Login", message, "Login", "Quit");
			}
		}
		
		
	} else if(response && dialogid == 23){
		if(listitem == 0) {
			generalhelpmenu(playerid);
		} else if(listitem == 1) {
			adminhelpmenu(playerid);
		} else if(listitem == 2) {
			factionhelpmenu(playerid);
		} else if(listitem == 3) {
			familyhelpmenu(playerid);
		} else if(listitem == 4) {
			helperhelpmenu(playerid);
		} else if(listitem == 5) {
			accounthelpmenu(playerid);
		} else if(listitem == 6) {
			businesshelpmenu(playerid);
		} else if(listitem == 7) {
			househelpmenu(playerid);
		} else if(listitem == 8) {
			jobhelpmenu(playerid);
		} else if(listitem == 9) {
			vehiclehelpmenu(playerid);
		} else if(listitem == 10) {
			animationhelpmenu(playerid);
		} else if(listitem == 11) {
			gatehelpmenu(playerid);
		} else if(listitem == 12) {
			viphelpmenu(playerid);
		}
		
		
	} else if(response && dialogid == 24){ // FOR PLAYER STATS /stats
	
	
	} else if(response && dialogid == 25){ // FOR WARRANTS
		CheckWarrants(playerid, PlayerInfo[playerid][AllEditingOptions3][listitem]);
		
		
	} else if(response && dialogid == 26){ // FOR WARRANTS
		CheckWarrantsMore(playerid, PlayerInfo[playerid][AllEditingOptions2]);
		
		
	} else if(!response && dialogid == 25){ // FOR WARRANTS /CLOSED
		PlayerInfo[playerid][AllEditingOptions2] = 65535;
		PlayerInfo[playerid][MDCList] = 0;
		PlayerInfo[playerid][AllEditingOptions3][0] = '\0';
		
		
	} else if(!response && dialogid == 26){ // FOR WARRANTS /CLOSED
		ChecMDCPStats(playerid);

		
	} else if(response && dialogid == 40){ // FOR MDC
		if(listitem == 0) { // FOR CRIMINAL SEARCH
			ShowPlayerDialog(playerid, 41, DIALOG_STYLE_INPUT, "MDC Criminal Database Search", "{FFFFFF}Enter the persons name exactly!\n(you may use underscores if you wish)", "Next", "Exit");
			format(message, sizeof(message), "{C2A2DA}* %s clicks the 'criminal database search button'", str_replace("_", " ", GetPlayerNameEx(playerid)));
			ActionMessager(playerid, 25, message);
		} else if(listitem == 1) { // FOR VIEWING WARRANTS
			SaidWarrants(playerid);
			format(message, sizeof(message), "{C2A2DA}* %s clicks the 'view warrants' button", str_replace("_", " ", GetPlayerNameEx(playerid)));
			ActionMessager(playerid, 25, message);
		} else if(listitem == 2) { // FOR SEARCHING PROFILES
			ShowPlayerDialog(playerid, 44, DIALOG_STYLE_INPUT, "MDC Identifcation Profile Search", "{FFFFFF}Enter part of a persons name!\n(you may use underscores if you wish)", "Next", "Exit");
			format(message, sizeof(message), "{C2A2DA}* %s clicks the 'identification profile search' button", str_replace("_", " ", GetPlayerNameEx(playerid)));
			ActionMessager(playerid, 25, message);
		} else if(listitem == 3) { // FOR SEARCHING LICENCE PLATES
			ShowPlayerDialog(playerid, 52, DIALOG_STYLE_INPUT, "MDC Licenceplate Search", "{FFFFFF}Enter part of or the entire vehicle licenceplate!", "Next", "Exit");
			format(message, sizeof(message), "{C2A2DA}* %s clicks the 'licenceplate search' button", str_replace("_", " ", GetPlayerNameEx(playerid)));
			ActionMessager(playerid, 25, message);
		} else if(listitem == 4) { // FOR VIEWING STREET CAMERAS
			format(ReadAllMessages[playerid], 50, "THIS IS CURRENTLY DISABLED");
			/*
			DELETE THE ABOVE FORMAT IF I DECIDE TO GET THIS WORKING AGIAN
			new getall = 0;
			strcat(ReadAllMessages[playerid], "Off\n");
			for(new w = 1; w < sizeof(LastStreetCamID); w++){
				if(LastStreetCamID[w] == 1){
					getall = getall+1;
					format(message, sizeof(message), "Street Camera %i\n", getall);
					strcat(ReadAllMessages[playerid], message);
				}
			}
			*/
			ShowPlayerDialog(playerid,54, DIALOG_STYLE_LIST, "STREET CAMERAS" , ReadAllMessages[playerid], "Select", "Cancel");
			format(message, sizeof(message), "{C2A2DA}* %s clicks the 'view street cameras' button", str_replace("_", " ", GetPlayerNameEx(playerid)));
			ActionMessager(playerid, 25, message);
			ReadAllMessages[playerid][0] = '\0';
			
			
		} else if(listitem == 5) { // FOR VIEWING ALL LEO FACTIONS
			for (new a = 1; a <= TotalFactions; a++) {
				if(FactionInfo[a][FactionPermissions][0] == FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][0]){
					format(message, sizeof(message), "{%s}%s\n", FactionInfo[a][FactionColor], FactionInfo[a][FactionLongName]);
					strcat(ReadAllMessages[playerid], message);
				}
			}
			ShowPlayerDialog(playerid,43, DIALOG_STYLE_LIST, str_replace("_", " ", inputtext), ReadAllMessages[playerid], "Select", "Cancel");
			ReadAllMessages[playerid][0] = '\0';
		}
		
		
	} else if(!response && dialogid == 54){ // FOR VIEWING STREET CAMERAS
		SaidMDC(playerid);
		
		
	/*
	} else if(response && dialogid == 54){ // FOR VIEWING STREET CAMERAS
		if(listitem != 0){
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `streetcams` WHERE `id` = %i LIMIT 1", (listitem));
			mysql_query(MySQL, largequery);
			PlayerInfo[playerid][ViewingCamera] = (listitem);
			format(message, sizeof(message), "{C2A2DA}* %s clicks the 'view street cam #%i' button", str_replace("_", " ", GetPlayerNameEx(playerid)), listitem);
			ActionMessager(playerid, 25, message);
			TogglePlayerControllable(playerid, 0);
			PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
			PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
			GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
			SetPlayerVirtualWorld(playerid, cache_get_field_content_int(0, "world"));
			SetPlayerInterior(playerid, cache_get_field_content_int(0, "interior"));
			SetPlayerPos(playerid, cache_get_field_content_float(0, "x"), cache_get_field_content_float(0, "y"), cache_get_field_content_float(0, "z")-30);
			SetPlayerCameraPos(playerid, cache_get_field_content_float(0, "x"), cache_get_field_content_float(0, "y"), cache_get_field_content_float(0, "z"));
			SetPlayerCameraLookAt(playerid, cache_get_field_content_float(0, "tx"), cache_get_field_content_float(0, "ty"), cache_get_field_content_float(0, "tz"));
			largequery[0] = '\0';
			format(message, sizeof(message), "* You are viewing Street Camera %i *", listitem);
			ClientMessenger(playerid, "FFFF00", 3, message);
			ClientMessenger(playerid, "FFFF00", 3, "* Right Click to switch cameras. Press enter to exit! *");
		} else {
			if(PlayerInfo[playerid][ViewingCamera] != 0){
				PlayerInfo[playerid][ViewingCamera] = 0;
				TogglePlayerControllable(playerid,1);
				SetCameraBehindPlayer(playerid);
				ClientMessenger(playerid, "FFFF00", 3, "* You have turned off the street view *");
				SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][WorldID]);
				SetPlayerInterior(playerid, PlayerInfo[playerid][InteriorID]);
				SetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
				format(message, sizeof(message), "{C2A2DA}* %s clicks the 'stop viewing street camera' button", str_replace("_", " ", GetPlayerNameEx(playerid)));
				ActionMessager(playerid, 25, message);
			} else {
				SaidMDC(playerid);
				ClientMessenger(playerid, "FF0000", 2, "* You are not viewing any street camera! *");
			}
		}
	*/
		
	} else if(!response && dialogid == 52){ // FOR VIEWING ALL PLATE LICENSES
		SaidMDC(playerid);
		
		
	} else if(response && dialogid == 52){ // FOR VIEWING ALL PLATE LICENSES
		new getname[MAX_PLAYER_NAME+1], getlicenceplate[50];
		if(strlen(inputtext) != 0){
			new largequery2[300], totalcache, firstcache;
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `player_vehicles` WHERE `licenceplate` LIKE '%s%e%s'", "%", inputtext, "%");
			mysql_query(MySQL, largequery);
			totalcache = cache_num_rows();
			firstcache = cache_num_rows();
			mysql_format(MySQL, largequery2, sizeof(largequery2), "SELECT * FROM `vehicles` WHERE `licenceplate` LIKE '%s%e%s';", "%", inputtext, "%");
			mysql_query(MySQL, largequery2);
			totalcache = (totalcache+cache_num_rows());
			format(message, sizeof(message), "* There are %i results found. *", totalcache);
			ClientMessenger(playerid, "FF0000", 2, message);
			if(totalcache == 0){
				SaidMDC(playerid);
			} else if(totalcache >= 25) {
				ClientMessenger(playerid, "FF0000", 2, "* Only a max of 25 results can be displayed. *");
				ClientMessenger(playerid, "FFFF00", 3, "* Redine your search if you wish to find lesser results! *");
			}
			strcat(ReadAllMessages[playerid], "Name\n");
			if(totalcache >= 1){
				mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `player_vehicles` WHERE `licenceplate` LIKE '%s%e%s'", "%", inputtext, "%");
				mysql_query(MySQL, largequery);
				for(new a = 0; a < cache_num_rows(); a++)
				{
					if(a+1 <= 25){
						PlayerInfo[playerid][AllEditingOptions3][a] = cache_get_field_content_int(a, "playerid");
						cache_get_field_content(a, "licenceplate", getlicenceplate);
						mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", cache_get_field_content_int(a, "playerid"));
						mysql_query(MySQL, largequery);
						cache_get_field_content(0, "name", getname);
						format(message, sizeof(message), "{FFFFFF}%i. %s (%s)\n", a+1, str_replace("_", " ", getname), getlicenceplate);
						strcat(ReadAllMessages[playerid], message);
						mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `player_vehicles` WHERE `licenceplate` LIKE '%s%e%s'", "%", inputtext, "%");
						mysql_query(MySQL, largequery);
					}
				}
				mysql_format(MySQL, largequery2, sizeof(largequery2), "SELECT * FROM `vehicles` WHERE `licenceplate` LIKE '%s%e%s';", "%", inputtext, "%");
				mysql_query(MySQL, largequery2);
				for(new a = 0; a < cache_num_rows(); a++)
				{
					PlayerInfo[playerid][AllEditingOptions3][firstcache+a] = 65535;
					if(cache_get_field_content_int(a, "factionid") != 0){
						if(LastFactionID[cache_get_field_content_int(a, "factionid")] == 1) {
							if(firstcache+a+1 <= 25){
								cache_get_field_content(a, "licenceplate", getlicenceplate);
								format(message, sizeof(message), "{FFFFFF}%i. %s (%s)\n", firstcache+a+1, FactionInfo[cache_get_field_content_int(a, "factionid")][FactionShortName], getlicenceplate);
								strcat(ReadAllMessages[playerid], message);
							}
						}
					} else {
						if(firstcache+a+1 <= 25){
							format(message, sizeof(message), "{FFFFFF}%i. Unknown\n", firstcache+a+1);
							strcat(ReadAllMessages[playerid], message);
						}
					}
				}
				ShowPlayerDialog(playerid,45, DIALOG_STYLE_TABLIST_HEADERS, str_replace("_", " ", inputtext), ReadAllMessages[playerid], "Select", "Cancel");
			}
			largequery2[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 2, "* You can't search for anything if you haven't entered anything! *");
			SaidMDC(playerid);
		}
		getname[0] = '\0';
		getlicenceplate[0] = '\0';
		ReadAllMessages[playerid][0] = '\0';
		
		
	} else if(!response && dialogid == 44){ // FOR VIEWING ALL PROFILES
		SaidMDC(playerid);
		
		
	} else if(response && dialogid == 44){ // FOR VIEWING ALL PROFILES
		new getname[MAX_PLAYER_NAME+1];
		if(strlen(inputtext) != 0){
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `name` LIKE '%s%e%s'", "%", str_replace(" ", "_", inputtext), "%");
			mysql_query(MySQL, largequery);
			format(message, sizeof(message), "* There are %i results found. *", cache_num_rows());
			ClientMessenger(playerid, "FF0000", 2, message);
			if(cache_num_rows() == 0){
				SaidMDC(playerid);
			} else if(cache_num_rows() >= 25) {
				ClientMessenger(playerid, "FF0000", 2, "* Only a max of 25 results can be displayed. *");
				ClientMessenger(playerid, "FFFF00", 3, "* Redine your search if you wish to find lesser results! *");
			}
			if(cache_num_rows() >= 1){
				for(new a = 0; a < cache_num_rows(); a++)
				{
					if(a+1 <= 25) {
						PlayerInfo[playerid][AllEditingOptions3][a] = cache_get_field_content_int(a, "id");
						cache_get_field_content(a, "name", getname);
						format(message, sizeof(message), "{FFFFFF}%i. %s\n", a+1, str_replace("_", " ", getname));
						strcat(ReadAllMessages[playerid], message);
					}
				}
				ShowPlayerDialog(playerid,45, DIALOG_STYLE_LIST, str_replace("_", " ", inputtext), ReadAllMessages[playerid], "Select", "Cancel");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 2, "* You can't search for anything if you haven't entered anything! *");
			SaidMDC(playerid);
		}
		getname[0] = '\0';
		ReadAllMessages[playerid][0] = '\0';
		
		
	} else if(response && dialogid == 45){ // FOR IF PROFILE IS FOUND, SHOW ALL POSSIBLE OPTIONS
		PlayerInfo[playerid][AllEditingOptions2] = PlayerInfo[playerid][AllEditingOptions3][listitem];
		if(PlayerInfo[playerid][AllEditingOptions2] != 65535){
			ChecMDCPStats(playerid);
		} else {
			SendClientMessage(playerid, -1, "{FF0000}* No information found! *");
			SaidMDC(playerid);
		}
		
		
	} else if(!response && dialogid == 46){ // FOR WHEN OPTIONS HAVE BEEN SELECTED FOR PROFILE SEARCH /closed
		PlayerInfo[playerid][AllEditingOptions] = 0;
		PlayerInfo[playerid][AllEditingOptions2] = 0;
		PlayerInfo[playerid][MDCList] = 0;
		PlayerInfo[playerid][AllEditingOptions3][0] = '\0';
		
		
	} else if(response && dialogid == 46){ // WHEN PROFILE HAS BEEN FOUND, SHOW THE OPTIONS AVAILABLE
		mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id`=%i LIMIT 1", PlayerInfo[playerid][AllEditingOptions2]);
		mysql_query(MySQL, largequery);
		if(listitem == 0) { // SHOW ALL CRIMES
			if(cache_get_field_content_int(0, "crimes_committed") != 0) {
				CheckWarrants(playerid, PlayerInfo[playerid][AllEditingOptions2]);
			} else {
				ClientMessenger(playerid, "FF0000", 2, "* This person has never committed a crime *");
				ChecMDCPStats(playerid);
			}
		} else if(listitem == 1) { // TO SHOW IC INFORMATION
			SendClientMessage(playerid, -1, GetPlayerSkinInfo(cache_get_field_content_int(0, "skin")));
		} else if(listitem == 2) { // SHOW PROPERTY OWNED
			new phouse = cache_get_field_content_int(0, "house"), pbiz = cache_get_field_content_int(0, "biz"), phouseloc[51], pbizloc[51];
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `player_vehicles` WHERE `playerid`=%i", PlayerInfo[playerid][AllEditingOptions2]);
			mysql_query(MySQL, largequery);
			if(cache_num_rows() >= 1){
				for(new u = 0; u < cache_num_rows(); u++){
					new vehid = cache_get_field_content_int(u, "vehicle"), pvehlic[33];
					cache_get_field_content(u, "licenceplate", pvehlic);
					format(message2, sizeof(message2), "[%s(%s)]", GetVehicleInformation(vehid), pvehlic);
					if(cache_num_rows() != (u+1)){
						strcat(message2, "  |  ");
					}
					strcat(ReadAllMessages[playerid], message2);
					pvehlic[0] = '\0';
				}
			}
			if(phouse != 0){
				mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `houses` WHERE `ownerid`=%i LIMIT 1", PlayerInfo[playerid][AllEditingOptions2]);
				mysql_query(MySQL, largequery);
				format(phouseloc, 51, The2DZone(cache_get_field_content_int(0, "x"), cache_get_field_content_int(0, "y")));
			} else {
				format(phouseloc, 51, "NONE");
			}
			if(pbiz != 0){
				mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `businesses` WHERE `OwnerID`=%i LIMIT 1", PlayerInfo[playerid][AllEditingOptions2]);
				mysql_query(MySQL, largequery);
				format(pbizloc, 51, The2DZone(cache_get_field_content_int(0, "x"), cache_get_field_content_int(0, "y")));
			} else {
				format(pbizloc, 51, "NONE");
			}
			format(ReadAllMessages[playerid], 1000, "{00FFFF}HOUSE{FFFFFF}:  [%s (Postal Code: %i)]\n{00FFFF}BUSINESS{FFFFFF}:  [%s (%s) (Postal Code: %i)]\n{00FFFF}VEHICLES{FFFFFF}:  %s", phouseloc, phouse, pbizloc, GetBusinesses(Businesses[pbiz][BizType]), pbiz, ReadAllMessages[playerid]);
			ShowPlayerDialog(playerid, 53, DIALOG_STYLE_MSGBOX, "Property Search", ReadAllMessages[playerid], "Done", "");
			ReadAllMessages[playerid][0] = '\0';
			phouseloc[0] = '\0';
			pbizloc[0] = '\0';
		}
		
		
	} else if(response && dialogid == 53 || !response && dialogid == 53){ // PROPERTY SEARCH
		ChecMDCPStats(playerid);
		
		
	} else if(!response && dialogid == 41){ // FOR CRIMINAL SEARCHING
		SaidMDC(playerid);
		
		
	} else if(response && dialogid == 41){ // FOR CRIMINAL SEARCHING
		mysql_format(MySQL, largequery, sizeof(largequery), "SELECT `id` FROM `accounts` WHERE `name` = '%e' AND `crimes_committed` >= 1 LIMIT 1", str_replace(" ", "_", inputtext));
		mysql_query(MySQL, largequery);
		if(cache_num_rows() == 1) {
			PlayerInfo[playerid][AllEditingOptions2] = cache_get_field_content_int(0, "id");
			CheckWarrants(playerid, PlayerInfo[playerid][AllEditingOptions2]);
		} else {
			ClientMessenger(playerid, "FF0000", 2, "* This person either does not exist, or has never committed a crime! *");
			SaidMDC(playerid);
		}
		
		
	} else if(response && dialogid == 47){ // ATM
			format(message, sizeof(message), "{FFFFFF}The max you may take out in a single transaction is: ${FF0000}%i{FFFFFF}\nYou have ${008000}%i{FFFFFF} at your discretion.", (PlayerInfo[playerid][Level]*10000), PlayerInfo[playerid][BankMoney]);
			ShowPlayerDialog(playerid, 48, DIALOG_STYLE_INPUT, "Automatic Teller Machine Withdraw", message, "Withdraw", "Exit");
	
	
	} else if(response && dialogid == 48){ // ATM
		if(strval(inputtext) <= (PlayerInfo[playerid][Level]*10000) && 0 < strval(inputtext) && strval(inputtext) != 0 && (PlayerInfo[playerid][BankMoney] - strval(inputtext)) >= 0){
			PlayerInfo[playerid][BankMoney] = (PlayerInfo[playerid][BankMoney] - strval(inputtext));
			PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money]+strval(inputtext));
			ResetPlayerMoney(playerid);
			GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
			format(message, sizeof(message), "{FFFFFF}You have withdrawn ${FF0000}%i{FFFFFF} from your bank account.\nYour account now has ${FF0000}%i{FFFFFF}", strval(inputtext), PlayerInfo[playerid][BankMoney]);
			ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, "Automatic Teller Machine | Transaction", message, "Finish", "Exit");
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `bank` = %i, `money` = %i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][BankMoney], PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
			mysql_query(MySQL, largequery);
		} else {
			format(message, sizeof(message), "{FF0000}You can not take out %i at a time!\n{FFFF00}You either have insufficient funds, or are attempting to withdraw more then your max.{FFFFFF}\nThe max you may take out in a single transaction is: {FF0000}%i{FFFFFF}\nYou have {008000}%i{FFFFFF} at your discretion.", strval(inputtext), (PlayerInfo[playerid][Level]*10000), PlayerInfo[playerid][BankMoney]);
			ShowPlayerDialog(playerid, 48, DIALOG_STYLE_INPUT, "Automatic Teller Machine Withdraw", message, "Withdraw", "Exit");
		}
	
	
	} else if(response && dialogid == 58){ // FOR EDITING GATES
		if(listitem == 0){
			ShowPlayerDialog(playerid, 59, DIALOG_STYLE_INPUT, "Gate Edit Owner", "{FFFFFF}You {FF0000}must{FFFFFF} use the user id, not their name!\nUse the command /getplayerid or /ogetplayerid to get the database id\nIf you want to set the owner to no one, change it to 0", "Next", "Exit");
		} else if(listitem == 1){
			ShowPlayerDialog(playerid, 60, DIALOG_STYLE_INPUT, "Gate Edit Password", "{FFFFFF}You may have up to a 50 character password. Though, users can do /changegatepassword", "Next", "Exit");
		} else if(listitem == 2){
			PlayerInfo[playerid][AllEditingOptions2] = 1;
			EditDynamicObject(playerid, GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateIcon]);
		} else if(listitem == 3){
			PlayerInfo[playerid][AllEditingOptions2] = 2;
			EditDynamicObject(playerid, GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateIcon]);
		} else if(listitem == 4){
			ShowPlayerDialog(playerid, 61, DIALOG_STYLE_INPUT, "Gate Edit Radius", "{FFFFFF}You can the radius up to 10.0", "Next", "Exit");
		} else if(listitem == 5){
			ShowPlayerDialog(playerid, 62, DIALOG_STYLE_INPUT, "Gate Edit Speed", "{FFFFFF}You can the speed up to 10.0", "Next", "Exit");
		} else if(listitem == 6){
			ShowPlayerDialog(playerid, 63, DIALOG_STYLE_INPUT, "Gate Edit Object", "{FFFFFF}This changes the gate's object", "Next", "Exit");
		} else if(listitem == 7){
			ShowPlayerDialog(playerid, 69, DIALOG_STYLE_INPUT, "Gate Edit First Faction", "{FFFFFF}This changes the gate's first faction", "Next", "Exit");
		} else if(listitem == 8){
			ShowPlayerDialog(playerid, 70, DIALOG_STYLE_INPUT, "Gate Edit Second Faction", "{FFFFFF}This changes the gate's second faction", "Next", "Exit");
		} else if(listitem == 9){
			ShowPlayerDialog(playerid, 71, DIALOG_STYLE_INPUT, "Gate Edit Third Faction", "{FFFFFF}This changes the gate's third faction", "Next", "Exit");
		} else if(listitem == 10){
			ShowPlayerDialog(playerid, 72, DIALOG_STYLE_INPUT, "Gate Edit Level", "{FFFFFF}This changes the minimum level to be able to open this gate", "Next", "Exit");
		} else if(listitem == 11){
			ShowPlayerDialog(playerid, 75, DIALOG_STYLE_INPUT, "Gate Edit AutoClose Time", "{FFFFFF}You can enter any amount of time.\nIf you want the gate to not automatically close, enter 0", "Next", "Exit");
		}
	
	
	} else if(!response && dialogid == 59 || !response && dialogid == 60 || !response && dialogid == 61 || !response && dialogid == 62 || !response && dialogid == 63 || !response && dialogid == 69){ // FOR IF THEY CLOSE ANY OF THE GATE OPTIONS
		EditGate(playerid, PlayerInfo[playerid][AllEditingOptions]);
		PlayerInfo[playerid][AllEditingOptions2] = 0;
	
	
	} else if(response && dialogid == 61){ // FOR EDITING RADIUS OF GATES
		if(floatstr(inputtext) >= 0.1 && floatstr(inputtext) <= 10.0){
			format(message, sizeof(message), "%s has changed the radius of gate %i to %f", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions], floatstr(inputtext));
			ClientMessenger(playerid, "FF0000", 4, message);
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `gates` SET `radius`='%f' WHERE `id` = %i", floatstr(inputtext), PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateRadius] = floatstr(inputtext);
			EditGate(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You can't have below 0.1 or above 10.0");
			EditGate(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} 
	
	
	} else if(response && dialogid == 69){ // FOR EDITING FACTION OF GATES
		if(LastFactionID[strval(inputtext)] == 1 || strval(inputtext) == 0){
			if(strval(inputtext) != 0){
				format(message, sizeof(message), "%s has changed the first faction of gate %i to %s(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions], FactionInfo[strval(inputtext)][FactionLongName], strval(inputtext));
			} else {
				format(message, sizeof(message), "%s has removed the first faction for gate %i", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions]);
			}
			ClientMessenger(playerid, "FF0000", 4, message);
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `gates` SET `faction`=%i WHERE `id` = %i", strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateFaction] = strval(inputtext);
			EditGate(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "That faction does not exist!");
			EditGate(playerid, PlayerInfo[playerid][AllEditingOptions]);
		}
	
	
	} else if(response && dialogid == 70){ // FOR EDITING FACTION OF GATES
		if(LastFactionID[strval(inputtext)] == 1 || strval(inputtext) == 0){
			if(strval(inputtext) != 0){
				format(message, sizeof(message), "%s has changed the second faction of gate %i to %s(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions], FactionInfo[strval(inputtext)][FactionLongName], strval(inputtext));
			} else {
				format(message, sizeof(message), "%s has removed the second faction for gate %i", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions]);
			}
			ClientMessenger(playerid, "FF0000", 4, message);
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `gates` SET `faction2`=%i WHERE `id` = %i", strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateFaction2] = strval(inputtext);
			EditGate(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "That faction does not exist!");
			EditGate(playerid, PlayerInfo[playerid][AllEditingOptions]);
		}
	
	
	} else if(response && dialogid == 71){ // FOR EDITING FACTION OF GATES
		if(LastFactionID[strval(inputtext)] == 1 || strval(inputtext) == 0){
			if(strval(inputtext) != 0){
				format(message, sizeof(message), "%s has changed the third faction of gate %i to %s(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions], FactionInfo[strval(inputtext)][FactionLongName], strval(inputtext));
			} else {
				format(message, sizeof(message), "%s has removed the third faction for gate %i", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions]);
			}
			ClientMessenger(playerid, "FF0000", 4, message);
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `gates` SET `faction3`=%i WHERE `id` = %i", strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateFaction3] = strval(inputtext);
			EditGate(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "That faction does not exist!");
			EditGate(playerid, PlayerInfo[playerid][AllEditingOptions]);
		}
	
	
	} else if(response && dialogid == 72){ // FOR EDITING LEVEL OF GATES
		if(strval(inputtext) >= 0){
			if(strval(inputtext) != 0){
				format(message, sizeof(message), "%s has changed the minimum level of gate %i to %i", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions], strval(inputtext));
			} else {
				format(message, sizeof(message), "%s has removed the minimum level for gate %i", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions]);
			}
			ClientMessenger(playerid, "FF0000", 4, message);
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `gates` SET `level`=%i WHERE `id` = %i", strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateLevel] = strval(inputtext);
			EditGate(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "Level can only be 0 and above!");
			EditGate(playerid, PlayerInfo[playerid][AllEditingOptions]);
		}
	
	
	} else if(response && dialogid == 75){ // FOR EDITING LEVEL OF GATES
		if(strval(inputtext) >= 0){
			if(strval(inputtext) != 0){
				format(message, sizeof(message), "%s has changed the autoclose time of gate %i to %i", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions], strval(inputtext));
			} else {
				format(message, sizeof(message), "%s has removed the autoclose time for gate %i", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions]);
			}
			ClientMessenger(playerid, "FF0000", 4, message);
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `gates` SET `autoclose`=%i WHERE `id` = %i", strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateAutoClose] = strval(inputtext);
			EditGate(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "Level can only be 0 and above!");
			EditGate(playerid, PlayerInfo[playerid][AllEditingOptions]);
		}
	
	
	} else if(response && dialogid == 62){ // FOR EDITING SPEED OF GATES
		if(floatstr(inputtext) >= 0.1 && floatstr(inputtext) <= 10.0){
			format(message, sizeof(message), "%s has changed the speed of gate %i to %f", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions], floatstr(inputtext));
			ClientMessenger(playerid, "FF0000", 4, message);
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `gates` SET `speed`='%f' WHERE `id` = %i", floatstr(inputtext), PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateSpeed] = floatstr(inputtext);
			EditGate(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You can't have below 0.1 or above 10.0");
			EditGate(playerid, PlayerInfo[playerid][AllEditingOptions]);
		}
	
	
	} else if(response && dialogid == 63){ // FOR EDITING OBJECT OF GATES
		format(message, sizeof(message), "%s has changed the objectid of gate %i to %i", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions], strval(inputtext));
		ClientMessenger(playerid, "FF0000", 4, message);
		mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `gates` SET `object`=%i WHERE `id` = %i", strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
		mysql_query(MySQL, largequery);
		GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateObjID] = strval(inputtext);
		DestroyDynamicObject(GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateIcon]);
		new tempid = PlayerInfo[playerid][AllEditingOptions];
		GateInfo[tempid][GateIcon] = CreateDynamicObject(GateInfo[tempid][GateObjID], GateInfo[tempid][GateX], GateInfo[tempid][GateY], GateInfo[tempid][GateZ], GateInfo[tempid][GateRX], GateInfo[tempid][GateRY], GateInfo[tempid][GateRZ], GateInfo[tempid][GateWorld], GateInfo[tempid][GateInt], -1, 200.0, 200.0);
		EditGate(playerid, PlayerInfo[playerid][AllEditingOptions]);
	
	
	} else if(response && dialogid == 59){ // FOR EDITING OWNER OF GATES
		mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", strval(inputtext));
		mysql_query(MySQL, largequery);
		if(cache_num_rows() == 1 || strval(inputtext) == 0){
			new getname[MAX_PLAYER_NAME+1];
			cache_get_field_content(0, "name", getname);
			if(strval(inputtext) != 0){
				format(message, sizeof(message), "%s has changed the ownership of gate %i to %s(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions], getname, cache_get_field_content_int(0,"id"));
			} else {
				format(message, sizeof(message), "%s has changed the ownership of gate %i to NONE", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions]);
			}
			ClientMessenger(playerid, "FF0000", 4, message);
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `gates` SET `owner`=%i WHERE `id` = %i", strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateOwner] = strval(inputtext);
			getname[0] = '\0';
			EditGate(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "As much as you may want to believe, that database ID does not exist!");
			ClientMessenger(playerid, "FFFFFF", 3, "If you're trying to set it to no owner. Change the ID to 0");
			EditGate(playerid, PlayerInfo[playerid][AllEditingOptions]);
		}
	
	
	} else if(response && dialogid == 60){ // FOR EDITING PASSWORD OF GATES
		if(strlen(inputtext) >= 1 && strlen(inputtext) <= 51){
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `gates` SET `password`='%e' WHERE `id` = %i", inputtext, PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			format(GateInfo[PlayerInfo[playerid][AllEditingOptions]][GatePassword], 51, inputtext);
			format(message, sizeof(message), "%s has changed the password of gate %i to %s", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions], inputtext);
			ClientMessenger(playerid, "FF0000", 4, message);
			EditGate(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You can not have less then 1 character, or more then 50 characters!");
			EditGate(playerid, PlayerInfo[playerid][AllEditingOptions]);
		}
	
	
	} else if(response && dialogid == 76){ // VEHICLE EDIT
		if(listitem == 0){ // Color1
			ShowPlayerDialog(playerid, 77, DIALOG_STYLE_INPUT, "Vehicle Edit Color 1", "{FFFFFF}Vehicle color one edit", "Next", "Exit");
		} else if(listitem == 1){ // Color2
			ShowPlayerDialog(playerid, 78, DIALOG_STYLE_INPUT, "Vehicle Edit Color 2", "{FFFFFF}Vehicle color two edit", "Next", "Exit");
		} else if(listitem == 2){ // Health
			ShowPlayerDialog(playerid, 79, DIALOG_STYLE_INPUT, "Vehicle Edit Health", "{FFFFFF}Vehicle health edit\nThe default health for vehicles is 1000\nIf you set any vehicle below 300, it will explode on spawn.", "Next", "Exit");
		} else if(listitem == 3){ // Faction
			ShowPlayerDialog(playerid, 80, DIALOG_STYLE_INPUT, "Vehicle Edit Faction", "{FFFFFF}Vehicle faction edit", "Next", "Exit");
		}
	
	
	} else if(!response && dialogid == 76 || !response && dialogid == 77 || !response && dialogid == 78 || !response && dialogid == 79 || !response && dialogid == 80){ // VEHICLE EDIT
		PlayerInfo[playerid][AllEditingOptions] = 0;
		PlayerInfo[playerid][AllEditingOptions2] = 0;
		
		
	} else if(response && dialogid == 77){ // FOR EDITING VEHICLE COLOR 1
		Vehicles[PlayerInfo[playerid][AllEditingOptions2]][Color1] = strval(inputtext);
		mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `vehicles` SET `color1`=%i WHERE `id` = %i", strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
		mysql_query(MySQL, largequery);
		ChangeVehicleColor(PlayerInfo[playerid][AllEditingOptions2], Vehicles[PlayerInfo[playerid][AllEditingOptions2]][Color1], Vehicles[PlayerInfo[playerid][AllEditingOptions2]][Color2]);
		Editcveh(playerid, PlayerInfo[playerid][AllEditingOptions2]);
		format(message, sizeof(message), "%s has changed color one to %i for vehicle %i", str_replace("_", " ", GetPlayerNameEx(playerid)), strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
		ClientMessenger(playerid, "FF0000", 4, message);
		
	
	} else if(response && dialogid == 78){ // FOR EDITING VEHICLE COLOR 2
		Vehicles[PlayerInfo[playerid][AllEditingOptions2]][Color2] = strval(inputtext);
		mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `vehicles` SET `color2`=%i WHERE `id` = %i", strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
		mysql_query(MySQL, largequery);
		ChangeVehicleColor(PlayerInfo[playerid][AllEditingOptions2], Vehicles[PlayerInfo[playerid][AllEditingOptions2]][Color1], Vehicles[PlayerInfo[playerid][AllEditingOptions2]][Color2]);
		Editcveh(playerid, PlayerInfo[playerid][AllEditingOptions2]);
		format(message, sizeof(message), "%s has changed color two to %i for vehicle %i", str_replace("_", " ", GetPlayerNameEx(playerid)), strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
		ClientMessenger(playerid, "FF0000", 4, message);
		
	
	} else if(response && dialogid == 79){ // FOR EDITING VEHICLE HEALTH
		Vehicles[PlayerInfo[playerid][AllEditingOptions2]][Health] = floatstr(inputtext);
		mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `vehicles` SET `health`='%f' WHERE `id` = %i", floatstr(inputtext), PlayerInfo[playerid][AllEditingOptions]);
		mysql_query(MySQL, largequery);
		SetVehicleHealth(PlayerInfo[playerid][AllEditingOptions2], floatstr(inputtext));
		Editcveh(playerid, PlayerInfo[playerid][AllEditingOptions2]);
		format(message, sizeof(message), "%s has changed the health to %f for vehicle %i", str_replace("_", " ", GetPlayerNameEx(playerid)), floatstr(inputtext), PlayerInfo[playerid][AllEditingOptions]);
		ClientMessenger(playerid, "FF0000", 4, message);
		
		
	} else if(response && dialogid == 80){ // FOR EDITING VEHICLE FACTION
		if(LastFactionID[strval(inputtext)] == 1){
			Vehicles[PlayerInfo[playerid][AllEditingOptions2]][Faction] = strval(inputtext);
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `vehicles` SET `factionid`=%i WHERE `id` = %i", strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			Editcveh(playerid, PlayerInfo[playerid][AllEditingOptions2]);
			format(message, sizeof(message), "%s has changed faction to {%s}%s{FFFFFF}(%i) for vehicle %i", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[strval(inputtext)][FactionColor], FactionInfo[strval(inputtext)][FactionLongName], strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
			ClientMessenger(playerid, "FF0000", 4, message);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "That is not a valid faction id!");
			Editcveh(playerid, PlayerInfo[playerid][AllEditingOptions2]);
		}
		
		
	} else if(!response && dialogid == 58){ // IF THEY CLOSE GATE EDITING MENU
		PlayerInfo[playerid][AllEditingOptions] = 0;
		PlayerInfo[playerid][AllEditingOptions2] = 0;
		
		
	} else if(!response && dialogid == 73){ // AIRPORT FAST TRAVEL MENU
		PlayerInfo[playerid][AllEditingOptions] = 0;
		PlayerInfo[playerid][AllEditingOptions2] = 0;
		
		
	} else if(response && dialogid == 73){ // AIRPORT FAST TRAVEL MENU
		if((listitem+1) != PlayerInfo[playerid][AllEditingOptions]){
			for(new a = 1; a < sizeof(AirportFTInfo); a++){
				if(AirportFTInfo[a][APAirportID] == (listitem+1)){
					PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - GameSettings[3][GameSetting]);
					ResetPlayerMoney(playerid);
					GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
					mysql_query(MySQL, largequery);
					if((listitem+1) == 1){
						format(message, sizeof(message), "{C2A2DA}* %s enter the terminal, buying a ticket for Los Santos International", str_replace("_", " ", GetPlayerNameEx(playerid)));
					} else if((listitem+1) == 2){
						format(message, sizeof(message), "{C2A2DA}* %s enter the terminal, buying a ticket for San Fierro International", str_replace("_", " ", GetPlayerNameEx(playerid)));
					} else if((listitem+1) == 3){
						format(message, sizeof(message), "{C2A2DA}* %s enter the terminal, buying a ticket for Las Venturas International", str_replace("_", " ", GetPlayerNameEx(playerid)));
					}
					ActionMessager(playerid, 25, message);
					SetPlayerPos(playerid, AirportFTInfo[a][APX], AirportFTInfo[a][APY], AirportFTInfo[a][APZ]);
					PlayerInfo[playerid][AllEditingOptions] = 0;
					PlayerInfo[playerid][AllEditingOptions2] = 0;
					break;
				}
			}
		} else {
			ClientMessenger(playerid, "FF0000", 2, "* You're already at this airport, you can't buy a ticket to fly to an airport you're at! *");
		}
	
	
	} else if(!response && dialogid == 49 || !response && dialogid == 51){ // DEALERSHIP closed
		for(new b = 0; b < 51; b++){
			PlayerInfo[playerid][AllEditingOptions3][b] = 0;
			PlayerInfo[playerid][AllEditingOptions4][b] = 0;
		}
		PlayerInfo[playerid][AllEditingOptions] = 0;
		PlayerInfo[playerid][AllEditingOptions2] = 0;
	
	
	} else if(response && dialogid == 49){ // DEALERSHIP
		if(PlayerInfo[playerid][AllEditingOptions] != 0){
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `dealership_vehicles` WHERE `dealershipid`=%i", PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			if(cache_num_rows() >= 1) {
				strcat(ReadAllMessages[playerid], "Name\tID\tPrice\n");
				for(new a=1; a <= cache_num_rows(); a++){
					PlayerInfo[playerid][AllEditingOptions3][a] = cache_get_field_content_int((a-1), "vehicleid");
					format(message, sizeof(message), "%s\t%i\t%i\n", GetVehicleInformation(cache_get_field_content_int((a-1), "vehicleid")), cache_get_field_content_int((a-1), "vehicleid"), cache_get_field_content_int((a-1), "price"));
					strcat(ReadAllMessages[playerid], message);
					ShowPlayerDialog(playerid, 50, DIALOG_STYLE_TABLIST_HEADERS, Dealerships[PlayerInfo[playerid][AllEditingOptions]][DealerName], ReadAllMessages[playerid], "Buy", "Exit");
				}
				ReadAllMessages[playerid][0] = '\0';
			} else {
				ClientMessenger(playerid, "FF0000", 2, "* This dealership has no vehicles in it at this time! *");
			}
		}
	
	
	} else if(response && dialogid == 50){
		if(PlayerInfo[playerid][AllEditingOptions3][listitem+1] != 0){
			format(message, sizeof(message), "Would you like to test drive the %s?", GetVehicleInformation(PlayerInfo[playerid][AllEditingOptions3][listitem+1]));
			ShowPlayerDialog(playerid, 74, DIALOG_STYLE_MSGBOX, Dealerships[PlayerInfo[playerid][AllEditingOptions]][DealerName], message, "Yes", "No");
			PlayerInfo[playerid][AllEditingOptions3][1] = PlayerInfo[playerid][AllEditingOptions3][listitem+1];
		}
	
	
	} else if(response && dialogid == 74){
		if(PlayerInfo[playerid][AllEditingOptions4][1] == 0){
			for(new w = 1; w <= sizeof(LastVehicleID); w++){
				if(LastVehicleID[w] == 0){
					LastVehicleID[w] = 1;
					Vehicles[w][Vehicle] = PlayerInfo[playerid][AllEditingOptions3][1];
					Vehicles[w][Faction] = 0;
					Vehicles[w][Color1] = -1;
					Vehicles[w][Color2] = -1;
					Vehicles[w][EngineS] = 1;
					Vehicles[w][LightS] = 1;
					Vehicles[w][VehGPS] = 0;
					Vehicles[w][DoorLS] = 0;
					Vehicles[w][HoodS] = 0;
					Vehicles[w][TrunkS] = 0;
					Vehicles[w][Temp] = 1;
					Vehicles[w][Health] = 1000;
					GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
					GetPlayerFacingAngle(playerid, PlayerInfo[playerid][FacingAngle]);
					CreateVehicle(PlayerInfo[playerid][AllEditingOptions3][1], PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ], PlayerInfo[playerid][FacingAngle], -1, -1, -1);
					SetVehicleParamsEx(w, 1, 1, 0, 0, 0, 0, 0);
					PutPlayerInVehicle(playerid, w, 0);
					format(message, sizeof(message), "* You now have 20 seconds to test drive the %s *", GetVehicleInformation(PlayerInfo[playerid][AllEditingOptions3][1]));
					ClientMessenger(playerid, "FFFFFF", 3, message);
					SetTimerEx("DealershipTestDrive", 20000, false, "ii", playerid, w);
					for(new b = 0; b < 51; b++){
						PlayerInfo[playerid][AllEditingOptions3][b] = 0;
					}
					PlayerInfo[playerid][AllEditingOptions4][1] = 1;
					PlayerInfo[playerid][AllEditingOptions2] = 0;
					PlayerInfo[playerid][AllEditingOptions] = 0;
					break;
				}
			}
		} else {
			ClientMessenger(playerid, "FF0000", 2, "You're already test driving a vehicle. You can not test drive another one until the time is up!");
		}
		
		
	} else if(!response && dialogid == 74){
		format(message, sizeof(message), "Are you sure you want to buy a %s?", GetVehicleInformation(PlayerInfo[playerid][AllEditingOptions3][1]));
		ShowPlayerDialog(playerid, 51, DIALOG_STYLE_MSGBOX, Dealerships[PlayerInfo[playerid][AllEditingOptions]][DealerName], message, "Yes", "No");
	
	
	} else if(response && dialogid == 51){
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `dealership_vehicles` WHERE `dealershipid`=%i AND `vehicleid`=%i LIMIT 1", PlayerInfo[playerid][AllEditingOptions], PlayerInfo[playerid][AllEditingOptions3][1]);
			mysql_query(MySQL, largequery);
			if((PlayerInfo[playerid][Money] - cache_get_field_content_int(0, "price")) >= 0){
				for(new a = 1; a <= (MAX_PLAYER_VEHICLES); a++){
					if(PlayerInfo[playerid][PVehs][a] == 0){
						PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - cache_get_field_content_int(0, "price"));
						ResetPlayerMoney(playerid);
						GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						GetPlayerFacingAngle(playerid, PlayerInfo[playerid][FacingAngle]);
						CreateVehicle(PlayerInfo[playerid][AllEditingOptions3][1], PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ], PlayerInfo[playerid][FacingAngle], -1, -1, -1);
						for(new w = 1; w <= sizeof(LastVehicleID); w++){
							if(LastVehicleID[w] == 0){
								LastVehicleID[w] = 1;
								Vehicles[w][Vehicle] = PlayerInfo[playerid][AllEditingOptions3][1];
								Vehicles[w][Faction] = 0;
								Vehicles[w][Color1] = -1;
								Vehicles[w][Color2] = -1;
								Vehicles[w][EngineS] = 1;
								Vehicles[w][LightS] = 1;
								Vehicles[w][VehGPS] = 0;
								Vehicles[w][DoorLS] = 0;
								Vehicles[w][HoodS] = 0;
								Vehicles[w][TrunkS] = 0;
								Vehicles[w][Temp] = 2;
								Vehicles[w][Health] = 1000;
								
								RedoGenerator:
								new licence[33];
								format(licence, 33, RandomPlateGenerator());
								format(Vehicles[w][VehLicence], 33, licence);
								new largequery2[144], largequery3[144], limit1, limit2;
								mysql_format(MySQL, largequery2, sizeof(largequery2), "SELECT * FROM `vehicles` WHERE `licenceplate`='%e' LIMIT 1", Vehicles[w][VehLicence]);
								mysql_query(MySQL, largequery2);
								limit1 = cache_num_rows();
								mysql_format(MySQL, largequery3, sizeof(largequery3), "SELECT * FROM `player_vehicles` WHERE `licenceplate`='%e' LIMIT 1", Vehicles[w][VehLicence]);
								mysql_query(MySQL, largequery3);
								limit2 = cache_num_rows();
								if(limit1 == 1 || limit2 == 1){
									goto RedoGenerator;
								}
								largequery2[0] = '\0';
								largequery3[0] = '\0';
								SetVehicleNumberPlate(w, Vehicles[w][VehLicence]);
								
								SetVehicleHealth(w, 1000);
								Vehicles[w][VDBID] = 0;
								Vehicles[w][VehPX] = PlayerInfo[playerid][PosX];
								Vehicles[w][VehPY] = PlayerInfo[playerid][PosY];
								Vehicles[w][VehPZ] = PlayerInfo[playerid][PosZ];
								Vehicles[w][VehPA] = PlayerInfo[playerid][FacingAngle];
								Vehicles[w][VehX] = PlayerInfo[playerid][PosX];
								Vehicles[w][VehY] = PlayerInfo[playerid][PosY];
								Vehicles[w][VehZ] = PlayerInfo[playerid][PosZ];
								Vehicles[w][VehA] = PlayerInfo[playerid][FacingAngle];
								SetVehicleParamsEx(w, Vehicles[w][EngineS], Vehicles[w][LightS], 0, Vehicles[w][DoorLS], Vehicles[w][HoodS], Vehicles[w][TrunkS], 0);
								SetVehicleToRespawn(w);
								
								if(PlayerInfo[playerid][PVehs][a] == 0){
									format(message, sizeof(message), "* You have bought a %s from %s and it is now in your vehicle slot %i *", GetVehicleInformation(PlayerInfo[playerid][AllEditingOptions3][1]), Dealerships[PlayerInfo[playerid][AllEditingOptions]][DealerName], a);
									ClientMessenger(playerid, "FFFFFF", 3, message);
									PlayerInfo[playerid][PVehsID][a] = w;
									PlayerInfo[playerid][PVehs][a] = PlayerInfo[playerid][AllEditingOptions3][a];
									format(message, sizeof(message), "INSERT INTO `player_vehicles` (`x`, `y`, `z`, `a`, `px`, `py`, `pz`, `pa`, `vehicle`, `slot`, `licenceplate`, `world`, `interior`, `playerid`) VALUES (");
									strcat(ReadAllMessages[playerid], message);
									format(message, sizeof(message), "'%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', ", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][FacingAngle], PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][FacingAngle]);
									strcat(ReadAllMessages[playerid], message);
									mysql_format(MySQL, message, sizeof(message), "'%i', '%i', '%e', '%i', '%i', '%i')", PlayerInfo[playerid][AllEditingOptions3][1], a, Vehicles[PlayerInfo[playerid][PVehsID][a]][VehLicence], GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), PlayerInfo[playerid][DBID]);
									strcat(ReadAllMessages[playerid], message);
									mysql_query(MySQL, ReadAllMessages[playerid]);
									ReadAllMessages[playerid][0] = '\0';
								}
								break;
							}
						}
						for(new b = 0; b < 51; b++){
							PlayerInfo[playerid][AllEditingOptions3][b] = 0;
							PlayerInfo[playerid][AllEditingOptions4][b] = 0;
						}
						PlayerInfo[playerid][AllEditingOptions2] = 0;
						PlayerInfo[playerid][AllEditingOptions] = 0;
						break;
					} else {
						ClientMessenger(playerid, "FF0000", 1, "You already own two vehicles!");
					}
				}
			} else {
				ClientMessenger(playerid, "FF0000", 3, "* You do not have enough money for this! *");
			}
	
	
	} else if(response && dialogid == 55){ // FOR EDITING INTERIORS
		if(listitem == 0){
			ShowPlayerDialog(playerid, 56, DIALOG_STYLE_INPUT, "Interior Edit Name", "{FFFFFF}You may change the name to anything within 30 characters!", "Next", "Exit");
		} else if(listitem == 1){
			ShowPlayerDialog(playerid, 57, DIALOG_STYLE_INPUT, "Interior Edit Owner", "{FFFFFF}You {FF0000}must{FFFFFF} use the user id, not their name!\nUse the command /getplayerid or /ogetplayerid to get the database id\nIf you want to set the owner to no one, change it to 0", "Next", "Exit");
		} else if(listitem == 2){
			ShowPlayerDialog(playerid, 81, DIALOG_STYLE_INPUT, "Interior Edit Faction1", "{FFFFFF}You may change the factionid for the first faction", "Next", "Exit");
		} else if(listitem == 3){
			ShowPlayerDialog(playerid, 82, DIALOG_STYLE_INPUT, "Interior Edit Faction2", "{FFFFFF}You may change the factionid for the second faction", "Next", "Exit");
		} else if(listitem == 4){
			ShowPlayerDialog(playerid, 83, DIALOG_STYLE_INPUT, "Interior Edit Faction3", "{FFFFFF}You may change the factionid for the third faction", "Next", "Exit");
		} else if(listitem == 5){
			if(InteriorInfo[PlayerInfo[playerid][AllEditingOptions]][IntWhiteList] == 0){
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `interiors` SET `faction_whitelist`=1 WHERE `id` = %i", PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has made interior %i a faction whitelist only interior", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions]);
				InteriorInfo[PlayerInfo[playerid][AllEditingOptions]][IntWhiteList] = 1;
			} else {
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `interiors` SET `faction_whitelist`=0 WHERE `id` = %i", PlayerInfo[playerid][AllEditingOptions]);
				format(message, sizeof(message), "%s has removed the faction whitelist for interior %i", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions]);
				InteriorInfo[PlayerInfo[playerid][AllEditingOptions]][IntWhiteList] = 0;
			}
			mysql_query(MySQL, largequery);
			ClientMessenger(playerid, "FF0000", 4, message);
			EditInterior(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else if(listitem == 6){
			ShowPlayerDialog(playerid, 88, DIALOG_STYLE_INPUT, "Interior Map Icon ID", "{FFFFFF}You may change the map icon to anything that SAMP allows.", "Next", "Exit");
		}
	
	
	} else if(response && dialogid == 88){ // FOR EDITING INTERIORS
		new mapid;
		if (!sscanf(inputtext, "i", mapid)) {
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `interiors` SET `map_icon_id`=%i WHERE `id` = %i", mapid, PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			
			format(message, sizeof(message), "%s has set interior %i map icon to %i", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions], mapid);
			
			new intid = PlayerInfo[playerid][AllEditingOptions];
			if(InteriorInfo[PlayerInfo[playerid][AllEditingOptions]][IntMapIconID] != 0){
				DestroyDynamicMapIcon(InteriorInfo[PlayerInfo[playerid][AllEditingOptions]][IntMapIcon]);
			}
			
			InteriorInfo[PlayerInfo[playerid][AllEditingOptions]][IntMapIconID] = mapid;
			
			if(mapid != 0){
				InteriorInfo[PlayerInfo[playerid][AllEditingOptions]][IntMapIcon] = CreateDynamicMapIcon(InteriorInfo[intid][IntX], InteriorInfo[intid][IntY], InteriorInfo[intid][IntZ], InteriorInfo[intid][IntMapIconID], -1, InteriorInfo[intid][IntStartWorld], InteriorInfo[intid][IntStartInt], -1, 500, MAPICON_GLOBAL);
			}
			
			ClientMessenger(playerid, "FF0000", 4, message);
			EditInterior(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else {
			EditInterior(playerid, PlayerInfo[playerid][AllEditingOptions]);
			format(message, sizeof(message), "You can not set the interior's map icon to %s", inputtext);
			ClientMessenger(playerid, "FF0000", 1, message);
		}
	
	} else if(!response && dialogid == 56 || !response && dialogid == 57 || !response && dialogid == 81 || !response && dialogid == 82 || !response && dialogid == 83 || !response && dialogid == 88){ // FOR EDITING INTERIORS
		EditInterior(playerid, PlayerInfo[playerid][AllEditingOptions]);
	
	
	} else if(!response && dialogid == 55){ // FOR EDITING INTERIORS
		PlayerInfo[playerid][AllEditingOptions] = 0;
	
	
	} else if(response && dialogid == 81){ // FOR EDITING INTERIOR FACTION1
		if(LastFactionID[strval(inputtext)] == 1 || strval(inputtext) == 0){
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `interiors` SET `faction1`=%i WHERE `id` = %i", strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			InteriorInfo[PlayerInfo[playerid][AllEditingOptions]][IntFaction] = strval(inputtext);
			if(strval(inputtext) != 0){
				format(message, sizeof(message), "%s has changed the first faction of interior %i to %s(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions], FactionInfo[strval(inputtext)][FactionLongName], strval(inputtext));
			} else {
				format(message, sizeof(message), "%s has removed the third faction of interior %i", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions]);
			}
			ClientMessenger(playerid, "FF0000", 4, message);
			EditInterior(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "That faction id does not exist!");
			EditInterior(playerid, PlayerInfo[playerid][AllEditingOptions]);
		}
		
		
	} else if(response && dialogid == 82){ // FOR EDITING INTERIOR FACTION2
		if(LastFactionID[strval(inputtext)] == 1 || strval(inputtext) == 0){
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `interiors` SET `faction2`=%i WHERE `id` = %i", strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			InteriorInfo[PlayerInfo[playerid][AllEditingOptions]][IntFaction2] = strval(inputtext);
			if(strval(inputtext) != 0){
				format(message, sizeof(message), "%s has changed the second faction of interior %i to %s(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions], FactionInfo[strval(inputtext)][FactionLongName], strval(inputtext));
			} else {
				format(message, sizeof(message), "%s has removed the third faction of interior %i", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions]);
			}
			ClientMessenger(playerid, "FF0000", 4, message);
			EditInterior(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "That faction id does not exist!");
			EditInterior(playerid, PlayerInfo[playerid][AllEditingOptions]);
		}
		
		
	} else if(response && dialogid == 83){ // FOR EDITING INTERIOR FACTION3
		if(LastFactionID[strval(inputtext)] == 1 || strval(inputtext) == 0){
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `interiors` SET `faction3`=%i WHERE `id` = %i", strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			InteriorInfo[PlayerInfo[playerid][AllEditingOptions]][IntFaction3] = strval(inputtext);
			if(strval(inputtext) != 0){
				format(message, sizeof(message), "%s has changed the third faction of interior %i to %s(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions], FactionInfo[strval(inputtext)][FactionLongName], strval(inputtext));
			} else {
				format(message, sizeof(message), "%s has removed the third faction of interior %i", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions]);
			}
			ClientMessenger(playerid, "FF0000", 4, message);
			EditInterior(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "That faction id does not exist!");
			EditInterior(playerid, PlayerInfo[playerid][AllEditingOptions]);
		}
		
		
	} else if(!response && dialogid == 84 || !response && dialogid == 85){ // For EDITING GAME SETTINGS /closed
		PlayerInfo[playerid][AllEditingOptions] = 0;
	
	
	} else if(response && dialogid == 85){ // For EDITING GAME SETTINGS VALUE
		if(strval(inputtext) != 0){
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `settings` SET `setting`=%i WHERE `id` = %i", strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			format(message, sizeof(message), "%s has changed game setting %s from %i to %i", str_replace("_", " ", GetPlayerNameEx(playerid)), GameSettings[PlayerInfo[playerid][AllEditingOptions]][GameSettingName], GameSettings[PlayerInfo[playerid][AllEditingOptions]][GameSetting], strval(inputtext));
			ClientMessenger(playerid, "FF0000", 4, message);
			GameSettings[PlayerInfo[playerid][AllEditingOptions]][GameSetting] = strval(inputtext);
			PlayerInfo[playerid][AllEditingOptions] = 0;
			EditGameSettings(playerid);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "Must be a number, and can not be zero!");
			PlayerInfo[playerid][AllEditingOptions] = 0;
			EditGameSettings(playerid);
		}
	
	
	} else if(response && dialogid == 86){ // FOR EDITING ARREST POINT SETTINGS
		if(listitem == 0){
			GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
			PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
			PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `arrestpoints` SET `xstart`='%f', `ystart`='%f', `zstart`='%f', `worldstart`=%i, `interiorstart`=%i WHERE `id` = %i", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			
			format(message, sizeof(message), "%s has changed the position of start arrestpoint(%i) to X:%f, Y:%f, Z:%f", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions], PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
			ClientMessenger(playerid, "FF0000", 4, message);
			
			ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APXStart] = PlayerInfo[playerid][PosX];
			ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APYStart] = PlayerInfo[playerid][PosY];
			ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APZStart] = PlayerInfo[playerid][PosZ];
			ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APInteriorStart] = PlayerInfo[playerid][InteriorID];
			ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APWorldStart] = PlayerInfo[playerid][WorldID];
			
			DestroyDynamic3DTextLabel(ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APTextStart]);
			DestroyDynamicPickup(ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APIconStart]);
			
			ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APIconStart] = CreateDynamicPickup(19605, 23, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APWorldStart], ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APInteriorStart], -1);
			format(message, 325, "{FFFFFF}%s (%i)\n/arrest", FactionInfo[ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APFaction]][FactionLongName], PlayerInfo[playerid][AllEditingOptions]);
			ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APTextStart] = CreateDynamic3DTextLabel(message, -1, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APWorldStart], ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APInteriorStart], -1);
			
			EditArrestPoints(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else if(listitem == 1){
			GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
			PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
			PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `arrestpoints` SET `xend`='%f', `yend`='%f', `zend`='%f', `worldend`=%i, `interiorend`=%i WHERE `id` = %i", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			
			format(message, sizeof(message), "%s has changed the position of end arrestpoint(%i) to X:%f, Y:%f, Z:%f", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions], PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
			ClientMessenger(playerid, "FF0000", 4, message);
			
			ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APXEnd] = PlayerInfo[playerid][PosX];
			ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APYEnd] = PlayerInfo[playerid][PosY];
			ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APZEnd] = PlayerInfo[playerid][PosZ];
			ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APInteriorEnd] = PlayerInfo[playerid][InteriorID];
			ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APWorldEnd] = PlayerInfo[playerid][WorldID];
			
			DestroyDynamicPickup(ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APIconEnd]);
			
			ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APIconEnd] = CreateDynamicPickup(19607, 23, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APWorldEnd], ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APInteriorEnd], -1);

			EditArrestPoints(playerid, PlayerInfo[playerid][AllEditingOptions]);
		
		} else if(listitem == 2){
			ShowPlayerDialog(playerid, 87, DIALOG_STYLE_INPUT, "Edit Arrestpoint Faction", "{FFFFFF}Enter a new factionid, players will still be able to arrest at any id.\nThis is just for announcments about arrests.", "Next", "Exit");
		}
	
	
	} else if(response && dialogid == 87){ // FOR EDITING NAME OF INTERIOR
	if(LastFactionID[strval(inputtext)] == 1){
		mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `arrestpoints` SET `faction`=%i WHERE `id` = %i", strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
		mysql_query(MySQL, largequery);
		
		format(message, sizeof(message), "%s has changed the faction of arrestpoint(%i) to %i", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions], strval(inputtext));
		ClientMessenger(playerid, "FF0000", 4, message);
		ArrestPointInfo[PlayerInfo[playerid][AllEditingOptions]][APFaction] = strval(inputtext);
		EditArrestPoints(playerid, PlayerInfo[playerid][AllEditingOptions]);
	} else {
		ClientMessenger(playerid, "FF0000", 1, "That faction does not exist!");
		EditArrestPoints(playerid, PlayerInfo[playerid][AllEditingOptions]);
	}
	
	
	} else if(!response && dialogid == 86){ // For EDITING GAME SETTINGS /closed
		PlayerInfo[playerid][AllEditingOptions] = 0;
		PlayerInfo[playerid][AllEditingOptions2] = 0;
	
	
	} else if(response && dialogid == 84){ // For EDITING GAME SETTINGS
		PlayerInfo[playerid][AllEditingOptions] = (listitem+1);
		ShowPlayerDialog(playerid, 85, DIALOG_STYLE_INPUT, GameSettings[(listitem+1)][GameSettingName], "{FFFFFF}Make sure what you're changing is approved, and is not retarded!", "Next", "Exit");


	} else if(response && dialogid == 56){ // FOR EDITING NAME OF INTERIOR
		if(strlen(inputtext) >= 1 && strlen(inputtext) <= 51){
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `interiors` SET `name`='%e' WHERE `id` = %i", inputtext, PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			format(InteriorInfo[PlayerInfo[playerid][AllEditingOptions]][IntName], 100, inputtext);
			format(message, sizeof(message), "%s has changed the name of interior %i to %s", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions], inputtext);
			ClientMessenger(playerid, "FF0000", 4, message);
			DestroyDynamic3DTextLabel(InteriorInfo[PlayerInfo[playerid][AllEditingOptions]][IntText]);
			new retardedid = PlayerInfo[playerid][AllEditingOptions];
			format(InteriorInfo[retardedid][IntTempText], 300, "%s (%i){FFFFFF}\n(/enter)", InteriorInfo[retardedid][IntName], (retardedid));
			InteriorInfo[retardedid][IntText] = CreateDynamic3DTextLabel(InteriorInfo[retardedid][IntTempText], -1, InteriorInfo[retardedid][IntX], InteriorInfo[retardedid][IntY], InteriorInfo[retardedid][IntZ], 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, InteriorInfo[retardedid][IntStartWorld], InteriorInfo[retardedid][IntStartInt], -1);
			EditInterior(playerid, retardedid);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You can not have less then 1 character, or more then 50 characters!");
			EditInterior(playerid, PlayerInfo[playerid][AllEditingOptions]);
		}
	
	
	} else if(response && dialogid == 67){ // FOR OBJECTS
		if(listitem == 1){
			ShowPlayerDialog(playerid, 68, DIALOG_STYLE_INPUT, "Edit Object", "{FFFFFF}Change the object model to another model", "Next", "Exit");
		} else if(listitem == 0){
			PlayerInfo[playerid][AllEditingOptions2] = 3;
			EditDynamicObject(playerid, ObjectInfo[PlayerInfo[playerid][AllEditingOptions]][ObjIcon]);
		}
	
	
	
	} else if(!response && dialogid == 67 || !response && dialogid == 68){ // FOR OBJECTS if they close it
		PlayerInfo[playerid][AllEditingOptions] = 0;
		PlayerInfo[playerid][AllEditingOptions2] = 0;
	
	
	} else if(response && dialogid == 68){ // FOR OBJECT CHANGING OBJECT MODEL
		format(message, sizeof(message), "%s has changed the objectid of object %i to %i", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions], strval(inputtext));
		ClientMessenger(playerid, "FF0000", 4, message);
		mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `objects` SET `object`=%i WHERE `id` = %i", strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
		mysql_query(MySQL, largequery);
		ObjectInfo[PlayerInfo[playerid][AllEditingOptions]][ObjObjID] = strval(inputtext);
		DestroyDynamicObject(ObjectInfo[PlayerInfo[playerid][AllEditingOptions]][ObjIcon]);
		new tempid = PlayerInfo[playerid][AllEditingOptions];
		ObjectInfo[tempid][ObjIcon] = CreateDynamicObject(ObjectInfo[tempid][ObjObjID], ObjectInfo[tempid][ObjX], ObjectInfo[tempid][ObjY], ObjectInfo[tempid][ObjZ], ObjectInfo[tempid][ObjRX], ObjectInfo[tempid][ObjRY], ObjectInfo[tempid][ObjRZ], ObjectInfo[tempid][ObjWorld], ObjectInfo[tempid][ObjInt], -1, 200.0, 200.0);
		EditObjectd(playerid, PlayerInfo[playerid][AllEditingOptions]);
	
	
	} else if(response && dialogid == 64){ // FOR FACTION LOCKERS /locker
		PlayerInfo[playerid][AllEditingOptions3][0] = 0;
		PlayerInfo[playerid][AllEditingOptions4][0] = 0;
		if(listitem == 0){
			if(PlayerInfo[playerid][TempInfo][23] == 0){
				//format(message, sizeof(message), "0x%sFF", FactionInfo[PlayerInfo[playerid][Faction]][FactionColor]);
				format(message, sizeof(message), "{C2A2DA}* %s takes his badge from his locker", str_replace("_", " ", GetPlayerNameEx(playerid)));
				ActionMessager(playerid, 15, message);
				PlayerInfo[playerid][TempInfo][23] = 1;
				SetPlayerHealth(playerid, 100);
				SetPlayerArmour(playerid, 100);
				PlayerInfo[playerid][HP] = 100;
				PlayerInfo[playerid][Armor] = 100;
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `faction_duty` = 1, `health` = '100', `armor` = '100' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][DBID]);
				SetPlayerFactionColor(playerid);
			} else {
				format(message, sizeof(message), "{C2A2DA}* %s places his badge in his locker", str_replace("_", " ", GetPlayerNameEx(playerid)));
				ActionMessager(playerid, 15, message);
				PlayerInfo[playerid][TempInfo][23] = 0;
				SetPlayerHealth(playerid, 100);
				SetPlayerArmour(playerid, 100);
				PlayerInfo[playerid][HP] = 100;
				PlayerInfo[playerid][Armor] = 100;
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `faction_duty` = 0, `health` = '100', `armor` = '100' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][DBID]);
				SetPlayerFactionColor(playerid);
			}
			mysql_query(MySQL, largequery);
			factionlocker(playerid);
		} else if(listitem == 1){
			new count = 0;
			strcat(ReadAllMessages[playerid], "Weapon Name\tPrice");
			for(new b = 1; b <= PlayerInfo[playerid][FactionLevel]; b++) {
				for(new c = 1; c <= MAX_FACTIONS_LOCKERS_ITEMS; c++) {
					if(LastFactionLockerItemsID[PlayerInfo[playerid][Faction]][b][c] != 0){
						count = count + 1;
						mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `factions_locker_items` WHERE `faction_id` = %i AND `rank_id` = %i LIMIT 1", PlayerInfo[playerid][Faction], b);
						mysql_query(MySQL, largequery);
						format(message, sizeof(message), "\n%s(%i)\t$%i", GetWeaponNameInfo(LastFactionLockerItemsID[PlayerInfo[playerid][Faction]][b][c]), LastFactionLockerItemsID[PlayerInfo[playerid][Faction]][b][c], cache_get_field_content_int(0, "price"));
						strcat(ReadAllMessages[playerid], message);
						PlayerInfo[playerid][AllEditingOptions3][count] = LastFactionLockerItemsID[PlayerInfo[playerid][Faction]][b][c];
						PlayerInfo[playerid][AllEditingOptions4][count] = cache_get_field_content_int(0, "price");
						message[0] = '\0';
					}
				}
			}
			if(strcmp(ReadAllMessages[playerid], "Weapon Name\tPrice")){
				ShowPlayerDialog(playerid, 65, DIALOG_STYLE_TABLIST_HEADERS, FactionInfo[PlayerInfo[playerid][Faction]][FactionLongName], ReadAllMessages[playerid], "Select", "Exit");
			} else {
				ClientMessenger(playerid, "FF0000", 2, "Your locker has no weapons for you at all!");
				factionlocker(playerid);
			}
			ReadAllMessages[playerid][0] = '\0';
		} else if(listitem == 2){
			new count = 0;
			strcat(ReadAllMessages[playerid], "Uniform\tRank");
			for(new b = 1; b <= PlayerInfo[playerid][FactionLevel]; b++) {
				mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `factions_skins` WHERE `faction_id` = %i AND `rank_id` = %i", PlayerInfo[playerid][Faction], b);
				mysql_query(MySQL, largequery);
				if(cache_num_rows() >= 1) {
					for(new c = 0; c < cache_num_rows(); c++) {
						count = count + 1;
						format(message, sizeof(message), "\n%i\t%s(%i)", cache_get_field_content_int(c, "skin_id"), AllFactionRanks[PlayerInfo[playerid][Faction]][cache_get_field_content_int(c, "rank_id")], cache_get_field_content_int(c, "rank_id"));
						strcat(ReadAllMessages[playerid], message);
						PlayerInfo[playerid][AllEditingOptions3][count] = cache_get_field_content_int(c, "skin_id");
						message[0] = '\0';
					}
				}
			}
			if(strcmp(ReadAllMessages[playerid], "Uniform\tRank")){
				ShowPlayerDialog(playerid, 66, DIALOG_STYLE_TABLIST_HEADERS, FactionInfo[PlayerInfo[playerid][Faction]][FactionLongName], ReadAllMessages[playerid], "Select", "Exit");
			} else {
				ClientMessenger(playerid, "FF0000", 2, "Your locker has no unforms for you at all!");
				factionlocker(playerid);
			}
			ReadAllMessages[playerid][0] = '\0';
		}
		
		
	} else if(response && dialogid == 65){ // IF THEY CHOOSE A WEAPON IN LOCKER MENU
		if((PlayerInfo[playerid][Money] - PlayerInfo[playerid][AllEditingOptions4][listitem+1]) >= 0){
			PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - PlayerInfo[playerid][AllEditingOptions4][listitem+1]);
			new slotid;
			if(PlayerInfo[playerid][AllEditingOptions3][listitem+1] == 0 || PlayerInfo[playerid][AllEditingOptions3][listitem+1] == 1){ // slot 0
				slotid = 0;
			} else if(PlayerInfo[playerid][AllEditingOptions3][listitem+1] >= 2 && PlayerInfo[playerid][AllEditingOptions3][listitem+1] <= 9){ // slot 1
				slotid = 1;
			} else if(PlayerInfo[playerid][AllEditingOptions3][listitem+1] >= 22 && PlayerInfo[playerid][AllEditingOptions3][listitem+1] <= 24){ // slot 2
				slotid = 2;
			} else if(PlayerInfo[playerid][AllEditingOptions3][listitem+1] >= 25 && PlayerInfo[playerid][AllEditingOptions3][listitem+1] <= 27){ // slot 3
				slotid = 3;
			} else if(PlayerInfo[playerid][AllEditingOptions3][listitem+1] >= 28 && PlayerInfo[playerid][AllEditingOptions3][listitem+1] <= 29 || PlayerInfo[playerid][AllEditingOptions3][listitem+1] == 32 ){ // slot 4
				slotid = 4;
			} else if(PlayerInfo[playerid][AllEditingOptions3][listitem+1] == 30 || PlayerInfo[playerid][AllEditingOptions3][listitem+1] == 31){ // slot 5
				slotid = 5;
			} else if(PlayerInfo[playerid][AllEditingOptions3][listitem+1] == 33 || PlayerInfo[playerid][AllEditingOptions3][listitem+1] == 34){ // slot 6
				slotid = 6;
			} else if(PlayerInfo[playerid][AllEditingOptions3][listitem+1] >= 35 && PlayerInfo[playerid][AllEditingOptions3][listitem+1] <= 38){ // slot 7
				slotid = 7;
			} else if(PlayerInfo[playerid][AllEditingOptions3][listitem+1] >= 16 && PlayerInfo[playerid][AllEditingOptions3][listitem+1] <= 18 || PlayerInfo[playerid][AllEditingOptions3][listitem+1] == 39){ // slot 8
				slotid = 8;
			} else if(PlayerInfo[playerid][AllEditingOptions3][listitem+1] >= 41 && PlayerInfo[playerid][AllEditingOptions3][listitem+1] <= 43){ // slot 9
				slotid = 9;
			} else if(PlayerInfo[playerid][AllEditingOptions3][listitem+1] >= 10 && PlayerInfo[playerid][AllEditingOptions3][listitem+1] <= 15){ // slot 10
				slotid = 10;
			} else if(PlayerInfo[playerid][AllEditingOptions3][listitem+1] == 44 || PlayerInfo[playerid][AllEditingOptions3][listitem+1] == 45){ // slot 11
				slotid = 11;
			}
			
			for(new a = 1; a <= MAX_SETTINGS; a++){
				format(message, 144, "Weapon_%i_Ammo", PlayerInfo[playerid][AllEditingOptions3][listitem+1]);
				if(!strcmp(GameSettings[a][GameSettingName], message)){
					GivePlayerWeapon(playerid, PlayerInfo[playerid][AllEditingOptions3][listitem+1], 1);
					PlayerInfo[playerid][WeaponsAmmo][slotid] = (PlayerInfo[playerid][WeaponsAmmo][slotid]+GameSettings[a][GameSetting]);
					PlayerInfo[playerid][Weapons][slotid] = PlayerInfo[playerid][AllEditingOptions3][listitem+1];
					SetPlayerAmmo(playerid, PlayerInfo[playerid][AllEditingOptions3][listitem+1], PlayerInfo[playerid][WeaponsAmmo][slotid]);
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_weapons` SET `weapon`=%i, `weapon_ammo` = %i WHERE `slot` = %i AND `playerid` = %i LIMIT 1",  PlayerInfo[playerid][AllEditingOptions3][listitem+1], GameSettings[a][GameSetting], slotid, PlayerInfo[playerid][DBID]);
					mysql_query(MySQL, largequery);
					break;
				}
			}
			
			ResetPlayerMoney(playerid);
			GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
			format(message, sizeof(message), "{C2A2DA}* %s reaches into his locker, grabbing out a %s", str_replace("_", " ", GetPlayerNameEx(playerid)), GetWeaponNameInfo(PlayerInfo[playerid][AllEditingOptions3][listitem+1]));
			ActionMessager(playerid, 15, message);
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
			mysql_query(MySQL, largequery);
			PlayerInfo[playerid][AllEditingOptions3][0] = '\0';
			PlayerInfo[playerid][AllEditingOptions4][0] = '\0';
			factionlocker(playerid);
		} else {
			ClientMessenger(playerid, "FF0000", 2, "You don't have enough money for that weapon!");
		}
	
	
	} else if(!response && dialogid == 65 || !response && dialogid == 64 || !response && dialogid == 66){ // IF THEY CLOSE THE ARMORY IN /locker
		PlayerInfo[playerid][AllEditingOptions3][0] = '\0';
		PlayerInfo[playerid][AllEditingOptions4][0] = '\0';
	
	
	} else if(response && dialogid == 66){ // FOR CHOOSING SKIN WHILE IN /locker
		PlayerInfo[playerid][Skin] = PlayerInfo[playerid][AllEditingOptions3][listitem+1];
		SetPlayerSkin(playerid,PlayerInfo[playerid][Skin]);
		mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `skin`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][Skin], PlayerInfo[playerid][DBID]);
		mysql_query(MySQL, largequery);
		format(message, sizeof(message), "{C2A2DA}* %s reaches into his locker, grabbing out a new uniform", str_replace("_", " ", GetPlayerNameEx(playerid)));
		ActionMessager(playerid, 15, message);
		PlayerInfo[playerid][AllEditingOptions3][0] = '\0';
		PlayerInfo[playerid][AllEditingOptions4][0] = '\0';
		factionlocker(playerid);
			
	
	} else if(response && dialogid == 57){ // FOR EDITING OWNER OF INTERIOR
		mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", strval(inputtext));
		mysql_query(MySQL, largequery);
		if(cache_num_rows() == 1 || strval(inputtext) == 0){
			new getname[MAX_PLAYER_NAME+1];
			cache_get_field_content(0, "name", getname);
			if(strval(inputtext) != 0){
				format(message, sizeof(message), "%s has changed the ownership of interior %i to %s(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions], getname, cache_get_row_int(0,0));
			} else {
				format(message, sizeof(message), "%s has changed the ownership of interior %i to NONE", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions]);
			}
			ClientMessenger(playerid, "FF0000", 4, message);
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `interiors` SET `owner`=%i WHERE `id` = %i", strval(inputtext), PlayerInfo[playerid][AllEditingOptions]);
			mysql_query(MySQL, largequery);
			InteriorInfo[PlayerInfo[playerid][AllEditingOptions]][IntOwner] = strval(inputtext);
			getname[0] = '\0';
			EditInterior(playerid, PlayerInfo[playerid][AllEditingOptions]);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "As much as you may want to believe, that database ID does not exist!");
			ClientMessenger(playerid, "FFFFFF", 3, "If you're trying to set it to no owner. Change the ID to 0");
			EditInterior(playerid, PlayerInfo[playerid][AllEditingOptions]);
		}

	} else if(!response && dialogid == 51){ // FOR DEALERSHIPS
		for(new b = 0; b < 51; b++){
			PlayerInfo[playerid][AllEditingOptions3][b] = 0;
		}
		format(message, sizeof(message), "{FFFFFF}Welcome to the {00FFFF}%s{FFFFFF} dealership!", Dealerships[PlayerInfo[playerid][AllEditingOptions]][DealerName]);
		ShowPlayerDialog(playerid, 49, DIALOG_STYLE_MSGBOX, Dealerships[PlayerInfo[playerid][AllEditingOptions]][DealerName], message, "Select Car", "Exit");
	} else if(!response && dialogid == 22){
		ClientMessenger(playerid, "FF0000", 1, "You have decided to exit on admin login. You will now be kicked!");
		SetTimerEx("delaykick", 500, false, "i", playerid);
	} else if(!response && dialogid == 12 || dialogid == 13 || dialogid == 14 || dialogid == 15 || dialogid == 16 || dialogid == 17 || dialogid == 18 || dialogid == 19 || dialogid == 20 || dialogid ==  21 || dialogid == 30 || dialogid == 31 || dialogid == 32 || dialogid == 33 || dialogid == 34){
		ClientMessenger(playerid, "FF0000", 1, "You have decided to exit roleplay test. You will now be kicked!");
		SetTimerEx("delaykick", 500, false, "i", playerid);
	} else if(!response && dialogid == 2 || dialogid == 1){
		ClientMessenger(playerid, "FF0000", 1, "You have decided to exit registration or login. You will now be kicked!");
		SetTimerEx("delaykick", 500, false, "i", playerid);
	}
	largequery[0] = '\0';
	message[0] = '\0';
	message2[0] = '\0';
	return 1;
}
// LAST ID USED 89
// NOTHING ID 99

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	new largequery[144], message[144];
	if(newkeys == KEY_RIGHT){
		/*
		if(PlayerInfo[playerid][ViewingCamera] != 0){
			PlayerInfo[playerid][ViewingCamera] = (PlayerInfo[playerid][ViewingCamera]+1);
			if(LastStreetCamID[PlayerInfo[playerid][ViewingCamera]] == 1){
				mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `streetcams` WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][ViewingCamera]);
				mysql_query(MySQL, largequery);
				TogglePlayerControllable(playerid, 0);
				SetPlayerVirtualWorld(playerid, cache_get_field_content_int(0, "world"));
				SetPlayerInterior(playerid, cache_get_field_content_int(0, "interior"));
				SetPlayerPos(playerid, cache_get_field_content_float(0, "x"), cache_get_field_content_float(0, "y"), cache_get_field_content_float(0, "z")-30);
				SetPlayerCameraPos(playerid, cache_get_field_content_float(0, "x"), cache_get_field_content_float(0, "y"), cache_get_field_content_float(0, "z"));
				SetPlayerCameraLookAt(playerid, cache_get_field_content_float(0, "tx"), cache_get_field_content_float(0, "ty"), cache_get_field_content_float(0, "tz"));
				format(message, sizeof(message), "* You are viewing Street Camera %i *", PlayerInfo[playerid][ViewingCamera]);
				ClientMessenger(playerid, "FFFF00", 3, message);
			} else {
				PlayerInfo[playerid][ViewingCamera] = 1;
				mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `streetcams` WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][ViewingCamera]);
				mysql_query(MySQL, largequery);
				TogglePlayerControllable(playerid, 0);
				SetPlayerVirtualWorld(playerid, cache_get_field_content_int(0, "world"));
				SetPlayerInterior(playerid, cache_get_field_content_int(0, "interior"));
				SetPlayerPos(playerid, cache_get_field_content_float(0, "x"), cache_get_field_content_float(0, "y"), cache_get_field_content_float(0, "z")-30);
				SetPlayerCameraPos(playerid, cache_get_field_content_float(0, "x"), cache_get_field_content_float(0, "y"), cache_get_field_content_float(0, "z"));
				SetPlayerCameraLookAt(playerid, cache_get_field_content_float(0, "tx"), cache_get_field_content_float(0, "ty"), cache_get_field_content_float(0, "tz"));
				format(message, sizeof(message), "* You are viewing Street Camera %i *", PlayerInfo[playerid][ViewingCamera]);
				ClientMessenger(playerid, "FFFF00", 3, message);
			}
		}
		*/
	} else if(newkeys == KEY_CROUCH ){
		if(IsPlayerInAnyVehicle(playerid)){
			for(new a = 1; a < sizeof(GateInfo); a++){
				if(IsPlayerInRangeOfPoint(playerid, GateInfo[a][GateRadius], GateInfo[a][GateX], GateInfo[a][GateY], GateInfo[a][GateZ]) && GateInfo[a][GateWorld] == GetPlayerVirtualWorld(playerid)){
					new pf = PlayerInfo[playerid][Faction];
					new pff = PlayerInfo[playerid][FakeFaction];
					new gf1 = GateInfo[a][GateFaction];
					new gf2 = GateInfo[a][GateFaction2];
					new gf3 = GateInfo[a][GateFaction3];
					// Checks to see if player is in car, then checks to see if if it has a faction on it
					if(!strcmp(GateInfo[a][GatePassword], "nil") && (gf1 == pf && gf1 != 0 || gf1 == pff && gf1 != 0 || gf2 == pf && gf2 != 0 || gf2 == pff && gf2 != 0 || gf3 == pf && gf3 != 0 || gf3 == pff && gf3 != 0)){
						if(GateInfo[a][GateLevel] <= PlayerInfo[playerid][Level]){
							if(GateInfo[a][GateOpen] == 0){
								GateInfo[a][GateOpen] = 1;
								MoveDynamicObject(GateInfo[a][GateIcon], GateInfo[a][GateEndX],GateInfo[a][GateEndY], GateInfo[a][GateEndZ], GateInfo[a][GateSpeed], GateInfo[a][GateEndRX], GateInfo[a][GateEndRY], GateInfo[a][GateEndRZ]);
							} else {
								GateInfo[a][GateOpen] = 0;
								MoveDynamicObject(GateInfo[a][GateIcon], GateInfo[a][GateX],GateInfo[a][GateY], GateInfo[a][GateZ], GateInfo[a][GateSpeed], GateInfo[a][GateRX], GateInfo[a][GateRY], GateInfo[a][GateRZ]);
							}
							if(GateInfo[a][GateAutoClose] != 0){
								SetTimerEx("autoclosegate", (GateInfo[a][GateAutoClose]*1000), false, "i", a);
							}
						}
					// if player is in car, and password is nil, and the gate has no factions, then open
					} else if(!strcmp(GateInfo[a][GatePassword], "nil") && (gf1 == 0 && gf2 == 0 && gf3 == 0)){
						if(GateInfo[a][GateLevel] <= PlayerInfo[playerid][Level]){
							if(GateInfo[a][GateOpen] == 0){
								GateInfo[a][GateOpen] = 1;
								MoveDynamicObject(GateInfo[a][GateIcon], GateInfo[a][GateEndX],GateInfo[a][GateEndY], GateInfo[a][GateEndZ], GateInfo[a][GateSpeed], GateInfo[a][GateEndRX], GateInfo[a][GateEndRY], GateInfo[a][GateEndRZ]);
							} else {
								GateInfo[a][GateOpen] = 0;
								MoveDynamicObject(GateInfo[a][GateIcon], GateInfo[a][GateX],GateInfo[a][GateY], GateInfo[a][GateZ], GateInfo[a][GateSpeed], GateInfo[a][GateRX], GateInfo[a][GateRY], GateInfo[a][GateRZ]);
							}
							if(GateInfo[a][GateAutoClose] != 0){
								SetTimerEx("autoclosegate", (GateInfo[a][GateAutoClose]*1000), false, "i", a);
							}
						}
					}
				}
			}
		}
	} else if(newkeys == KEY_YES){
		for(new a = 1; a < sizeof(GateInfo); a++){
			if(IsPlayerInRangeOfPoint(playerid, GateInfo[a][GateRadius], GateInfo[a][GateX], GateInfo[a][GateY], GateInfo[a][GateZ]) && GateInfo[a][GateWorld] == GetPlayerVirtualWorld(playerid)){
				new pf = PlayerInfo[playerid][Faction];
				new pff = PlayerInfo[playerid][FakeFaction];
				new pl = PlayerInfo[playerid][Level];
				new gf1 = GateInfo[a][GateFaction];
				new gf2 = GateInfo[a][GateFaction2];
				new gf3 = GateInfo[a][GateFaction3];
				new gl = GateInfo[a][GateLevel];
				// Checks to see if player is in car, then checks to see if if it has a faction on it
				if( !strcmp(GateInfo[a][GatePassword], "nil") && (gf1 == pf && gf1 != 0 || gf1 == pff && gf1 != 0 || gf2 == pf && gf2 != 0 || gf2 == pff && gf2 != 0 || gf3 == pf && gf3 != 0 || gf3 == pff && gf3 != 0) ) {
					if(gl <= pl){
						if(GateInfo[a][GateOpen] == 0){
							GateInfo[a][GateOpen] = 1;
							MoveDynamicObject(GateInfo[a][GateIcon], GateInfo[a][GateEndX],GateInfo[a][GateEndY], GateInfo[a][GateEndZ], GateInfo[a][GateSpeed], GateInfo[a][GateEndRX], GateInfo[a][GateEndRY], GateInfo[a][GateEndRZ]);
						} else {
							GateInfo[a][GateOpen] = 0;
							MoveDynamicObject(GateInfo[a][GateIcon], GateInfo[a][GateX],GateInfo[a][GateY], GateInfo[a][GateZ], GateInfo[a][GateSpeed], GateInfo[a][GateRX], GateInfo[a][GateRY], GateInfo[a][GateRZ]);
						}
						if(GateInfo[a][GateAutoClose] != 0){
							SetTimerEx("autoclosegate", (GateInfo[a][GateAutoClose]*1000), false, "i", a);
						}
					}
				// if player is in car, and password is nil, and the gate has no factions, then open
				} else if(!strcmp(GateInfo[a][GatePassword], "nil") && (gf1 == 0 && gf2 == 0 && gf3 == 0)) {
					if(gl <= pl){
						if(GateInfo[a][GateOpen] == 0){
							GateInfo[a][GateOpen] = 1;
							MoveDynamicObject(GateInfo[a][GateIcon], GateInfo[a][GateEndX],GateInfo[a][GateEndY], GateInfo[a][GateEndZ], GateInfo[a][GateSpeed], GateInfo[a][GateEndRX], GateInfo[a][GateEndRY], GateInfo[a][GateEndRZ]);
						} else {
							GateInfo[a][GateOpen] = 0;
							MoveDynamicObject(GateInfo[a][GateIcon], GateInfo[a][GateX],GateInfo[a][GateY], GateInfo[a][GateZ], GateInfo[a][GateSpeed], GateInfo[a][GateRX], GateInfo[a][GateRY], GateInfo[a][GateRZ]);
						}
						if(GateInfo[a][GateAutoClose] != 0){
							SetTimerEx("autoclosegate", (GateInfo[a][GateAutoClose]*1000), false, "i", a);
						}
					}
				}
			}
		}
	} else if(newkeys == KEY_SECONDARY_ATTACK){
		/*
		if(PlayerInfo[playerid][ViewingCamera] != 0){
			SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][WorldID]);
			SetPlayerInterior(playerid, PlayerInfo[playerid][InteriorID]);
			SetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
			PlayerInfo[playerid][ViewingCamera] = 0;
			TogglePlayerControllable(playerid,1);
			SetCameraBehindPlayer(playerid);
			ClientMessenger(playerid, "FFFF00", 3, "* You have turned off the street view *");
			format(message, sizeof(message), "{C2A2DA}* %s clicks the 'stop viewing street camera' button", str_replace("_", " ", GetPlayerNameEx(playerid)));
			ActionMessager(playerid, 25, message);
		}
		*/
	}
	if(PlayerInfo[playerid][TempInfo][16] == 1){
		if(newkeys == KEY_RIGHT){
			ApplyAnimation(playerid, "MISC", "GRAB_R", 5.0, 0, 1, 1, 0, 0, 1);
			foreach(Player, i)
			{
				GetPlayerPos(i, PlayerInfo[i][PosX], PlayerInfo[i][PosY], PlayerInfo[i][PosZ]);
				if(IsPlayerInRangeOfPoint(playerid, 2.0, PlayerInfo[i][PosX], PlayerInfo[i][PosY], PlayerInfo[i][PosZ]) && i != playerid){
					ApplyAnimation(i, "WUZI", "CS_Dead_Guy", 4.1, 0, 1, 1, 0, 10000, 1);
					PlayerInfo[i][TempInfo][4] = 1;
					format(message, sizeof(message), "%s has tazed you!", str_replace("_", " ", GetPlayerNameEx(playerid)));
					ClientMessenger(i, "FFFF00", 3, message);
					format(message, sizeof(message), "You have tazed %s!", str_replace("_", " ", GetPlayerNameEx(i)));
					ClientMessenger(playerid, "FFFF00", 3, message);
					KillTimer(PlayerInfo[i][TempInfo][5]);
					PlayerInfo[i][TempInfo][5] = SetTimerEx("untazeplayer", 10000, false, "i", i);
					SetTimerEx("tazedanimation", 250, false, "i", i);
					break;
				}
			}
		}
	}
	largequery[0] = '\0';   
	message[0] = '\0';  
	return 1;
}

ChecMDCPStats(playerid)
{
	ShowPlayerDialog(playerid,46, DIALOG_STYLE_LIST, "Profile Search", "Crimes\nInformation\nProperty", "Select", "Cancel");
}

CheckWarrantsMore(playerid, targetid)
{
	ReadAllMessages[playerid][0] = '\0';
	new largequery[256], message[250];
	if(PlayerInfo[playerid][MDCList] != 0){
		mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `warrants` WHERE `suspectid` = %i ORDER BY `id` DESC", targetid);
		mysql_query(MySQL, largequery);
		new totalwarrants = cache_get_row_count(), getreason[128], getcdate[128], getcname[MAX_PLAYER_NAME+1], crimesdisplay = 10, retardedfix = 10;
		for (new a = 0; a < totalwarrants; a++){
			if(a+PlayerInfo[playerid][MDCList] < crimesdisplay+PlayerInfo[playerid][MDCList]){
				mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `warrants` WHERE `suspectid` = %i ORDER BY `id` DESC", targetid);
				mysql_query(MySQL, largequery);
				cache_get_field_content(a+PlayerInfo[playerid][MDCList], "reason", getreason);
				cache_get_field_content(a+PlayerInfo[playerid][MDCList], "date", getcdate);
				mysql_format(MySQL, largequery, sizeof(largequery), "SELECT `name` FROM `accounts` WHERE `id` = %i LIMIT 1", cache_get_field_content_int(a+PlayerInfo[playerid][MDCList], "copid"));
				mysql_query(MySQL, largequery);
				cache_get_field_content(0, "name", getcname);
				if(totalwarrants > a+PlayerInfo[playerid][MDCList]){
					format(message, sizeof(message), "{FFFFFF}%i. [{FFFF00}%s{FFFFFF}] {FF0000}%s {FFFFFF}- %s\n", PlayerInfo[playerid][MDCList]+a+1, getcdate, getreason, str_replace("_", " ", getcname));
					strcat(ReadAllMessages[playerid], message);
				} else {
					retardedfix = (retardedfix-1);
				}
			}
		}
		if(retardedfix == 0){
			PlayerInfo[playerid][AllEditingOptions2] = targetid;
			ChecMDCPStats(playerid);
		} else {
			PlayerInfo[playerid][MDCList] = PlayerInfo[playerid][MDCList] + crimesdisplay;
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT `name` FROM `accounts` WHERE `id` = %i LIMIT 1", targetid);
			mysql_query(MySQL, largequery);
			cache_get_field_content(0, "name", getcname);
			format(message, sizeof(message), "Page[%i] %s", (PlayerInfo[playerid][MDCList]/crimesdisplay), getcname);
			ShowPlayerDialog(playerid, 26, DIALOG_STYLE_MSGBOX, message, ReadAllMessages[playerid], "Next", "Done");
		}
		ReadAllMessages[playerid][0] = '\0';
		getreason[0] = '\0';
		getcdate[0] = '\0';
		getcname[0] = '\0';
	} else {
		PlayerInfo[playerid][AllEditingOptions2] = targetid;
		PlayerInfo[playerid][MDCList] = 0;
		PlayerInfo[playerid][AllEditingOptions3][0] = '\0';
		ReadAllMessages[playerid][0] = '\0';
		ChecMDCPStats(playerid);
	}
	largequery[0] = '\0';
	message[0] = '\0';
}

CheckWarrants(playerid, targetid)
{
	ReadAllMessages[playerid][0] = '\0';
	new largequery[256], message[250];
	mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `warrants` WHERE `suspectid` = %i ORDER BY `id` DESC", targetid);
	mysql_query(MySQL, largequery);
	new totalwarrants = cache_get_row_count(), getreason[128], getcdate[128], getcname[MAX_PLAYER_NAME+1], crimesdisplay = 10;
	for (new a = 0; a < totalwarrants; a++){
		if(a < crimesdisplay){
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `warrants` WHERE `suspectid` = %i ORDER BY `id` DESC", targetid);
			mysql_query(MySQL, largequery);
			cache_get_field_content(a, "reason", getreason);
			cache_get_field_content(a, "date", getcdate);
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT `name` FROM `accounts` WHERE `id` = %i LIMIT 1", cache_get_field_content_int(a, "copid"));
			mysql_query(MySQL, largequery);
			cache_get_field_content(0, "name", getcname);
			format(message, sizeof(message), "{FFFFFF}%i. [{FFFF00}%s{FFFFFF}] {FF0000}%s {FFFFFF}- %s\n", a+1, getcdate, getreason, str_replace("_", " ", getcname));
			strcat(ReadAllMessages[playerid], message);
			PlayerInfo[playerid][MDCList] = 0;
		}
	}
	if(totalwarrants < crimesdisplay){
		PlayerInfo[playerid][AllEditingOptions2] = targetid;
		PlayerInfo[playerid][MDCList] = 0;
		mysql_format(MySQL, largequery, sizeof(largequery), "SELECT `name` FROM `accounts` WHERE `id` = %i LIMIT 1", targetid);
		mysql_query(MySQL, largequery);
		cache_get_field_content(0, "name", getcname);
		format(message, sizeof(message), "Page[1] %s", getcname);
		ShowPlayerDialog(playerid, 26, DIALOG_STYLE_MSGBOX, message, ReadAllMessages[playerid], "Done", "");
	} else {
		PlayerInfo[playerid][AllEditingOptions2] = targetid;
		PlayerInfo[playerid][MDCList] = crimesdisplay;
		mysql_format(MySQL, largequery, sizeof(largequery), "SELECT `name` FROM `accounts` WHERE `id` = %i LIMIT 1", targetid);
		mysql_query(MySQL, largequery);
		cache_get_field_content(0, "name", getcname);
		format(message, sizeof(message), "Page[1] %s", getcname);
		ShowPlayerDialog(playerid, 26, DIALOG_STYLE_MSGBOX, message, ReadAllMessages[playerid], "Next", "Done");
	}
	getreason[0] = '\0';
	largequery[0] = '\0';
	message[0] = '\0';
	getcdate[0] = '\0';
	getcname[0] = '\0';
	ReadAllMessages[playerid][0] = '\0';
}

SystemLogsInsert(playerid, detail[], thecmd[])
{
	new largequery[1000], Year, Month, Day, Hour, Minute, Second, pip[20];
	getdate(Year, Month, Day);
	gettime(Hour, Minute, Second);
	GetPlayerIp(playerid, pip, sizeof(pip));
	mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `system_logs` (`playerid`, `month`, `day`, `year`, `hour`, `minute`, `second`, `rname`, `fname`, `detail`, `command`, `ip`) VALUES ('%i', '%i', '%i', '%i', '%i', '%i', '%i', '%e', '%e', '%e', '%e', '%e')", PlayerInfo[playerid][DBID], Month, Day, Year, Hour, Minute, Second, PlayerInfo[playerid][RealName], PlayerInfo[playerid][FakeName], detail, thecmd, pip);
	mysql_query(MySQL, largequery);
	largequery[0] = '\0';
	pip[0] = '\0';
}

COMMAND:ah1(playerid, params[]) /* /adminhelp */
{
	if(PlayerInfo[playerid][Online] == 1) /* Player must be logged in to use commands */
	{   
		if(PlayerInfo[playerid][Admin] >= 1) {
			AdminHelp1(playerid);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not an administrator!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:ah2(playerid, params[]) /* /adminhelp */
{
	if(PlayerInfo[playerid][Online] == 1) /* Player must be logged in to use commands */
	{   
		if(PlayerInfo[playerid][Admin] >= 2) {
			AdminHelp2(playerid);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not an administrator!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:ah3(playerid, params[]) /* /adminhelp */
{
	if(PlayerInfo[playerid][Online] == 1) /* Player must be logged in to use commands */
	{   
		if(PlayerInfo[playerid][Admin] >= 3) {
			AdminHelp3(playerid);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not an administrator!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:ah4(playerid, params[]) /* /adminhelp */
{
	if(PlayerInfo[playerid][Online] == 1) /* Player must be logged in to use commands */
	{   
		if(PlayerInfo[playerid][Admin] >= 4) {
			AdminHelp4(playerid);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not an administrator!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:ah5(playerid, params[]) /* /adminhelp */
{
	if(PlayerInfo[playerid][Online] == 1) /* Player must be logged in to use commands */
	{   
		if(PlayerInfo[playerid][Admin] >= 5) {
			AdminHelp5(playerid);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not an administrator!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:ah6(playerid, params[]) /* /adminhelp */
{
	if(PlayerInfo[playerid][Online] == 1) /* Player must be logged in to use commands */
	{   
		if(PlayerInfo[playerid][Admin] >= 6) {
			AdminHelp6(playerid);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not an administrator!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:ah7(playerid, params[]) /* /adminhelp */
{
	if(PlayerInfo[playerid][Online] == 1) /* Player must be logged in to use commands */
	{   
		if(PlayerInfo[playerid][Admin] >= 7) {
			AdminHelp7(playerid);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not an administrator!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

AdminHelp1(playerid) // mod
{
	new aht[2500], ahm[144];
	format(ahm, 144, "{%s}/ah - {FFFFFF}Opens Adminhelpmenu\n",GetAdminRanksC(1));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/a - {FFFFFF}Admin Chat\n",GetAdminRanksC(1));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/skick - {FFFFFF}Silent kicks a player\n",GetAdminRanksC(1));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/sban - {FFFFFF}Silent bans a player\n",GetAdminRanksC(1));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/amsgs - {FFFFFF}Opens up admin messages\n",GetAdminRanksC(1));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/checkbansbyme - {FFFFFF}Allows you to check bans made by you\n",GetAdminRanksC(1));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/spec - {FFFFFF}Spectates a player\n",GetAdminRanksC(1));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}%s", GetAdminRanksC(1), GetAdminRanks(1));
	ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, ahm, aht, "Done", "");
	ahm[0] = '\0';
	aht[0] = '\0';
}

AdminHelp2(playerid) // junior
{
	new aht[2500], ahm[144];
	format(ahm, 144, "{%s}/kick - {FFFFFF}Kicks a player\n",GetAdminRanksC(2));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/ban - {FFFFFF}Bans a player\n",GetAdminRanksC(2));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/cnewbietag - {FFFFFF}Changed your newbie tag to a custom tag\n",GetAdminRanksC(2));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/listfactions - {FFFFFF}List all factions\n",GetAdminRanksC(2));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/checkfaction - {FFFFFF}Checks a faction for everyone who has leaderflag, and how many members it has.\n",GetAdminRanksC(2));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/setvw - {FFFFFF}Sets a player virutal world\n",GetAdminRanksC(2));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/checkban - {FFFFFF}Checks a banned player information\n",GetAdminRanksC(2));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/checkbanip - {FFFFFF}Checks a banned ip information\n",GetAdminRanksC(2));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/setpos - {FFFFFF}Sets a player position\n",GetAdminRanksC(2));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/checkbans - {FFFFFF}Checks a players ban history\n",GetAdminRanksC(2));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/ocheckbans - {FFFFFF}Offline checks a players ban history\n",GetAdminRanksC(2));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/getplayerid - {FFFFFF}Gets a player database id\n",GetAdminRanksC(2));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/ogetplayerid - {FFFFFF}Gets a player database id who is offline\n",GetAdminRanksC(2));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/gotocveh - {FFFFFF}Goes to a permanent(databaseid) vehicle\n",GetAdminRanksC(2));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/gotoveh - {FFFFFF}Goes to any vehicle id (non-database)\n",GetAdminRanksC(2));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/setskin - {FFFFFF}Sets a player skin\n",GetAdminRanksC(2));
	strcat(aht, ahm);	
	format(ahm, 144, "{%s}/goto - {FFFFFF}Goes to a player\n",GetAdminRanksC(2));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/amovegate - {FFFFFF}Moves a gate, not needing the password\n",GetAdminRanksC(2));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/nwarn - {FFFFFF}Warns a player on newbie chat\n",GetAdminRanksC(2));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/nmute - {FFFFFF}Mutes a player on newbie chat\n",GetAdminRanksC(2));
	strcat(aht, ahm);

	format(ahm, 144, "{%s}%s", GetAdminRanksC(2), GetAdminRanks(2));
	ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, ahm, aht, "Done", "");
	ahm[0] = '\0';
	aht[0] = '\0';
}

AdminHelp3(playerid) // general
{
	new aht[2500], ahm[144];
	format(ahm, 144, "{%s}/bring - {FFFFFF}Brings a player to you\n",GetAdminRanksC(3));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/veh - {FFFFFF}Creates a temp vehicle\n",GetAdminRanksC(3));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/respawnveh - {FFFFFF}Respawns a vehicle\n",GetAdminRanksC(3));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/nonewbie - {FFFFFF}Toggles newbie chat\n",GetAdminRanksC(3));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/playmusic - {FFFFFF}Plays music globally\n",GetAdminRanksC(3));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/giveweapon - {FFFFFF}Gives a player a weapon\n",GetAdminRanksC(3));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/noooc - {FFFFFF}Toggles ooc chat\n",GetAdminRanksC(3));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/gotoobject - {FFFFFF}Goes to a object id\n",GetAdminRanksC(3));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/gotohouse - {FFFFFF}Goes to a house id\n",GetAdminRanksC(3));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/gotobiz - {FFFFFF}Goes to a biz id\n",GetAdminRanksC(3));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/gotogate - {FFFFFF}Goes to a gate id\n",GetAdminRanksC(3));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/gotoint - {FFFFFF}Goes to a interior id\n",GetAdminRanksC(3));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/gotodmv - {FFFFFF}Goes to a dmv id\n",GetAdminRanksC(3));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/bringpveh - {FFFFFF}Brings a player vehicle slot id\n",GetAdminRanksC(3));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/gotolocker - {FFFFFF}Goes to a faction locker id\n",GetAdminRanksC(3));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/gotodealer - {FFFFFF}Goes to a dealership id\n",GetAdminRanksC(3));
	strcat(aht, ahm);

	format(ahm, 144, "{%s}%s", GetAdminRanksC(3), GetAdminRanks(3));
	ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, ahm, aht, "Done", "");
	ahm[0] = '\0';
	aht[0] = '\0';
}

AdminHelp4(playerid) // senior 
{
	new aht[2500], ahm[144];
	format(ahm, 144, "{%s}/setmoney - {FFFFFF}Sets a player money\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/osetmoney - {FFFFFF}Sets a player money who is offline\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/checkmoney - {FFFFFF}Checks a player money\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/ocheckmoney - {FFFFFF}Checks a player money who is offline\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/cveh - {FFFFFF}Creates a permanent vehicle\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deletecveh - {FFFFFF}Deletes a permanent vehicle\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/movecveh - {FFFFFF}Moves a permanent vehicle\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/setfname - {FFFFFF}Sets your fake name\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/osetbankmoney - {FFFFFF}Sets a players bank money who is offline\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/setbankmoney - {FFFFFF}Sets a players bank money\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/setplayercarslot - {FFFFFF}Sets a player car slot to vehicle\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makeint - {FFFFFF}Makes a interior\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/moveint - {FFFFFF}Moves a interior\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deleteint - {FFFFFF}Deletes a interior\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/editint - {FFFFFF}Edits a interior\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/moveintintpos - {FFFFFF}Moves a interior, interiors position\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/setlevel - {FFFFFF}Sets a player level\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/setrespectpoints - {FFFFFF}Sets a player respect points\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makegate - {FFFFFF}Makes a gate\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/editgate - {FFFFFF}Edits a gate\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deletegate - {FFFFFF}Deletes a gate\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/gateinfo - {FFFFFF}Find the closest gate within 15 feet\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/givetiki - {FFFFFF}Gives a player a tiki\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/maketiki - {FFFFFF}Makes a tiki\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deletetiki - {FFFFFF}Deletes a tiki\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deletetikis - {FFFFFF}Deletes all tikis\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/unban - {FFFFFF}Unbans a player\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makeobject - {FFFFFF}Makes an object\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/editobject - {FFFFFF}Edits an object\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deleteobject - {FFFFFF}Deletes an objct\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/objectinfo - {FFFFFF}Finds the closest object within 15 feet\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/getip - {FFFFFF}Gets a players IP address\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/ogetip - {FFFFFF}Gets a offline players IP address\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/setweather - {FFFFFF}Sets weather for all or a specific player\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/unbandate - {FFFFFF}Sets a unban date for a banned player\n",GetAdminRanksC(4));
	strcat(aht, ahm);	
	format(ahm, 144, "{%s}/setlicenses - {FFFFFF}Sets a player's licenses\n",GetAdminRanksC(4));
	strcat(aht, ahm);
	
	format(ahm, 144, "{%s}%s", GetAdminRanksC(4), GetAdminRanks(4));
	ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, ahm, aht, "Done", "");
	ahm[0] = '\0';
	aht[0] = '\0';
}

AdminHelp5(playerid)
{
	new aht[2500], ahm[144];
	format(ahm, 144, "{%s}/makeleader - {FFFFFF}Makes a player a faction leader\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/addfactionskin - {FFFFFF}Adds a skin to a faction for a specific rank\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makehelper - {FFFFFF}Makes a player a helper\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/setbizstocks - {FFFFFF}Sets a biz stocks\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/movebizintpos - {FFFFFF}Moves a biz interior position\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makebiz - {FFFFFF}Makes a biz\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deletebiz - {FFFFFF}Deletes a biz\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/movebiz - {FFFFFF}Moves a biz\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/checkfactionskins - {FFFFFF}Checks faction skins\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deletefactionskin - {FFFFFF}Deletes a faction skin\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/editfaction - {FFFFFF}Edits a faction\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makehouse - {FFFFFF}Makes a house\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deletehouse - {FFFFFF}Deletes a house\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/movehouse - {FFFFFF}Moves a house\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/movehouseintpos - {FFFFFF}Moves a house interior position\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makeatm - {FFFFFF}Makes an ATM\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deleteatm - {FFFFFF}Deletes an ATM\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/moveatm - {FFFFFF}Moves an ATM\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makestreetcam - {FFFFFF}Makes a LEO street camera\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/editstreetcamtarget - {FFFFFF}Edits a LEO street cameras looking position\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/checkstreetcam - {FFFFFF}Checks a street camera\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/addrestsurname - {FFFFFF}Adds a restricted lastname (player must be online)\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/removerestsurname - {FFFFFF}Removes a restricted lastname\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/checkrestsurname - {FFFFFF}Checks the restricted surnames list\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makefactionlocker - {FFFFFF}Makes a faction locker\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/movefactionlocker - {FFFFFF}Moves a faction locker\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/addlockeritem - {FFFFFF}Adds a locker item\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deletelockeritem - {FFFFFF}Deletes a locker item\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deletefactionlocker - {FFFFFF}Deletes a faction locker\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/getfactionlocker - {FFFFFF}Gets the ID of a faction locker\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deletestreetcam - {FFFFFF}Delets a LEO street camera\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makearrestpoint - {FFFFFF}Makes an arrest point for LEO factions\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/editarrestpoint - {FFFFFF}Edits an arrest point for LEO factions\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makearrestpointzone - {FFFFFF}Makes an arrest point zone for arrest point ids\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deletearrestpoint - {FFFFFF}Delete an arrest point. (Deleting this, will delete the zones)\n",GetAdminRanksC(5));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deletearrestpointzone - {FFFFFF}Delete an arrest point zone\n",GetAdminRanksC(5));
	strcat(aht, ahm);

	format(ahm, 144, "{%s}%s", GetAdminRanksC(5), GetAdminRanks(5));
	ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, ahm, aht, "Done", "");
	ahm[0] = '\0';
	aht[0] = '\0';
}

AdminHelp6(playerid)
{
	new aht[2500], ahm[144];
	format(ahm, 144, "{%s}/makeadmin - {FFFFFF}Makes a player an admin\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makefactionmod - {FFFFFF}Makes a player a faction moderator\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makejob - {FFFFFF}Makes a job location\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/movejob - {FFFFFF}Moves a job location\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deletejob - {FFFFFF}Deletes a job location\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makedealer - {FFFFFF}Makes a dealership\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/editdealer - {FFFFFF}Edits a dealership\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/adddealerveh - {FFFFFF}Adds a dealership vehicle to specific dealership\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deletedealerveh - {FFFFFF}Deletes a dealership vehicle from a specific dealership\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deletedealer - {FFFFFF}Deletes a dealership\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/movedealer - {FFFFFF}Moves a dealership\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makepropertymod - {FFFFFF}Makes a player a property moderator\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makevip - {FFFFFF}Makes a player a vip\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makedmv - {FFFFFF}Makes a DMV location\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/movedmv - {FFFFFF}Moves a DMV location\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deletedmv - {FFFFFF}Deletes a DMV location\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/movedmvintpos - {FFFFFF}Moves a DMV interior position\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makedmvtestpos - {FFFFFF}Makes a DMV vehicle test position\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deletedmvtestpos - {FFFFFF}Deletes a DMV vehicle test postion id\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/gotodmvtestpos - {FFFFFF}Goes to a DMV vehicle test position id\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/editgamesettings - {FFFFFF}Edits the server game settings\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/checkdealervehs - {FFFFFF}Checks a dealerships vehicles \n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makefaction - {FFFFFF}Makes a faction\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/editfactionranks - {FFFFFF}Edits a factions ranks\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deletefaction - {FFFFFF}Deletes a faction\n",GetAdminRanksC(6));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/editfaction - {FFFFFF}Edits a faction\n",GetAdminRanksC(6));
	strcat(aht, ahm);

	format(ahm, 144, "{%s}%s", GetAdminRanksC(6), GetAdminRanks(6));
	ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, ahm, aht, "Done", "");
	ahm[0] = '\0';
	aht[0] = '\0';
}

AdminHelp7(playerid)
{
	new aht[2500], ahm[144];
	format(ahm, 144, "{%s}/makeadmin - {FFFFFF}Makes a player an admin (this one can make community owners)\n",GetAdminRanksC(7));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makeairportft - {FFFFFF}Makes an airport fast travel location position\n",GetAdminRanksC(7));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deleteairportft - {FFFFFF}Delets an airport fast travel location position\n",GetAdminRanksC(7));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/makehospital - {FFFFFF}Makes a hospital\n",GetAdminRanksC(7));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/movehospital - {FFFFFF}Moves a hospital\n",GetAdminRanksC(7));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/deletehospital - {FFFFFF}Delets a hospital\n",GetAdminRanksC(7));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/movehospitalcamera - {FFFFFF}Moves a hospital camera look at position\n",GetAdminRanksC(7));
	strcat(aht, ahm);
	format(ahm, 144, "{%s}/edithospital - {FFFFFF}Edits a hospitals name\n",GetAdminRanksC(7));
	strcat(aht, ahm);

	format(ahm, 144, "{%s}%s", GetAdminRanksC(7), GetAdminRanks(7));
	ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, ahm, aht, "Done", "");
	ahm[0] = '\0';
	aht[0] = '\0';
}

adminhelpmenu(playerid)
{
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			format(message, sizeof(message), "{FFFFFF}~ ~ {%s}Admin Help{FFFFFF} ~ ~", GetAdminRanksC(PlayerInfo[playerid][Admin]));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF}: /ah1,  /ah,  /adminhelp,  /a,  /skick,  /sban,  /amsgs,  /checkbansbyme,  /spec", GetAdminRanksC(1), GetAdminRanks(1));
			SendClientMessage(playerid, -1, message);
			SendClientMessage(playerid, -1, "{FFFF00}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
		}
		if(PlayerInfo[playerid][Admin] >= 2) {
			format(message, sizeof(message), "{%s}%s{FFFFFF} /ah2,  /kick,  /ban,  /cnewbietag,  /listfactions,  /checkfaction,  /setvw", GetAdminRanksC(2), GetAdminRanks(2));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /checkban,  /checkbanip,  /setpos,  /checkbans,  /ocheckbans,  /getplayerid", GetAdminRanksC(2), GetAdminRanks(2));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /ogetplayerid,  /gotocveh,  /gotoveh,  /setskin,  /goto,  /amovegate", GetAdminRanksC(2), GetAdminRanks(2));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /nwarn, /nmute", GetAdminRanksC(2), GetAdminRanks(2));
			SendClientMessage(playerid, -1, message);
			SendClientMessage(playerid, -1, "{FFFF00}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
		}
		if(PlayerInfo[playerid][Admin] >= 3) {
			format(message, sizeof(message), "{%s}%s{FFFFFF} /ah3,  /bring,  /veh,  /respawnveh,  /nonewbie,  /playmusic,  /giveweapon,  /noooc", GetAdminRanksC(3), GetAdminRanks(3));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /gotoobject,  /gotohouse,  /gotobiz,  /gotogate,  /gotoint,  /gotodmv,  /bringpveh", GetAdminRanksC(3), GetAdminRanks(3));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /gotolocker,  /gotodealer", GetAdminRanksC(3), GetAdminRanks(3));
			SendClientMessage(playerid, -1, message);
			SendClientMessage(playerid, -1, "{FFFF00}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
		}
		if(PlayerInfo[playerid][Admin] >= 4) {
			format(message, sizeof(message), "{%s}%s{FFFFFF} /ah4,  /setmoney,  /osetmoney,  /checkmoney,  /ocheckmoney,  /cveh,  /deletecveh,  /movecveh", GetAdminRanksC(4), GetAdminRanks(4));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /setfname,  /osetbankmoney,  /setbankmoney,  /setplayercarslot,  /makeint,  /moveint", GetAdminRanksC(4), GetAdminRanks(4));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /deleteint,  /editint,  /moveintintpos,  /setlevel,  /setrespectpoints,  /makegate", GetAdminRanksC(4), GetAdminRanks(4));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /editgate,  /deletegate,  /gateinfo,  /givetiki,  /maketiki,  /deletetiki, /setlicenses", GetAdminRanksC(4), GetAdminRanks(4));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /deletetikis,  /unban,  /makeobject,  /editobject,  /deleteobject,  /objectinfo,", GetAdminRanksC(4), GetAdminRanks(4));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /getip,  /ogetip,  /setweather,  /unbandate", GetAdminRanksC(4), GetAdminRanks(4));
			SendClientMessage(playerid, -1, message);
			SendClientMessage(playerid, -1, "{FFFF00}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
		}
		if(PlayerInfo[playerid][Admin] >= 5) {
			format(message, sizeof(message), "{%s}%s{FFFFFF} /ah5,  /makeleader,  /addfactionskin,  /makehelper,  /setbizstocks,  /movebizintpos", GetAdminRanksC(5), GetAdminRanks(5));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /makebiz,  /deletebiz,  /movebiz,  /checkfactionskins,  /deletefactionskin", GetAdminRanksC(5), GetAdminRanks(5));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /editfaction,  /makehouse,  /deletehouse,  /movehouse,  /movehouseintpos,  /makeatm", GetAdminRanksC(5), GetAdminRanks(5));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /deleteatm,  /moveatm,  /makestreetcam,  /editstreetcamtarget,  /checkstreetcam", GetAdminRanksC(5), GetAdminRanks(5));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /addrestsurname,  /removerestsurname,  /checkrestsurname,  /makefactionlocker", GetAdminRanksC(5), GetAdminRanks(5));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /movefactionlocker,  /addlockeritem,  /deletelockeritem,  /deletefactionlocker", GetAdminRanksC(5), GetAdminRanks(5));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /getfactionlocker,  /deletestreetcam,  /makearrestpoint,  /editarrestpoint", GetAdminRanksC(5), GetAdminRanks(5));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /makearrestpointzone,  /deletearrestpoint,  /deletearrestpointzone", GetAdminRanksC(5), GetAdminRanks(5));
			SendClientMessage(playerid, -1, message);
			
			SendClientMessage(playerid, -1, "{FFFF00}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
		}
		if(PlayerInfo[playerid][Admin] >= 6) {
			format(message, sizeof(message), "{%s}%s{FFFFFF} /ah6,  /makeadmin,  /makefactionmod,  /makejob,  /movejob,  /deletejob,  /makedealer", GetAdminRanksC(6), GetAdminRanks(6));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /editdealer,  /adddealerveh,  /deletedealerveh,  /deletedealer,  /movedealer", GetAdminRanksC(6), GetAdminRanks(6));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /makepropertymod,  /makevip,  /makedmv,  /movedmv,  /deletedmv,  /movedmvintpos", GetAdminRanksC(6), GetAdminRanks(6));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /makedmvtestpos,  /deletedmvtestpos,  /gotodmvtestpos,  /editgamesettings", GetAdminRanksC(6), GetAdminRanks(6));
			SendClientMessage(playerid, -1, message);           
			format(message, sizeof(message), "{%s}%s{FFFFFF} /checkdealervehs,  /makefaction,  /editfactionranks,  /deletefaction,  /editfaction", GetAdminRanksC(6), GetAdminRanks(6));
			SendClientMessage(playerid, -1, message);
			SendClientMessage(playerid, -1, "{FFFF00}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
		}
		if(PlayerInfo[playerid][Admin] >= 7) {
			format(message, sizeof(message), "{%s}%s{FFFFFF} /ah7,  /makeadmin,  /makeairportft,  /deleteairportft,  /makehospital,  /movehospital", GetAdminRanksC(7), GetAdminRanks(7));
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "{%s}%s{FFFFFF} /deletehospital,  /movehospitalcamera,  /edithospital", GetAdminRanksC(7), GetAdminRanks(7));
			SendClientMessage(playerid, -1, message);
			SendClientMessage(playerid, -1, "{FFFF00}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
		}
		if(PlayerInfo[playerid][FactionModerator] >= 1) {
			SendClientMessage(playerid, -1, "{FF8C00}Faction Moderator{FFFFFF} /makeleader,  /makestreetcam,  /editstreetcamtarget,  /checkstreetcam");
			SendClientMessage(playerid, -1, "{FF8C00}Faction Moderator{FFFFFF} /getfactionlocker,  /deletestreetcam,  /gotolocker");
			SendClientMessage(playerid, -1, "{FFFF00}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
		} 
		if(PlayerInfo[playerid][FactionModerator] >= 2) {
			SendClientMessage(playerid, -1, "{FF8C00}Faction Director{FFFFFF} /makefaction,  /editfactionranks,  /addfactionskin,  /deletefaction,  /editfaction");
			SendClientMessage(playerid, -1, "{FF8C00}Faction Director{FFFFFF} /checkfactionskins,  /deletefactionskin,  /makefactionmod,  /makefactionlocker");
			SendClientMessage(playerid, -1, "{FF8C00}Faction Director{FFFFFF} /movefactionlocker,  /addlockeritem,  /deletelockeritem,  /deletefactionlocker");
			SendClientMessage(playerid, -1, "{FF8C00}Faction Director{FFFFFF} /makearrestpoint,  /editarrestpoint,  /makearrestpointzone,  /deletearrestpoint");
			SendClientMessage(playerid, -1, "{FF8C00}Faction Director{FFFFFF} /deletearrestpointzone");
			SendClientMessage(playerid, -1, "{FFFF00}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
		}
		if(PlayerInfo[playerid][PropertyModerator] >= 1) {
			SendClientMessage(playerid, -1, "{800080}Property Moderator{FFFFFF} /makeint,  /moveint,  /deleteint,  /moveintintpos,  /editint");
			SendClientMessage(playerid, -1, "{800080}Property Moderator{FFFFFF} /makehouse,  /movehouse,  /deletehouse,  /movehouseintpos");
			SendClientMessage(playerid, -1, "{800080}Property Moderator{FFFFFF} /makegate,  /editgate,  /deletegate,  /gateinfo,  /amovegate");
			SendClientMessage(playerid, -1, "{800080}Property Moderator{FFFFFF} /makeatm,  /moveatm,  /deleteatm,  /makeobject,  /deleteobject");
			SendClientMessage(playerid, -1, "{800080}Property Moderator{FFFFFF} /editobject,  /objectinfo,  /gotoobject,  /gotohouse,  /gotobiz");
			SendClientMessage(playerid, -1, "{800080}Property Moderator{FFFFFF} /gotogate,  /gotoint,  /gotohospital");
			SendClientMessage(playerid, -1, "{FFFF00}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
		} 
		if(PlayerInfo[playerid][PropertyModerator] >= 2) {
			SendClientMessage(playerid, -1, "{800080}Property Moderator{FFFFFF} /makepropertymod,  /makebiz,  /movebiz,  /deletebiz,  /movebizintpos");
			SendClientMessage(playerid, -1, "{FFFF00}- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");
		}
		message[0] = '\0';
}

helperhelpmenu(playerid)
{
	if(PlayerInfo[playerid][Helper] == 0) {
		SendClientMessage(playerid, -1, "{FF0000}SERVER{FFFFFF}: You are not a helper!");
	}
	if(PlayerInfo[playerid][Helper] > 0) {
		SendClientMessage(playerid, -1, "{FFFFFF}~ ~ {00FFFF}Helper Help{FFFFFF} ~ ~"); /* The like table starter IG */
		SendClientMessage(playerid, -1, "{00FFFF}Helper:{FFFFFF} /hc, /nmute, /nwarn, /nrw");
	}
	if(PlayerInfo[playerid][Helper] > 1) {
		SendClientMessage(playerid, -1, "{00FFFF}Senior Helper:{FFFFFF} /nonewbie");
	}
	if(PlayerInfo[playerid][Helper] > 2) {
		SendClientMessage(playerid, -1, "{00FFFF}Head Helper:{FFFFFF} /makehelper");
	}
	if(PlayerInfo[playerid][Helper] > 3) {
		SendClientMessage(playerid, -1, "{00FFFF}Director of Helpers:{FFFFFF} /makehelper");
	}
}


accounthelpmenu(playerid)
{
	SendClientMessage(playerid, -1, "{FFFFFF}~ ~ Account Help ~ ~");
	SendClientMessage(playerid, -1, "/changepass,  /signcheck,  /buylevel,  /lastlogin,  /togglemusic");
	SendClientMessage(playerid, -1, "/me,  /do,  /newb,  /b,  /s,  /low,  /id,  /factions,  /families");
}

viphelpmenu(playerid)
{
	SendClientMessage(playerid, -1, "{FFFFFF}~ ~ VIP Help ~ ~");
	SendClientMessage(playerid, -1, "/vip,  /viptime");
}

businesshelpmenu(playerid)
{
	SendClientMessage(playerid, -1, "{FFFFFF}~ ~ Business Help ~ ~");
	SendClientMessage(playerid, -1, "/buybiz,  /sellbiztobank,  /changemybizprice,  /checkmybiz,  /takebizmoney");
}

househelpmenu(playerid)
{
	SendClientMessage(playerid, -1, "{FFFFFF}~ ~ House Help ~ ~");
	SendClientMessage(playerid, -1, "/buyhouse,  /sellhousetobank,  /sethousetag,  /lockhouse");
}

animationhelpmenu(playerid)
{
	SendClientMessage(playerid, -1, "{FFFFFF}~ ~ Animation Help ~ ~");
	SendClientMessage(playerid, -1, "/wave");
}

generalhelpmenu(playerid)
{
	SendClientMessage(playerid, -1, "{FFFFFF}~ ~ General Help ~ ~");
	SendClientMessage(playerid, -1, "/atm,  /gps,  /propose,  /withdraw,  /deposit,  /licenses,  /airportfasttravel");
}

gatehelpmenu(playerid)
{
	SendClientMessage(playerid, -1, "{FFFFFF}~ ~ Gate Help ~ ~");
	SendClientMessage(playerid, -1, " /movegate,  /changegatepassword");
}

vehiclehelpmenu(playerid)
{
	SendClientMessage(playerid, -1, "{FFFFFF}~ ~ Vehicle Help ~ ~");
	SendClientMessage(playerid, -1, "/engine,  /hood,  /lights,  /trunk,  /lock,  /park,  /dealership");
	SendClientMessage(playerid, -1, "/buycustomlicenceplate,  /taketest,  /installgps,  /trackcar");
}

jobhelpmenu(playerid)
{
	new message[128];
	format(message, sizeof(message), "{FFFFFF}~ ~ Job [%s] Help ~ ~", JobNames(PlayerInfo[playerid][Job]));
	SendClientMessage(playerid, -1, message);
	SendClientMessage(playerid, -1, JobCmds(PlayerInfo[playerid][Job]));
	message[0] = '\0';
}

familyhelpmenu(playerid)
{
	if(PlayerInfo[playerid][Faction] != 0) {
		if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 1) {
			new message[128], message2[128];
			format(message, sizeof(message), "{FFFFFF}~ ~ {%s}%s Help{FFFFFF} ~ ~", FactionInfo[PlayerInfo[playerid][Faction]][FactionColor], FactionInfo[PlayerInfo[playerid][Faction]][FactionShortName]);
			SendClientMessage(playerid, -1, message);
			format(message, sizeof(message), "/f");
			strcat(message2, message);
			SendClientMessage(playerid, -1, message2);
			message[0] = '\0';
			message2[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a family!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You are not in a family!");
	}
}

factionhelpmenu(playerid)
{
	new message[128], message2[128];
	format(message, sizeof(message), "{FFFFFF}~ ~ {%s}%s Help{FFFFFF} ~ ~", FactionInfo[PlayerInfo[playerid][Faction]][FactionColor], FactionInfo[PlayerInfo[playerid][Faction]][FactionShortName]);
	SendClientMessage(playerid, -1, message);
	if(PlayerInfo[playerid][FactionLeader] == 1) {
		SendClientMessage(playerid, -1, "LF: /invite, /uninvite, /giverank");
	}
	format(message, sizeof(message), "/members, /r, /or, /locker, /quitfaction, ");
	strcat(message2, message);
	if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][1] == 1) {
		format(message, sizeof(message), "/d, ");
		strcat(message2, message);
	}
	if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][3] == 1) {
		format(message, sizeof(message), "/fr, /for, /fd, /fmembers, /fakebadge, ");
		strcat(message2, message);
	}
	if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][5] == 1) {
		format(message, sizeof(message), "/warrant, /warrants, ");
		strcat(message2, message);
	}   
	if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][7] == 1) {
		format(message, sizeof(message), "/arrest, ");
		strcat(message2, message);
	}
	if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][4] == 1) {
		format(message, sizeof(message), "/mdc, ");
		strcat(message2, message);
	}
	if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][6] == 1) {
		format(message, sizeof(message), "/psa, ");
		strcat(message2, message);
	}
	if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][8] == 1) {
		format(message, sizeof(message), "/statetressury, ");
		strcat(message2, message);
	}
	if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][9] == 1) {
		format(message, sizeof(message), "/settaxpercentage, ");
		strcat(message2, message);
	}
	if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][2] == 1) {
		format(message, sizeof(message), "/deployroadblock, ");
		strcat(message2, message);
	}
	if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][10] == 1) {
		format(message, sizeof(message), "/bk, /bkc, /bkd");
		strcat(message2, message);
	}
	SendClientMessage(playerid, -1, message2);
	message[0] = '\0';
	message2[0] = '\0';
}

helpmenu(playerid)
{
	new message[128];
	format(message, sizeof(message), "General\nAdmin\nFaction\nFamily\nHelper\nAccount\nBusiness\nHouse\nJob\nVehicle\nAnimation\nGate\nVIP");
	ShowPlayerDialog(playerid, 23, DIALOG_STYLE_LIST, "Help!", message, "Select", "Cancel");
	message[0] = '\0';
}


COMMAND:ah(playerid, params[]) /* /adminhelp */
{
	if(PlayerInfo[playerid][Online] == 1) /* Player must be logged in to use commands */
	{   
		if(PlayerInfo[playerid][Admin] == 0) {
			ClientMessenger(playerid, "FF0000", 1, "You are not an administrator!");
		} else {
			adminhelpmenu(playerid);
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:adminhelp(playerid, params[]) /* /adminhelp */
{
	if(PlayerInfo[playerid][Online] == 1) /* Player must be logged in to use commands */
	{   
		if(PlayerInfo[playerid][Admin] == 0) {
			ClientMessenger(playerid, "FF0000", 1, "You are not an administrator!");
		} else {
			adminhelpmenu(playerid);
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:jobhelp(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) /* Player must be logged in to use commands */
	{   
		if(PlayerInfo[playerid][Job] == 0) {
			ClientMessenger(playerid, "FF0000", 2, "* You do not have any job! *");
		} else {
			jobhelpmenu(playerid);
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:helperhelp(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) /* Player must be logged in to use commands */
	{   
		if(PlayerInfo[playerid][Helper] == 0) {
			ClientMessenger(playerid, "FF0000", 1, "You are not a helper");
		} else {
			helperhelpmenu(playerid);
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:bizhelp(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1)
	{
		businesshelpmenu(playerid);
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:vehiclehelp(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1)
	{
		vehiclehelpmenu(playerid);
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:househelp(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1)
	{
		househelpmenu(playerid);
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:animationhelp(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1)
	{
		animationhelpmenu(playerid);
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:viphelp(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1)
	{
		viphelpmenu(playerid);
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:accounthelp(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1)
	{
		accounthelpmenu(playerid);
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:generalhelp(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1)
	{
		generalhelpmenu(playerid);
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:gatehelp(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1)
	{
		gatehelpmenu(playerid);
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:help(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1)
	{
		helpmenu(playerid);
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:familyhelp(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) /* Player must be logged in to use commands */
	{
		if(PlayerInfo[playerid][Faction] != 0) {
			familyhelpmenu(playerid);
		} else {
			ClientMessenger(playerid, "FF0000", 2, "* You are not in a faction! *");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:factionhelp(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) /* Player must be logged in to use commands */
	{
		if(PlayerInfo[playerid][Faction] != 0) {
			factionhelpmenu(playerid);
		} else {
			ClientMessenger(playerid, "FF0000", 2, "* You are not in a faction! *");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

ClientMessenger(playerid, color[], version, message[])
{
	new formatm[144];
	if(version==1){ // Server error
		format(formatm, sizeof(formatm), "{FF0000}SERVER{FFFFFF}: %s", message);
		SendClientMessage(playerid, -1, formatm);
	} else if(version==2){ // ic error
		format(formatm, sizeof(formatm), "{FF0000}%s", message);
		SendClientMessage(playerid, -1, formatm);
	} else if(version==3){ // message
		format(formatm, sizeof(formatm), "{%s}%s", color, message);
		SendClientMessage(playerid, -1, formatm);
	} else if(version==4){ // admin warning
		format(formatm, sizeof(formatm), "{FF0000}ADMWRN{FFFFFF}: %s", message);
		foreach(Player, i)
		{
			if(PlayerInfo[i][Online] == 1) {
				if(PlayerInfo[i][Admin] > 1){
					SendClientMessage(i, -1, formatm);
				}
			}
		}
	} else if(version==5){
		format(formatm, sizeof(formatm), "{00FFFF}Usage{FFFFFF}: %s", message);
		SendClientMessage(playerid, -1, formatm);
	} else if(version==6){ // helper warning
		format(formatm, sizeof(formatm), "{FF0000}HLPWRN{FFFFFF}: %s", message);
		foreach(Player, i)
		{
			if(PlayerInfo[i][Online] == 1) {
				if(PlayerInfo[i][Helper] > 1){
					SendClientMessage(i, -1, formatm);
				} else if (PlayerInfo[i][Admin] > 1) {
					SendClientMessage(i, -1, formatm);
				}
			}
		}
	}
	formatm[0] = '\0';
}

CheckAMessages(playerid)
{
	mysql_query(MySQL, "SELECT * FROM `amessages` ORDER BY `id` DESC LIMIT 20");
	ReadAllMessages[playerid][0] = '\0';
	if(cache_num_rows() == 0) {
		format(ReadAllMessages[playerid], 15, "NO MESSAGES!");
	} else {
		new toplimit, count, cached, ccount = 21;
		if((cache_get_field_content_int(0, "id")-20) >= 1){
			toplimit = (cache_get_field_content_int(0, "id")-20);
			count = (cache_get_field_content_int(0, "id")-20);
		} else {
			toplimit = (cache_get_field_content_int(0, "id")-cache_num_rows());
			count = (cache_get_field_content_int(0, "id")-cache_num_rows());
		}
		cached = cache_num_rows();
		for (new a = 0; a < cached; a++) {
			count = (count+1);
			if((cached - 20) <= 20){
				ccount = (ccount-1);
			} else {
				ccount = ((ccount - 21) + 1);
				if(ccount >= 1){
				
				} else {
					ccount = (ccount+21);
				}
			}
			if(count != toplimit){
				new largequery[144];
				mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `amessages` WHERE `id` = %i LIMIT 1", count);
				mysql_query(MySQL, largequery);
				new newname[MAX_PLAYER_NAME+1], newmessage[145], message2[500], newdate[10], newtime[10], targetid, targetida;
				cache_get_field_content(0, "Message", newmessage);
				cache_get_field_content(0, "date", newdate);
				cache_get_field_content(0, "time", newtime);
				targetid = cache_get_field_content_int(0, "PDBID");
				targetida = cache_get_field_content_int(0, "LevelAdmin");
				mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", targetid);
				mysql_query(MySQL, largequery);
				cache_get_field_content(0, "name", newname);
				format(message2, sizeof(message2), "{FFFFFF}%i. [{FFFF00}%s{FFFFFF}-{FFFF00}%s{FFFFFF}] {%s}%s{FFFFFF}(%i): %s\n", ccount, newdate, newtime, GetAdminRanksC(targetida), newname, targetid, newmessage);
				strcat(ReadAllMessages[playerid], message2);
				newname[0] = '\0';
				message2[0] = '\0';
				newmessage[0] = '\0';
				newdate[0] = '\0';
				newtime[0] = '\0';
				largequery[0] = '\0';
			}
		}
	}
	ShowPlayerDialog(playerid, 6, DIALOG_STYLE_INPUT, "Admin Messages", ReadAllMessages[playerid], "New MSG", "Exit");
	ReadAllMessages[playerid][0] = '\0';
}

COMMAND:licenses(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		ReadAllMessages[playerid][0] = '\0';
		new message[144];
		format(message, sizeof(message), "{FFFFFF}Drivers License: %s\n", GetLicensePass(PlayerInfo[playerid][Licenses][1]));
		strcat(ReadAllMessages[playerid], message);
		format(message, sizeof(message), "{FFFFFF}Flying License: %s\n", GetLicensePass(PlayerInfo[playerid][Licenses][2]));
		strcat(ReadAllMessages[playerid], message);
		format(message, sizeof(message), "{FFFFFF}Weapon License: %s\n", GetLicensePass(PlayerInfo[playerid][Licenses][3]));
		strcat(ReadAllMessages[playerid], message);
		format(message, sizeof(message), "{FFFFFF}Boating License: %s\n", GetLicensePass(PlayerInfo[playerid][Licenses][4]));
		strcat(ReadAllMessages[playerid], message);
		format(message, sizeof(message), "{FFFFFF}Fishing License: %s", GetLicensePass(PlayerInfo[playerid][Licenses][5]));
		strcat(ReadAllMessages[playerid], message);
		format(message, sizeof(message), "%s Licenses", str_replace("_", " ", GetPlayerNameEx(playerid)));
		ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, message, ReadAllMessages[playerid], "Done", "");
		ReadAllMessages[playerid][0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
	

COMMAND:stats(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		ReadAllMessages[playerid][0] = '\0';
		new message[144], largequery[144], MarriageName[MAX_PLAYER_NAME];
		if(PlayerInfo[playerid][Marriage] != 0){
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id`=%i", PlayerInfo[playerid][Marriage]);
			mysql_query(MySQL, largequery);
			cache_get_field_content(0, "name", MarriageName);
		} else {
			format(MarriageName, sizeof(MarriageName), "NONE");
		}
		format(message, sizeof(message), "{009ACD}[Account] {FFFFFF}ID:[%i]  FID:[%i]  Name:[%s]  Level:[%i]  Respect Points:[%i/%i]  Next Level Cost:[%i]\n", PlayerInfo[playerid][DBID], PlayerInfo[playerid][TempInfo][5],PlayerInfo[playerid][RealName],PlayerInfo[playerid][Level],PlayerInfo[playerid][RespectPoints],((PlayerInfo[playerid][Level]*4)+4), ((PlayerInfo[playerid][Level]*25000)+25000));
		strcat(ReadAllMessages[playerid], message);
		format(message, sizeof(message), "{009ACD}[Details] {FFFFFF}Money:[%i]  Bank:[%i]  Total Wealth:[%i]  Gender:[%s]  DOB:[%i/%i/%i]  Married:[%s]\n", PlayerInfo[playerid][Money],PlayerInfo[playerid][BankMoney],(PlayerInfo[playerid][Money]+PlayerInfo[playerid][BankMoney]), GenderIdentification(PlayerInfo[playerid][Gender]), PlayerInfo[playerid][DOB][1],PlayerInfo[playerid][DOB][2],PlayerInfo[playerid][DOB][3], str_replace("_", " ", MarriageName));
		strcat(ReadAllMessages[playerid], message);
		format(message, sizeof(message), "{009ACD}[Skill] {FFFFFF}Skill:[%s]  Skill Level:[%i]  Skill Points:[%i/%i]  Skill Items:[%i]\n", JobNames(PlayerInfo[playerid][Job]), PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]], PlayerInfo[playerid][JobLevelsP][PlayerInfo[playerid][Job]], (50*PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]]), PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]]);
		strcat(ReadAllMessages[playerid], message);
		format(message, sizeof(message), "{009ACD}[Property] {FFFFFF}House:[%i]  Business:[%s(%i)]  Vehicle1:[%s(%s)]  Vehicle2:[%s(%s)]\n", PlayerInfo[playerid][House],GetBusinesses(Businesses[PlayerInfo[playerid][Biz]][BizType]),PlayerInfo[playerid][Biz],GetVehicleInformation(PlayerInfo[playerid][PVehs][1]),Vehicles[PlayerInfo[playerid][PVehsID][1]][VehLicence],GetVehicleInformation(PlayerInfo[playerid][PVehs][2]),Vehicles[PlayerInfo[playerid][PVehsID][2]][VehLicence]);
		strcat(ReadAllMessages[playerid], message);
		if(PlayerInfo[playerid][Faction] != 0){
			format(message, sizeof(message), "{009ACD}[Faction] {FFFFFF}Faction:[%s]  Rank:[%s(%i)]  Faction Leader:[%s]\n", FactionInfo[PlayerInfo[playerid][Faction]][FactionLongName], AllFactionRanks[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]], PlayerInfo[playerid][FactionLevel], GetPlayerFactionLeader(playerid));
		} else {
			format(message, sizeof(message), "{009ACD}[Faction] {FFFFFF}Faction:[None]  Rank:[None(0)]  Faction Leader:[No]\n");
		}
		strcat(ReadAllMessages[playerid], message);
		format(message, sizeof(message), "{009ACD}[Records] {FFFFFF}Minutes:[%i]  Hours:[%i]  Crimes Committed:[%i]  Tikis:[%i]  VIP:[%s]", PlayerInfo[playerid][Minutes][0], (PlayerInfo[playerid][Minutes][0]/60), PlayerInfo[playerid][CrimesCommitted], PlayerInfo[playerid][Tikis], GetVIPLevels(PlayerInfo[playerid][VIP]));
		strcat(ReadAllMessages[playerid], message);
		ShowPlayerDialog(playerid, 24, DIALOG_STYLE_MSGBOX, "Statistics", ReadAllMessages[playerid], "Done", "Print");
		ReadAllMessages[playerid][0] = '\0';
		message[0] = '\0';
		largequery[0] = '\0';
		MarriageName[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

/*
COMMAND:forumcheck(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[500], largequery[144], viewother[10];
		if (!sscanf(params, "s[10]", viewother)) {
			if(!strcmp(viewother, "vms")){
				mysql_format(MySQL_Forum, largequery, sizeof(largequery), "SELECT * FROM `bb_visitormessage` WHERE `userid`=%i AND `messageread` = 0 ORDER BY `vmid` DESC", PlayerInfo[playerid][TempInfo][5]);
				mysql_query(MySQL_Forum, largequery);
				if(cache_num_rows() >= 1) {
					strcat(ReadAllMessages[playerid], "{FF0000}Reminder:{FFFFFF} visitor messages on here are limited to only 150 characters.\n");
					for(new a = 0; a < cache_num_rows(); a++){
						new visitormessage[150], visitormessagename[50];
						
						cache_get_field_content(a, "postusername", visitormessagename);
						cache_get_field_content(a, "pagetext", visitormessage);
						format(message, sizeof(message), "{00FFFF}%s{FFFFFF}: %s\n", visitormessagename, visitormessage);
						strcat(ReadAllMessages[playerid], message);

						message[0] = '\0';
						visitormessage[0] = '\0';
						visitormessagename[0] = '\0';
					}
					ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, "Your Visitor Messages [Unread]", ReadAllMessages[playerid], "Okay", "");
					ReadAllMessages[playerid][0] = '\0';
				}
			} else if(!strcmp(viewother, "ovms")){
				mysql_format(MySQL_Forum, largequery, sizeof(largequery), "SELECT * FROM `bb_visitormessage` WHERE `userid`=%i AND `messageread` = 1 ORDER BY `vmid` DESC LIMIT 10", PlayerInfo[playerid][TempInfo][5]);
				mysql_query(MySQL_Forum, largequery);
				if(cache_num_rows() >= 1) {
					strcat(ReadAllMessages[playerid], "{FF0000}Reminder:{FFFFFF} visitor messages on here are limited to only 150 characters.\n");
					for(new a = 0; a < cache_num_rows(); a++){
						new visitormessage[150], visitormessagename[50];
						
						cache_get_field_content(a, "postusername", visitormessagename);
						cache_get_field_content(a, "pagetext", visitormessage);
						format(message, sizeof(message), "{00FFFF}%s{FFFFFF}: %s\n", visitormessagename, visitormessage);
						strcat(ReadAllMessages[playerid], message);

						message[0] = '\0';
						visitormessage[0] = '\0';
						visitormessagename[0] = '\0';
					}
					ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, "Your Visitor Messages [Read]", ReadAllMessages[playerid], "Okay", "");
					ReadAllMessages[playerid][0] = '\0';
				}
			}
		} else {
			mysql_format(MySQL_Forum, largequery, sizeof(largequery), "SELECT * FROM `bb_user` WHERE `userid`=%i", PlayerInfo[playerid][TempInfo][5]);
			mysql_query(MySQL_Forum, largequery);
			
			format(message, sizeof(message), "You have %i unread visitor message(s)!", cache_get_field_content_int(0, "vmunreadcount"));
			ClientMessenger(playerid, "FF0000", 1, message);
			if(cache_get_field_content_int(0, "vmunreadcount") != 0){
				ClientMessenger(playerid, "FFFFFF", 3, "You can type '/forumcheck vms' to read them all!");
			} else {
				ClientMessenger(playerid, "FFFFFF", 3, "If you want to view the last 10 old messages, type '/forumcheck ovms'");
			}
		}
		message[0] = '\0';
		largequery[0] = '\0';
		viewother[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
*/

COMMAND:amsgs(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Admin] >= 1) {
			CheckAMessages(playerid);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:deletejob(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6) {
				new jobid, jobconfirm[8];
				if (!sscanf(params, "is[8]", jobid, jobconfirm)) {
					if(!strcmp(jobconfirm, "confirm")){
						if(LastJobID[jobid] != 0){
							new largequery[256];
							mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `jobs` WHERE `id`=%i", jobid);
							mysql_query(MySQL, largequery);
							format(message, sizeof(message), "%s has deleted a job(%i): %s", str_replace("_", " ", GetPlayerNameEx(playerid)), jobid, JobNames(JobInfo[jobid][JobType]));
							ClientMessenger(playerid, "FF0000", 4, message);
							
							DestroyDynamicPickup(JobInfo[jobid][JobIcon]);
							DestroyDynamic3DTextLabel(JobInfo[jobid][JobText]);
							DestroyDynamicMapIcon(JobInfo[jobid][JobMapIcon]);
							JobInfo[jobid][JobX] = 0;
							JobInfo[jobid][JobY] = 0;
							JobInfo[jobid][JobZ] = 0;
							JobInfo[jobid][JobType] = 0;
							JobInfo[jobid][JobWorld] = -1;
							JobInfo[jobid][JobInterior] = -1;
							LastJobID[jobid] = 0;
							/*
							mysql_query(MySQL, "SELECT * FROM `jobs` ORDER BY `id` DESC LIMIT 1");
							new jobiddblast = (cache_get_field_content_int(0, "id")+1);
							for (new a = jobid; a <= jobiddblast; a++) {
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `jobs` SET `id` = %i WHERE `id` = %i", a, a+1);
								mysql_query(MySQL, largequery);
								JobInfo[a][JobX] = JobInfo[a+1][JobX];
								JobInfo[a][JobY] = JobInfo[a+1][JobY];
								JobInfo[a][JobZ] = JobInfo[a+1][JobZ];
								JobInfo[a][JobType] = JobInfo[a+1][JobType];
								DestroyDynamicPickup(JobInfo[a][JobIcon]);
								DestroyDynamic3DTextLabel(JobInfo[a][JobText]);
								JobInfo[a][JobIcon] = CreateDynamicPickup(JobObjectid(JobInfo[a][JobType]), 23, JobInfo[a][JobX], JobInfo[a][JobY], JobInfo[a][JobZ], 0, 0, -1);
								format(JobInfo[jobid][JobTempText], 128, "{FFFFFF}%s\n/getjob\n(id: %i)", JobNames(JobInfo[a][JobType]), a);
								Businesses[a][BizText] = CreateDynamic3DTextLabel(JobInfo[jobid][JobTempText], -1, JobInfo[a][JobX], JobInfo[a][JobY], JobInfo[a][JobZ], 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0, -1);
							}
							*/
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "Not a valid job!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "You did not type confirm correctly!");
					}
				} else {
					ClientMessenger(playerid, "-1", 5, "/deletejob <jobid> confirm");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				ClientMessenger(playerid, "-1", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:movejob(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6) {
				new jobid;
				if (!sscanf(params, "i", jobid)) {
					if(LastJobID[jobid] != 0) {
						new largequery[256];
						format(message, sizeof(message), "%s has moved job %s(%i) to his location ", str_replace("_", " ", GetPlayerNameEx(playerid)), JobNames(JobInfo[jobid][JobType]), jobid);
						ClientMessenger(playerid, "FF0000", 1, message);
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
						PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
						JobInfo[jobid][JobX] = PlayerInfo[playerid][PosX];
						JobInfo[jobid][JobY] = PlayerInfo[playerid][PosY];
						JobInfo[jobid][JobZ] = PlayerInfo[playerid][PosZ];
						JobInfo[jobid][JobWorld] = PlayerInfo[playerid][WorldID];
						JobInfo[jobid][JobInterior] = PlayerInfo[playerid][InteriorID];
						DestroyDynamicMapIcon(JobInfo[jobid][JobMapIcon]);
						JobInfo[jobid][JobMapIcon] = CreateDynamicMapIcon(JobInfo[jobid][JobX], JobInfo[jobid][JobY], JobInfo[jobid][JobZ], 56, -1, JobInfo[jobid][JobWorld], JobInfo[jobid][JobInterior], -1, 500, MAPICON_GLOBAL);
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `jobs` SET `x`='%f', `y`='%f', `z`='%f', `worldid`=%i, `intid`=%i WHERE `id` = %i", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], jobid);
						mysql_query(MySQL, largequery);
						DestroyDynamicPickup(JobInfo[jobid][JobIcon]);
						DestroyDynamic3DTextLabel(JobInfo[jobid][JobText]);
						JobInfo[jobid][JobIcon] = CreateDynamicPickup(JobObjectid(JobInfo[jobid][JobType]), 23, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], JobInfo[jobid][JobWorld], JobInfo[jobid][JobInterior], -1);
						format(JobInfo[jobid][JobTempText], 325, "{FFFFFF}%s\n/getjob\n(id: %i)", JobNames(JobInfo[jobid][JobType]), jobid);
						JobInfo[jobid][JobText] = CreateDynamic3DTextLabel(JobInfo[jobid][JobTempText], -1, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, JobInfo[jobid][JobWorld], JobInfo[jobid][JobInterior], -1);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid job id");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/movejob <jobid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


forward tazedanimation(playerid);
public tazedanimation(playerid)
{
	ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.1, 0, 1, 1, 0, 10000, 1);
}


forward untazeplayer(playerid);
public untazeplayer(playerid)
{
	PlayerInfo[playerid][TempInfo][4] = 0;
}


forward autoclosegate(gateid);
public autoclosegate(gateid)
{
	if(GateInfo[gateid][GateOpen] == 0){
		GateInfo[gateid][GateOpen] = 1;
		MoveDynamicObject(GateInfo[gateid][GateIcon], GateInfo[gateid][GateEndX],GateInfo[gateid][GateEndY], GateInfo[gateid][GateEndZ], GateInfo[gateid][GateSpeed], GateInfo[gateid][GateEndRX], GateInfo[gateid][GateEndRY], GateInfo[gateid][GateEndRZ]);
	} else {
		GateInfo[gateid][GateOpen] = 0;
		MoveDynamicObject(GateInfo[gateid][GateIcon], GateInfo[gateid][GateX],GateInfo[gateid][GateY], GateInfo[gateid][GateZ], GateInfo[gateid][GateSpeed], GateInfo[gateid][GateRX], GateInfo[gateid][GateRY], GateInfo[gateid][GateRZ]);
	}
}


forward TikiPickupAbility(tikiid);
public TikiPickupAbility(tikiid)
{
	for(new b = 0; b < MAX_PLAYERS; b++){
		for(new a = 1; a < sizeof(TikiInfos); a++){
			if(IsPlayerInRangeOfPoint(b, 1, TikiInfos[a][TikiX], TikiInfos[a][TikiY], TikiInfos[a][TikiZ]) && TikiInfos[a][TikiWorld] == GetPlayerVirtualWorld(b)){
				if(TikiInfos[a][TikiPickup] != 0 && TikiInfos[a][TikiCreatorID] != b) {
					new message[144];
					KillTimer(TikiInfos[a][TikiPickup]);
					LastTikiID[a] = 0;
					TikiInfos[a][TikiX] = 0;
					TikiInfos[a][TikiY] = 0;
					TikiInfos[a][TikiZ] = 0;
					TikiInfos[a][TikiPickup] = 0;
					TikiInfos[a][TikiWorld] = -1;
					TikiInfos[a][TikiInt] = -1;
					TikiInfos[a][TikiCreatorID] = 65535;
					DestroyDynamicPickup(TikiInfos[a][TikiIcon]);
					PlayerInfo[b][Tikis] = (PlayerInfo[b][Tikis] + 1);
					format(message, sizeof(message), "~b~%i Tikis Collected", PlayerInfo[b][Tikis]);
					GameTextForPlayer(b, message, 2500, 4);
					format(message, sizeof(message), "%s has collected tiki #%i", str_replace("_", " ", GetPlayerNameEx(b)), a);
					ClientMessenger(b, "FF0000", 4, message);
					mysql_format(MySQL, message, sizeof(message), "UPDATE `accounts` SET `tikis`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[b][Tikis], PlayerInfo[b][DBID]);
					mysql_query(MySQL, message);
					message[0] = '\0';
					break;
				}
			}
		}
	}
}

COMMAND:deletetikis(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1){
			if(PlayerInfo[playerid][Admin] >= 4) {
				new tikiconfirm[8];
				if (!sscanf(params, "s[8]", tikiconfirm)) {
					if(!strcmp(tikiconfirm, "confirm")){
						for(new a = 1; a < sizeof(LastTikiID); a++){
							if(LastTikiID[a] != 0){
								new largequery[144];
								KillTimer(TikiInfos[a][TikiPickup]);
								LastTikiID[a] = 0;
								TikiInfos[a][TikiX] = 0;
								TikiInfos[a][TikiY] = 0;
								TikiInfos[a][TikiZ] = 0;
								TikiInfos[a][TikiPickup] = 0;
								TikiInfos[a][TikiWorld] = -1;
								TikiInfos[a][TikiInt] = -1;
								TikiInfos[a][TikiCreatorID] = 65535;
								DestroyDynamicPickup(TikiInfos[a][TikiIcon]);
								largequery[0] = '\0';
							}
						}
						format(message, sizeof(message), "%s has deleted all tikis", str_replace("_", " ", GetPlayerNameEx(playerid)));
						ClientMessenger(playerid, "FFFFFF", 4, message);
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "You did not type confirm correctly!!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/deletetikis confirm");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FFFFFF", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:deletetiki(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1){
			if(PlayerInfo[playerid][Admin] >= 4) {
				new tikiid, tikiconfirm[8];
				if (!sscanf(params, "is[8]", tikiid, tikiconfirm)) {
					if(!strcmp(tikiconfirm, "confirm")){
						if(LastTikiID[tikiid] != 0){
							new largequery[144];
							format(message, sizeof(message), "%s has deleted tiki #%i", str_replace("_", " ", GetPlayerNameEx(playerid)), tikiid);
							ClientMessenger(playerid, "FFFFFF", 4, message);
							
							KillTimer(TikiInfos[tikiid][TikiPickup]);
							LastTikiID[tikiid] = 0;
							TikiInfos[tikiid][TikiX] = 0;
							TikiInfos[tikiid][TikiY] = 0;
							TikiInfos[tikiid][TikiZ] = 0;
							TikiInfos[tikiid][TikiPickup] = 0;
							TikiInfos[tikiid][TikiWorld] = -1;
							TikiInfos[tikiid][TikiInt] = -1;
							TikiInfos[tikiid][TikiCreatorID] = 65535;
							DestroyDynamicPickup(TikiInfos[tikiid][TikiIcon]);
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FFFFFF", 1, "Not a valid tiki!");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "You did not type confirm correctly!!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/deletetiki <tikiid> confirm");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FFFFFF", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:maketiki(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4) {
				GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
				PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
				PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
				new getall = sizeof(LastTikiID);
				for(new x = 1; x < sizeof(LastTikiID); x++){
					if(LastTikiID[x] == 0){
						getall = getall-1;
					}
				}
				if(getall != sizeof(LastTikiID)){
					for(new w = 1; w < sizeof(LastTikiID); w++){
						if(LastTikiID[w] == 0){
							LastTikiID[w] = 1;
							//SetPlayerPos(playerid, PlayerInfo[playerid][PosX]+2, PlayerInfo[playerid][PosY]+2, PlayerInfo[playerid][PosZ]);
							TikiInfos[w][TikiX] = PlayerInfo[playerid][PosX];
							TikiInfos[w][TikiY] = PlayerInfo[playerid][PosY];
							TikiInfos[w][TikiZ] = PlayerInfo[playerid][PosZ];
							TikiInfos[w][TikiWorld] = PlayerInfo[playerid][WorldID];
							TikiInfos[w][TikiInt] = PlayerInfo[playerid][InteriorID];
							TikiInfos[w][TikiCreatorID] = playerid;
							TikiInfos[w][TikiPickup] = SetTimerEx("TikiPickupAbility", 250, true, "i", w);
							TikiInfos[w][TikiIcon] = CreateDynamicPickup(1276, 23, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], -1);
							format(message, sizeof(message), "%s has made a tiki(#%i) at their location", str_replace("_", " ", GetPlayerNameEx(playerid)), w);
							ClientMessenger(playerid, "FF0000", 4, message);
							break;
						}
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "The tiki limit has been reached, sorry!");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:givetiki(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4) {
				new targetid;
				if (!sscanf(params, "u", targetid)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1){
							format(message, sizeof(message), "[SERVER] %s has been given a tiki by %s", str_replace("_", " ", GetPlayerNameEx(targetid)), str_replace("_", " ", GetPlayerNameEx(playerid)));
							foreach(Player, a){
								if(PlayerInfo[a][Online] == 1) {
									ClientMessenger(a, "FA8072", 3, message);
								}
							}
							PlayerInfo[targetid][Tikis] = (PlayerInfo[targetid][Tikis] + 1);
							format(message, sizeof(message), "~b~%i Tikis Collected", PlayerInfo[targetid][Tikis]);
							GameTextForPlayer(targetid, message, 2500, 4);
							mysql_format(MySQL, message, sizeof(message), "UPDATE `accounts` SET `tikis`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[targetid][Tikis], PlayerInfo[targetid][DBID]);
							mysql_query(MySQL, message);
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/givetiki <playerid/playername>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

EditArrestPoints(playerid, arrestid)
{
	strcat(ReadAllMessages[playerid], "Name\tValues\n");
	new message[144];
	format(message, 144, "Move Arrest\t%i\n", arrestid);
	strcat(ReadAllMessages[playerid], message);
	format(message, 144, "Move Arrest Exit\t%i\n", arrestid);
	strcat(ReadAllMessages[playerid], message);
	format(message, 144, "Faction\t%s(%i)\n", FactionInfo[ArrestPointInfo[arrestid][APFaction]][FactionLongName],ArrestPointInfo[arrestid][APFaction]);
	strcat(ReadAllMessages[playerid], message);
	message[0] = '\0';
	PlayerInfo[playerid][AllEditingOptions] = arrestid;
	ShowPlayerDialog(playerid, 86, DIALOG_STYLE_TABLIST_HEADERS, "Edit ArrestPoint Settings", ReadAllMessages[playerid], "Select", "Cancel");
	ReadAllMessages[playerid][0] = '\0';
}

COMMAND:editarrestpoint(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][FactionModerator] >= 2) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][FactionModerator] >= 2) {
				new arrestid;
				if (!sscanf(params, "i", arrestid)) {
					if(LastArrestPointID[arrestid] == 1){
						EditArrestPoints(playerid, arrestid);
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That arrest point does not exist. Try a different ID.");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/editarrestpoint <arrestid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Director{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

PlayerIsArrested(playerid, arrestid, arresttime)
{
	FindNewJailCellIC:
	new message[144];
	mysql_query(MySQL, "SELECT * FROM `arrestpointzones`");
	new selectjailcell = random(cache_num_rows());
	if(ArrestPointZonesInfo[selectjailcell][APZID] == arrestid){
		PlayerInfo[playerid][PosX] = ArrestPointZonesInfo[selectjailcell][APZX];
		PlayerInfo[playerid][PosY] = ArrestPointZonesInfo[selectjailcell][APZY];
		PlayerInfo[playerid][PosZ] = ArrestPointZonesInfo[selectjailcell][APZZ];
		PlayerInfo[playerid][WorldID] = ArrestPointZonesInfo[selectjailcell][APZWorld];
		PlayerInfo[playerid][InteriorID] = ArrestPointZonesInfo[selectjailcell][APZInterior];
		SetPlayerPos(playerid, ArrestPointZonesInfo[selectjailcell][APZX], ArrestPointZonesInfo[selectjailcell][APZY], ArrestPointZonesInfo[selectjailcell][APZZ]);
		SetPlayerVirtualWorld(playerid, ArrestPointZonesInfo[selectjailcell][APZWorld]);
		SetPlayerInterior(playerid, ArrestPointZonesInfo[selectjailcell][APZInterior]);
		if(PlayerInfo[playerid][TempInfo][12] == 0){
			PlayerInfo[playerid][TempInfo][12] = arresttime;
		}
		FreezePlayerAfterTeleport(playerid, 2500);
	} else {
		goto FindNewJailCellIC;
	}
	message[0] = '\0';
}

COMMAND:arrest(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144], targetid, time, onemessage = 1;
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) {
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][7] == 1) {
				if(AllFactionRanksPermissions[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]][7] == 1) {
					if (!sscanf(params, "ui", targetid, time)) {
						if(targetid != 65535){
							if(PlayerInfo[targetid][Online] == 1){
								if(PlayerInfo[targetid][Warrants] >= 1){
									if(time >= 1 && time <= 15 ){
										for(new a = 1; a < sizeof(ArrestPointInfo); a++) {
											if(IsPlayerInRangeOfPoint(playerid,5.0,ArrestPointInfo[a][APXStart],ArrestPointInfo[a][APYStart],ArrestPointInfo[a][APZStart]) && IsPlayerInRangeOfPoint(targetid,5.0,ArrestPointInfo[a][APXStart],ArrestPointInfo[a][APYStart],ArrestPointInfo[a][APZStart])) {
												if(ArrestPointInfo[a][APWorldStart] == GetPlayerVirtualWorld(playerid) && ArrestPointInfo[a][APInteriorStart] == GetPlayerInterior(playerid)) {
													PlayerInfo[targetid][TempInfo][13] = 1;
													PlayerInfo[targetid][TempInfo][4] = 0;
													PlayerInfo[targetid][TempInfo][2] = 0;
													SetPlayerSpecialAction(targetid, SPECIAL_ACTION_NONE);
													onemessage = 0;
													new largequery[300];
													PlayerInfo[targetid][TempInfo][12] = (time*60);
													PlayerIsArrested(targetid, a, (time*60));
													ResetPlayerWeapons(targetid);
													for(new h = 0; h < 12; h++)
													{
														PlayerInfo[targetid][Weapons][h] = 0;
													}
													mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_weapons` SET `weapon`=0, `weapon_ammo`='0' WHERE `playerid` = %i", PlayerInfo[targetid][DBID]);
													mysql_query(MySQL, largequery);
													
													mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `player_arrested` WHERE `playerid` = %i LIMIT 1", PlayerInfo[targetid][DBID]);
													mysql_query(MySQL, largequery);
													if(cache_num_rows() == 0){
														mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `player_arrested` (`arrestid`,`arresttime`,`playerid`) VALUES ('%i','%i','%i')", a, (time*60), PlayerInfo[targetid][DBID]);
														mysql_query(MySQL, largequery);
													} else {
														mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `player_arrested` WHERE `playerid` = %i", PlayerInfo[targetid][DBID]);
														mysql_query(MySQL, largequery);
														mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `player_arrested` (`arrestid`,`arresttime`,`playerid`) VALUES ('%i','%i','%i')", a, (time*60), PlayerInfo[targetid][DBID]);
														mysql_query(MySQL, largequery);
													}
													
													PlayerInfo[targetid][Warrants] = (PlayerInfo[targetid][Warrants] - PlayerInfo[targetid][Warrants]);
													SetPlayerWantedLevel(targetid, 0);
													mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `warrants` = 0 WHERE `id` = %i", PlayerInfo[targetid][DBID]);
													mysql_query(MySQL, largequery);
													
													format(message, sizeof(message), "You have been arrested by %s for %i minutes.", str_replace("_", " ", GetPlayerNameEx(playerid)), time);
													ClientMessenger(targetid, "FF0000", 2, message);
													
													foreach(Player, i)
													{
														if(FactionInfo[PlayerInfo[i][Faction]][FactionPermissions][7] == 1){
															format(message, sizeof(message), "[%s] %s has arrested %s, and registered %s into the arrest database.", FactionInfo[ArrestPointInfo[a][APFaction]][FactionShortName], str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)), GenderIdentification2(PlayerInfo[targetid][Gender]));
															ClientMessenger(i, "8D8DFF", 3, message);
														}
													}
													largequery[0] = '\0';
													PlayerInfo[targetid][TempInfo][13] = 0;
													break;
												}
											}
										}
									} else {
										ClientMessenger(playerid, "FF0000", 1, "You're not allowed to arrest anyone under 1 minute, or above 15 minutes!");
										onemessage = 0;
									}
								} else {
									ClientMessenger(playerid, "FF0000", 1, "That player has no warrants, so you can not arrest him!");
									onemessage = 0;
								}
							} else {
								ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
								onemessage = 0;
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
							onemessage = 0;
						}
					} else {
						ClientMessenger(playerid, "FF0000", 5, "/arrest <playerid/playername> <time>");
						onemessage = 0;
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can not do this at your rank!");
					onemessage = 0;
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
				onemessage = 0;
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
			onemessage = 0;
		}
		message[0] = '\0';
		if(onemessage == 1){
			ClientMessenger(playerid, "FF0000", 1, "You're not at an arrest point!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:makearrestpointzone(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][FactionModerator] >= 2) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][FactionModerator] >= 2) {
				new arrestid;
				if (!sscanf(params, "i", arrestid)) {
					if(LastArrestPointID[arrestid] == 1){
						new largequery[256];
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
						PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
						new getall = sizeof(LastArrestPointZoneID);
						for(new x = 1; x < sizeof(LastArrestPointZoneID); x++){
							if(LastArrestPointZoneID[x] == 0){
								getall = getall-1;
							}
						}
						if(getall != sizeof(LastArrestPointZoneID)){
							for(new w = 1; w < sizeof(LastArrestPointZoneID); w++){
								if(LastArrestPointZoneID[w] == 0){
									LastArrestPointZoneID[w] = 1;
									mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `arrestpointzones` (`id`,`x`,`y`,`z`,`arrestid`,`world`,`interior`) VALUES ('%i', '%f', '%f', '%f','%i','%i','%i')", w, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], arrestid, PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID]);
									mysql_query(MySQL, largequery);
									
									ArrestPointZonesInfo[w][APZX] = PlayerInfo[playerid][PosX];
									ArrestPointZonesInfo[w][APZY] = PlayerInfo[playerid][PosY];
									ArrestPointZonesInfo[w][APZZ] = PlayerInfo[playerid][PosZ];
									ArrestPointZonesInfo[w][APZWorld] = PlayerInfo[playerid][WorldID];
									ArrestPointZonesInfo[w][APZInterior] = PlayerInfo[playerid][InteriorID];
									ArrestPointZonesInfo[w][APZID] = arrestid;
									format(message, sizeof(message), "%s has made an arrest point zone(%i) for arrest point: %i", str_replace("_", " ", GetPlayerNameEx(playerid)), w, arrestid);
									ClientMessenger(playerid, "FF0000", 4, message);
									
									format(message, 325, "{FFFFFF}Cell (%i)", w);
									ArrestPointZonesInfo[w][APZText] = CreateDynamic3DTextLabel(message, -1, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, ArrestPointZonesInfo[w][APZWorld], ArrestPointZonesInfo[w][APZInterior], -1);
									break;
								}
							}
						} else {
							format(message, sizeof(message), "The arrest limit zone(%i) has been reached. Sorry!", MAX_ARREST_ZONES);
							ClientMessenger(playerid, "FF0000", 1, message);
						}
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid arrest id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/makearrestpointzone <arrestid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Director{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:deletearrestpointzone(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][FactionModerator] >= 2) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][FactionModerator] >= 2) {
				new arrestid, arrestconfirm[8];
				if (!sscanf(params, "is[8]", arrestid, arrestconfirm)) {
					if(!strcmp(arrestconfirm, "confirm")){
						if(LastArrestPointZoneID[arrestid] == 1){
							new largequery[256];
							LastArrestPointZoneID[arrestid] = 0;
							format(message, sizeof(message), "%s has deleted arrest point zone id %i owned by arrest id %i & %s", str_replace("_", " ", GetPlayerNameEx(playerid)), arrestid, ArrestPointZonesInfo[arrestid][APZID], FactionInfo[ArrestPointInfo[ArrestPointZonesInfo[arrestid][APZID]][APFaction]][FactionLongName]);
							ClientMessenger(playerid, "FF0000", 4, message);
							
							DestroyDynamic3DTextLabel(ArrestPointZonesInfo[arrestid][APZText]);
							
							mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `arrestpointzones` WHERE `id` = %i", arrestid);
							mysql_query(MySQL, largequery);
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "Not a valid arrest point zone id!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "You did not type confirm correctly");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/deletearrestpointzone <cell id> confirm");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Director{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}           
	

COMMAND:deletearrestpoint(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][FactionModerator] >= 2) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][FactionModerator] >= 2) {
				new arrestid, arrestconfirm[8];
				if (!sscanf(params, "is[8]", arrestid, arrestconfirm)) {
					if(!strcmp(arrestconfirm, "confirm")){
						if(LastArrestPointID[arrestid] == 1){
							new largequery[256];
							LastArrestPointID[arrestid] = 0;
							format(message, sizeof(message), "%s has deleted arrest point id %i owned by %s", str_replace("_", " ", GetPlayerNameEx(playerid)), arrestid, FactionInfo[ArrestPointInfo[arrestid][APFaction]][FactionLongName]);
							ClientMessenger(playerid, "FF0000", 4, message);
							
							DestroyDynamicPickup(ArrestPointInfo[arrestid][APIconStart]);
							DestroyDynamic3DTextLabel(ArrestPointInfo[arrestid][APTextStart]);
							DestroyDynamicPickup(ArrestPointInfo[arrestid][APIconEnd]);
							
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `arrestpointzones` WHERE `arrestid` = %i", arrestid);
							mysql_query(MySQL, largequery);
							if(cache_num_rows() >= 1){
								for(new a = 0; a < cache_num_rows(); a++){
									DestroyDynamic3DTextLabel(ArrestPointZonesInfo[cache_get_field_content_int(a, "id")][APZText]);
									LastArrestPointZoneID[cache_get_field_content_int(a, "id")] = 0;
								}
							}
							mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `arrestpoints` WHERE `id` = %i", arrestid);
							mysql_query(MySQL, largequery);
							mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `arrestpointzones` WHERE `arrestid` = %i", arrestid);
							mysql_query(MySQL, largequery);
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "Not a valid arrest point id!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "You did not type confirm correctly");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/deletearrestpoint <arrest id> confirm");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Director{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
		
COMMAND:makearrestpoint(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][FactionModerator] >= 2) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][FactionModerator] >= 2) {
				new factionid;
				if (!sscanf(params, "i", factionid)) {
					if(LastFactionID[factionid] == 1){
						new largequery[256];
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
						PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
						new getall = sizeof(LastArrestPointID);
						for(new x = 1; x < sizeof(LastArrestPointID); x++){
							if(LastArrestPointID[x] == 0){
								getall = getall-1;
							}
						}
						if(getall != sizeof(LastArrestPointID)){
							for(new w = 1; w < sizeof(LastArrestPointID); w++){
								if(LastArrestPointID[w] == 0){
									LastArrestPointID[w] = 1;
									mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `arrestpoints` (`id`,`xstart`,`ystart`,`zstart`,`xend`,`yend`,`zend`,`faction`,`worldstart`,`interiorstart`,`worldend`,`interiorend`) VALUES ('%i', '%f', '%f', '%f', '0', '0', '0','%i','%i', '%i', '0', '0')", w, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], factionid, PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID]);
									mysql_query(MySQL, largequery);
									
									ArrestPointInfo[w][APXStart] = PlayerInfo[playerid][PosX];
									ArrestPointInfo[w][APYStart] = PlayerInfo[playerid][PosY];
									ArrestPointInfo[w][APZStart] = PlayerInfo[playerid][PosZ];
									ArrestPointInfo[w][APWorldStart] = PlayerInfo[playerid][WorldID];
									ArrestPointInfo[w][APInteriorStart] = PlayerInfo[playerid][InteriorID];
									ArrestPointInfo[w][APFaction] = factionid;
									ArrestPointInfo[w][APXEnd] = 0;
									ArrestPointInfo[w][APYEnd] = 0;
									ArrestPointInfo[w][APZEnd] = 0;
									ArrestPointInfo[w][APWorldEnd] = 0;
									ArrestPointInfo[w][APInteriorEnd] = 0;
									format(message, sizeof(message), "%s has made an arrest point(%i) for {%s}%s", str_replace("_", " ", GetPlayerNameEx(playerid)), w, FactionInfo[factionid][FactionColor], FactionInfo[factionid][FactionLongName]);
									ClientMessenger(playerid, "FF0000", 4, message);
									
									ArrestPointInfo[w][APIconStart] = CreateDynamicPickup(19605, 23, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], ArrestPointInfo[w][APWorldStart], ArrestPointInfo[w][APInteriorStart], -1);
									format(message, 325, "{FFFFFF}%s (%i)\n/arrest", FactionInfo[factionid][FactionLongName], w);
									ArrestPointInfo[w][APTextStart] = CreateDynamic3DTextLabel(message, -1, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, ArrestPointInfo[w][APWorldStart], ArrestPointInfo[w][APInteriorStart], -1);
									ClientMessenger(playerid, "FF0000", 1, "Make sure to do /editarrestpoint to place down the exit!");
									break;
								}
							}
						} else {
							format(message, sizeof(message), "The arrest limit(%i) has been reached. Sorry!", MAX_ARREST_POINTS);
							ClientMessenger(playerid, "FF0000", 1, message);
						}
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid faction id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/makearrestpoint <factionid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Director{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:makejob(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6) {
				new jobtype;
				if (!sscanf(params, "i", jobtype)) {
					if(jobtype > 0 && jobtype < 11) {
						new largequery[256];
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
						PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
						new getall = sizeof(LastJobID);
						for(new x = 1; x < sizeof(LastJobID); x++){
							if(LastJobID[x] == 0){
								getall = getall-1;
							}
						}
						if(getall != sizeof(LastJobID)){
							for(new w = 1; w < sizeof(LastJobID); w++){
								if(LastJobID[w] == 0){
									LastJobID[w] = 1;
									mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `jobs` (`id`,`x`,`y`,`z`,`jobtype`,`worldid`,`intid`) VALUES ('%i', '%f', '%f', '%f', '%i', '%i', '%i')", w, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], jobtype, PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID]);
									mysql_query(MySQL, largequery);
									
									JobInfo[w][JobX] = PlayerInfo[playerid][PosX];
									JobInfo[w][JobY] = PlayerInfo[playerid][PosY];
									JobInfo[w][JobZ] = PlayerInfo[playerid][PosZ];
									JobInfo[w][JobWorld] = PlayerInfo[playerid][WorldID];
									JobInfo[w][JobInterior] = PlayerInfo[playerid][InteriorID];
									JobInfo[w][JobMapIcon] = CreateDynamicMapIcon(JobInfo[w][JobX], JobInfo[w][JobY], JobInfo[w][JobZ], 56, -1, JobInfo[w][JobWorld], JobInfo[w][JobInterior], -1, 500, MAPICON_GLOBAL);
									JobInfo[w][JobType] = jobtype;
									format(message, sizeof(message), "%s has made a job(%i): %s", str_replace("_", " ", GetPlayerNameEx(playerid)), w, JobNames(jobtype));
									ClientMessenger(playerid, "FF0000", 4, message);
									JobInfo[w][JobIcon] = CreateDynamicPickup(JobObjectid(JobInfo[w][JobType]), 23, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], JobInfo[w][JobWorld], JobInfo[w][JobInterior], -1);
									format(JobInfo[w][JobTempText], 325, "{FFFFFF}%s\n/getjob\n(id: %i)", JobNames(JobInfo[w][JobType]), w);
									JobInfo[w][JobText] = CreateDynamic3DTextLabel(JobInfo[w][JobTempText], -1, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, JobInfo[w][JobWorld], JobInfo[w][JobInterior], -1);
									break;
								}
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "The job limit(30) has been reached. Sorry!");
						}
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/makejob <mechanic(1), lawyer(2), pizza(3), biz-salesman(4)>");
					ClientMessenger(playerid, "FF0000", 3, "EXAMPLE{FFFFFF}: /makejob 3");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:makepropertymod(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6 || PlayerInfo[playerid][PropertyModerator] >= 2) {
				new targetid, propertymodlevel[9], largequery[144];
				if (!sscanf(params, "us[9]", targetid, propertymodlevel)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1){
							if(!strcmp(propertymodlevel, "none")){
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `property_mod` = 0 WHERE `id` = '%i'", PlayerInfo[playerid][DBID]);
								PlayerInfo[targetid][PropertyModerator] = 0;
							} else if(!strcmp(propertymodlevel, "mod")){
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `property_mod` = 1 WHERE `id` = '%i'", PlayerInfo[playerid][DBID]);
								PlayerInfo[targetid][PropertyModerator] = 1;
							} else if(!strcmp(propertymodlevel, "director")){
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `property_mod` = 2 WHERE `id` = '%i'", PlayerInfo[playerid][DBID]);
								PlayerInfo[targetid][PropertyModerator] = 2;
							} else {
								ClientMessenger(playerid, "FF0000", 5, "/makepropertymod <playerid/playername> <none/mod/director>");
							}
							if(strlen(largequery) != 0){
								if(playerid != targetid){
									format(message, sizeof(message), "You were made property %s by %s", propertymodlevel, str_replace("_", " ", GetPlayerNameEx(playerid)));
									ClientMessenger(targetid, "FF0000", 1, message);
								}
								format(message, sizeof(message), "%s has made %s a {800080}property %s{FFFFFF}", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)), propertymodlevel);
								ClientMessenger(playerid, "FF0000", 4, message);
								mysql_query(MySQL, largequery);
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/makepropertymod <playerid/playername> <none/mod/director>");
				}
				propertymodlevel[0] = '\0';
				largequery[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Director{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:makefactionmod(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6 || PlayerInfo[playerid][FactionModerator] >= 2) {
				new targetid, factionmodlevel[9], largequery[144];
				if (!sscanf(params, "us[9]", targetid, factionmodlevel)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1){
							if(!strcmp(factionmodlevel, "none")){
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `faction_mod` = 0 WHERE `id` = '%i'", PlayerInfo[playerid][DBID]);
								PlayerInfo[targetid][FactionModerator] = 0;
							} else if(!strcmp(factionmodlevel, "mod")){
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `faction_mod` = 1 WHERE `id` = '%i'", PlayerInfo[playerid][DBID]);
								PlayerInfo[targetid][FactionModerator] = 1;
							} else if(!strcmp(factionmodlevel, "director")){
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `faction_mod` = 2 WHERE `id` = '%i'", PlayerInfo[playerid][DBID]);
								PlayerInfo[targetid][FactionModerator] = 2;
							} else {
								ClientMessenger(playerid, "FF0000", 5, "/makefactionmod <playerid> <none/mod/director>");
							}
							if(strlen(largequery) != 0){
								if(playerid != targetid){
									format(message, sizeof(message), "You were made faction %s by %s", factionmodlevel, str_replace("_", " ", GetPlayerNameEx(playerid)));
									ClientMessenger(targetid, "FF0000", 1, message);
								}
								format(message, sizeof(message), "%s has made %s a {FF8C00}faction %s{FFFFFF}", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)), factionmodlevel);
								ClientMessenger(playerid, "FF0000", 4, message);
								mysql_query(MySQL, largequery);
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/makefactionmod <playerid> <none/mod/director>");
				}
				factionmodlevel[0] = '\0';
				largequery[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Director{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:ban(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Admin] >= 1) {
			new targetid, banreason[31], message[144];
			if(PlayerInfo[playerid][Admin] >= 2) {
				if (!sscanf(params, "us[31]", targetid, banreason)) {
					if(targetid != 65535){
						if(targetid != playerid) {
							if(PlayerInfo[targetid][Online] == 1) {
								if(PlayerInfo[targetid][Admin] >= PlayerInfo[playerid][Admin]){
									format(message, sizeof(message), "%s has attempted to ban %s which is same level, or higer level admin!", str_replace("_", " ", GetPlayerNameEx(playerid)),  str_replace("_", " ", GetPlayerNameEx(targetid)));
									ClientMessenger(playerid, "FF0000", 4, message);
								} else {
									format(message, sizeof(message), "%s has banned %s with reason %s", str_replace("_", " ", GetPlayerNameEx(playerid)),  str_replace("_", " ", GetPlayerNameEx(targetid)), banreason);
									ClientMessenger(playerid, "FF0000", 4, message);
									new playerip[16], Year, Month, Day, Hour, Minute, Second, largequery[256];
									GetPlayerIp(targetid, playerip, sizeof(playerip));
									getdate(Year, Month, Day);
									gettime(Hour, Minute, Second);
									mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `banned` (`BannedID`,`BannerID`,`BannedIP`,`BanReason`,`Bandate_d`,`Bandate_m`,`Bandate_y`,`Bantime_s`,`Bantime_m`,`Bantime_h`) VALUES ('%i','%i','%e','%e','%i','%i','%i','%i','%i','%i')", PlayerInfo[targetid][DBID], PlayerInfo[playerid][DBID], playerip, banreason, Day, Month, Year, Second, Minute, Hour);
									mysql_query(MySQL, largequery);
									largequery[0] = '\0';
									format(message, sizeof(message), "You were banned for %s by %s", banreason, str_replace("_", " ", GetPlayerNameEx(playerid)));
									ClientMessenger(targetid, "FF0000", 1, message);
									mysql_query(MySQL, "SELECT * FROM `banned` WHERE `Banned` = 1");
									format(message, sizeof(message), "[SERVER] %s has been banned by %s for %s (Players Banned %i)", str_replace("_", " ", GetPlayerNameEx(targetid)), str_replace("_", " ", GetPlayerNameEx(playerid)), banreason, cache_num_rows());
									foreach(Player, a){
										if(PlayerInfo[a][Online] == 1) {
											ClientMessenger(a, "FA8072", 3, message);
										}
									}
									PlayAudioStreamForPlayer(targetid, "https://raw.githubusercontent.com/chaos12135/sarp_forum/master/_files/ban_hammer.mp3");
									SetTimerEx("delaykick", 500, false, "i", targetid);
								}
							} else {
								ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "You can not ban yourself. Just leave like a normal person");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/ban <playerid/playername> <reason>");
				}
				message[0] = '\0';
				banreason[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(2), GetAdminRanks(2));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:sban(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Admin] >= 1) {
			new targetid, sbanreason[31], message[144];
			if (!sscanf(params, "us[31]", targetid, sbanreason)) {
				if(targetid != 65535){
					if(targetid != playerid) {
						if(PlayerInfo[targetid][Online] == 1) {
							if(PlayerInfo[targetid][Admin] >= PlayerInfo[playerid][Admin]){
								format(message, sizeof(message), "%s has attempted to sban %s which is same level, or higer level admin!", str_replace("_", " ", GetPlayerNameEx(playerid)),  str_replace("_", " ", GetPlayerNameEx(targetid)));
								ClientMessenger(playerid, "FF0000", 4, message);
							} else {
								format(message, sizeof(message), "%s has sbanned %s with reason %s", str_replace("_", " ", GetPlayerNameEx(playerid)),  str_replace("_", " ", GetPlayerNameEx(targetid)), sbanreason);
								ClientMessenger(playerid, "FF0000", 4, message);
								new playerip[16], Year, Month, Day, Hour, Minute, Second, largequery[256];
								GetPlayerIp(targetid, playerip, sizeof(playerip));
								getdate(Year, Month, Day);
								gettime(Hour, Minute, Second);
								mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `banned` (`BannedID`,`BannerID`,`BannedIP`,`BanReason`,`Bandate_d`,`Bandate_m`,`Bandate_y`,`Bantime_s`,`Bantime_m`,`Bantime_h`) VALUES ('%i','%i','%e','%e','%i','%i','%i','%i','%i','%i')", PlayerInfo[targetid][DBID], PlayerInfo[playerid][DBID], playerip, sbanreason, Day, Month, Year, Second, Minute, Hour);
								mysql_query(MySQL, largequery);
								largequery[0] = '\0';
								format(message, sizeof(message), "You were sbanned for %s", sbanreason);
								ClientMessenger(targetid, "FF0000", 1, message);
								PlayAudioStreamForPlayer(targetid, "https://raw.githubusercontent.com/chaos12135/sarp_forum/master/_files/ban_hammer.mp3");
								SetTimerEx("delaykick", 500, false, "i", targetid);
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "You can not ban yourself. Just leave like a normal person");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 5, "/sban <playerid/playername> <reason>");
			}
			message[0] = '\0';
			sbanreason[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:kick(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Admin] >= 1) {
			new targetid, kickreason[31], message[144];
			if(PlayerInfo[playerid][Admin] >= 2) {
				if (!sscanf(params, "us[31]", targetid, kickreason)) {
					if(targetid != 65535){
						if(targetid != playerid) {
							if(PlayerInfo[targetid][Online] == 1) {
								if(PlayerInfo[targetid][Admin] >= PlayerInfo[playerid][Admin]){
									format(message, sizeof(message), "%s has attempted to kick %s which is same level, or higer level admin!", str_replace("_", " ", GetPlayerNameEx(playerid)),  str_replace("_", " ", GetPlayerNameEx(targetid)));
									ClientMessenger(playerid, "FF0000", 4, message);
								} else {
									format(message, sizeof(message), "%s has kicked %s with reason %s", str_replace("_", " ", GetPlayerNameEx(playerid)),  str_replace("_", " ", GetPlayerNameEx(targetid)), kickreason);
									ClientMessenger(playerid, "FF0000", 4, message);
									format(message, sizeof(message), "You were kicked for %s", kickreason);
									ClientMessenger(targetid, "FF0000", 1, message);
									format(message, sizeof(message), "[SERVER] %s has been kicked by %s for %s", str_replace("_", " ", GetPlayerNameEx(targetid)), str_replace("_", " ", GetPlayerNameEx(playerid)), kickreason);
									foreach(Player, a){
										if(PlayerInfo[a][Online] == 1) {
											ClientMessenger(a, "FA8072", 3, message);
										}
									}
									SetTimerEx("delaykick", 500, false, "i", targetid);
								}
							} else {
								ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "You can not kick yourself. Just leave like a normal person");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else if (!sscanf(params, "u", targetid)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1) {
							if(targetid != playerid) {
								if(PlayerInfo[targetid][Admin] >= PlayerInfo[playerid][Admin]){
									format(message, sizeof(message), "%s has attempted to kick %s which is a higer level admin!", str_replace("_", " ", GetPlayerNameEx(playerid)),  str_replace("_", " ", GetPlayerNameEx(targetid)));
									ClientMessenger(playerid, "FF0000", 4, message);
								} else {
									ClientMessenger(targetid, "FF0000", 1, "You were kicked");
									format(message, sizeof(message), "%s has kicked %s", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)));
									ClientMessenger(playerid, "FF0000", 4, message);
									format(message, sizeof(message), "[SERVER] %s has been kicked by %s", str_replace("_", " ", GetPlayerNameEx(targetid)), str_replace("_", " ", GetPlayerNameEx(playerid)));
									foreach(Player, a){
										if(PlayerInfo[a][Online] == 1) {
											ClientMessenger(a, "FA8072", 3, message);
										}
									}
									SetTimerEx("delaykick", 500, false, "i", targetid);
								}
							} else {
								SendClientMessage(playerid, -1, "{FF0000}SERVER{FFFFFF}: You can not kick yourself. Just leave like a normal person");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/kick <playerid/playername> <reason (optional)>");
				}
				message[0] = '\0';
				kickreason[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(2), GetAdminRanks(2));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:getip(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Admin] >= 1) {
			new message[144];
			if(PlayerInfo[playerid][Admin] >= 4) {
				new targetid;
				if (!sscanf(params, "u", targetid)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1) {
							new largequery[250];
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", PlayerInfo[targetid][DBID]);
							mysql_query(MySQL, largequery);
							if(cache_num_rows() == 1){
								for(new a = 0; a < cache_num_rows(); a++){
									new getname[MAX_PLAYER_NAME], getrip[MAX_PLAYER_NAME], getlip[MAX_PLAYER_NAME];
									cache_get_field_content(a, "name", getname);
									cache_get_field_content(a, "lastlogin_ip", getlip);
									cache_get_field_content(a, "register_ip", getrip);
									format(message, sizeof(message), "Account Name: %s(%i)  |  Register IP: %s  |  Lastlogin IP: %s", getname, cache_get_field_content_int(a, "id"), getrip, getlip);
									ClientMessenger(playerid, "FFFFFF", 3, message);
									getlip[0] = '\0';
									getrip[0] = '\0';
									getname[0] = '\0';
								}
							} else {
								ClientMessenger(playerid, "FF0000", 1, "Something went wrong, please leave a message on /amsgs about this!");
							}
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/getip <playername/playerid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:ogetip(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Admin] >= 1) {
			new message[144];
			if(PlayerInfo[playerid][Admin] >= 4) {
				new targetid[15];
				if (!sscanf(params, "s[30]", targetid)) {
					new largequery[250];
					mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `name` = '%e' LIMIT 1", targetid);
					mysql_query(MySQL, largequery);
					if(cache_num_rows() == 1){
						for(new a = 0; a < cache_num_rows(); a++){
							new getname[MAX_PLAYER_NAME], getrip[MAX_PLAYER_NAME], getlip[MAX_PLAYER_NAME];
							cache_get_field_content(a, "name", getname);
							cache_get_field_content(a, "lastlogin_ip", getlip);
							cache_get_field_content(a, "register_ip", getrip);
							format(message, sizeof(message), "Account Name: %s(%i)  |  Register IP: %s  |  Lastlogin IP: %s", getname, cache_get_field_content_int(a, "id"), getrip, getlip);
							ClientMessenger(playerid, "FFFFFF", 3, message);
							getlip[0] = '\0';
							getrip[0] = '\0';
							getname[0] = '\0';
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That account does not exist!");
					}
					largequery[0] = '\0';
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/ogetip <player_name>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:matchip(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Admin] >= 1) {
			new message[144];
			if(PlayerInfo[playerid][Admin] >= 4) {
				new targetid[15];
				if (!sscanf(params, "s[15]", targetid)) {
					new largequery[250];
					mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `register_ip` = '%e' OR `lastlogin_ip` = '%e'", targetid, targetid);
					mysql_query(MySQL, largequery);
					if(cache_num_rows() >= 1){
						for(new a = 0; a < cache_num_rows(); a++){
							new getname[MAX_PLAYER_NAME], getrip[MAX_PLAYER_NAME], getlip[MAX_PLAYER_NAME];
							cache_get_field_content(a, "name", getname);
							cache_get_field_content(a, "lastlogin_ip", getlip);
							cache_get_field_content(a, "register_ip", getrip);
							format(message, sizeof(message), "Account Name: %s(%i)  |  Register IP: %s  |  Lastlogin IP: %s", getname, cache_get_field_content_int(a, "id"), getrip, getlip);
							ClientMessenger(playerid, "FFFFFF", 3, message);
							getlip[0] = '\0';
							getrip[0] = '\0';
							getname[0] = '\0';
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "No IP matches that!");
					}
					largequery[0] = '\0';
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/matchip <ip.address>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:checkbans(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Admin] >= 1) {
			new message[144];
			if(PlayerInfo[playerid][Admin] >= 2) {
				new targetid, amount;
				if (!sscanf(params, "ui", targetid, amount)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1){
							new largequery[250];
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", PlayerInfo[targetid][DBID]);
							mysql_query(MySQL, largequery);
							if(cache_num_rows() == 1){
								mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `banned` WHERE `BannedID` = %i ORDER BY `id` DESC LIMIT %i", PlayerInfo[targetid][DBID], amount);
								mysql_query(MySQL, largequery);
								for(new g = 0; g < cache_num_rows(); g++){
									if(amount != 0){
										new fixid = cache_get_field_content_int(g, "BannerID");
										new fixip[15], fixreason[50];
										cache_get_field_content(g, "BannedIP", fixip);
										cache_get_field_content(g, "BanReason", fixreason);
										new fixm = cache_get_field_content_int(g, "Bandate_m");
										new fixd = cache_get_field_content_int(g, "Bandate_d");
										new fixy = cache_get_field_content_int(g, "Bandate_y");
										new fixba = cache_get_field_content_int(g, "Banned");
										new tempname[MAX_PLAYER_NAME];
										if(fixid != -1){
											mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", fixid);
											mysql_query(MySQL, largequery);
											cache_get_field_content(0, "name", tempname);
										} else {
											format(tempname, 30, "ANTICHEAT");
										}
										new StillBanned[5];
										if(fixba == 1){
											format(StillBanned, 5, "Yes");
										} else {
											format(StillBanned, 5, "No");
										}
										format(message, sizeof(message), "Name: [%s(%i) (%s)],  Reason: [%s],  Banned By: [%s(%i)],  Banned On: [%i/%i/%i],  Banned: [%s]\n", GetPlayerNameEx(targetid), PlayerInfo[targetid][DBID], fixip, fixreason, tempname, fixid, fixm, fixd, fixy, StillBanned);
										strcat(ReadAllMessages[playerid], message);
										//amount = amount - 1;
										mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `banned` WHERE `BannedID` = %i ORDER BY `id` DESC LIMIT %i", PlayerInfo[targetid][DBID], amount);
										mysql_query(MySQL, largequery);
										fixreason[0] = '\0';
										StillBanned[0] = '\0';
										fixip[0] = '\0';
									}
								}
								ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, "Check My Bans", ReadAllMessages[playerid], "Done", "");
								ReadAllMessages[playerid][0] = '\0';
							} else {
								ClientMessenger(playerid, "FF0000", 1, "That account doesn't exist!");
							}
							largequery[0] = '\0';
						} else {        
							ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}       
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/checkbans <playerid/player_name> <limit>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(2), GetAdminRanks(2));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:ocheckbans(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Admin] >= 1) {
			new message[144];
			if(PlayerInfo[playerid][Admin] >= 2) {
				new targetid[MAX_PLAYER_NAME], amount;
				if (!sscanf(params, "s[30]i", targetid, amount)) {
					new largequery[250];
					mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `name` = '%e' LIMIT 1", targetid);
					mysql_query(MySQL, largequery);
					if(cache_num_rows() == 1){
						new taid = cache_get_field_content_int(0, "id");
						mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `banned` WHERE `BannedID` = %i ORDER BY `id` DESC LIMIT %i", taid, amount);
						mysql_query(MySQL, largequery);
						for(new g = 0; g < cache_num_rows(); g++){
							if(amount != 0){
								new fixid = cache_get_field_content_int(g, "BannerID");
								new fixip[15], fixreason[50];
								cache_get_field_content(g, "BannedIP", fixip);
								cache_get_field_content(g, "BanReason", fixreason);
								new fixm = cache_get_field_content_int(g, "Bandate_m");
								new fixd = cache_get_field_content_int(g, "Bandate_d");
								new fixy = cache_get_field_content_int(g, "Bandate_y");
								new fixba = cache_get_field_content_int(g, "Banned");
								new tempname[MAX_PLAYER_NAME], targetidd = cache_get_field_content_int(0, "BannedID");
								if(fixid != -1){
									mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", fixid);
									mysql_query(MySQL, largequery);
									cache_get_field_content(0, "name", tempname);
								} else {
									format(tempname, 30, "ANTICHEAT");
								}
								new StillBanned[5];
								if(fixba == 1){
									format(StillBanned, 5, "Yes");
								} else {
									format(StillBanned, 5, "No");
								}
								format(message, sizeof(message), "Name: [%s(%i) (%s)],  Reason: [%s],  Banned By: [%s(%i)],  Banned On: [%i/%i/%i],  Banned: [%s]\n", targetid, targetidd, fixip, fixreason, tempname, fixid, fixm, fixd, fixy, StillBanned);
								strcat(ReadAllMessages[playerid], message);
								//amount = amount - 1;
								mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `banned` WHERE `BannedID` = %i ORDER BY `id` DESC LIMIT %i", taid, amount);
								mysql_query(MySQL, largequery);
								fixreason[0] = '\0';
								StillBanned[0] = '\0';
								fixip[0] = '\0';
							}
						}
						ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, "Check My Bans", ReadAllMessages[playerid], "Done", "");
						ReadAllMessages[playerid][0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That account doesn't exist!");
					}
					largequery[0] = '\0';
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/ocheckbans <player_name> <limit>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(2), GetAdminRanks(2));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:checkbansbyme(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Admin] >= 1) {
			new message[144];
			if(PlayerInfo[playerid][Admin] >= 1) {
				new amount;
				if (!sscanf(params, "i", amount)) {
					new largequery[250];
					mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `banned` WHERE `BannerID` = %i ORDER BY `id` DESC LIMIT %i", PlayerInfo[playerid][DBID], amount);
					mysql_query(MySQL, largequery);
					for(new g = 0; g < cache_num_rows(); g++){
						if(amount != 0){
							new fixid = cache_get_field_content_int(g, "BannedID");
							new fixip[15], fixreason[50];
							cache_get_field_content(g, "BannedIP", fixip);
							cache_get_field_content(g, "BanReason", fixreason);
							new fixm = cache_get_field_content_int(g, "Bandate_m");
							new fixd = cache_get_field_content_int(g, "Bandate_d");
							new fixy = cache_get_field_content_int(g, "Bandate_y");
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", fixid);
							mysql_query(MySQL, largequery);
							new tempname[MAX_PLAYER_NAME];
							cache_get_field_content(0, "name", tempname);
							format(message, sizeof(message), "%s(%s), Reason: %s, Banned On: %i/%i/%i\n", tempname, fixip, fixreason, fixm, fixd, fixy);
							strcat(ReadAllMessages[playerid], message);
							//amount = amount - 1;
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `banned` WHERE `BannerID` = %i ORDER BY `id` DESC LIMIT %i", PlayerInfo[playerid][DBID], amount);
							mysql_query(MySQL, largequery);
							fixreason[0] = '\0';
							fixip[0] = '\0';
						}
					}
					ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, "Check My Bans", ReadAllMessages[playerid], "Done", "");
					ReadAllMessages[playerid][0] = '\0';
					largequery[0] = '\0';
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/checkbansbyme <limit>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(1), GetAdminRanks(1));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:unbandate(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Admin] >= 1) {
			new message[144];
			if(PlayerInfo[playerid][Admin] >= 4) {
				new targetid[MAX_PLAYER_NAME], month, day, year;
				if (!sscanf(params, "s[31]iii", targetid, month, day, year)) {
					new Year2, useless;
					getdate(Year2, useless, useless);
					if(month >= 1 && month <= 12){
						if(day >= 1 && day <= 30){
							if(year >= Year2){
								new largequery[250];
								mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `name` = '%e' LIMIT 1", targetid);
								mysql_query(MySQL, largequery);
								if(cache_num_rows() == 1){
									mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `banned` WHERE `BannedID` = %i AND `Banned` = 1 LIMIT 1", cache_get_field_content_int(0, "id"));
									mysql_query(MySQL, largequery);
									if(cache_num_rows() == 1){
										new fixid = cache_get_field_content_int(0, "BannedID");
										new fixid2 = cache_get_field_content_int(0, "id");
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `banned` SET `UnBandate_d` = %i, `UnBandate_m` = %i, `UnBandate_y` = %i WHERE `id` = %i LIMIT 1", day, month, year, fixid2);
										mysql_query(MySQL, largequery);
										mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", fixid);
										mysql_query(MySQL, largequery);
										new tempname[MAX_PLAYER_NAME];
										cache_get_field_content(0, "name", tempname);
										format(message, sizeof(message), "%s has set the unban date for %s to M:[%i] D:[%i] Y:[%i]", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", tempname), month, day, year);
										ClientMessenger(playerid, "FF0000", 4, message);
										ClientMessenger(playerid, "FF0000", 1, "Please make sure to check /time. As the unban date will go by the server date & time.");
										ClientMessenger(playerid, "FFFFFF", 3, "If you've set the date before today, the player will never be unbanned.");
									} else {
										ClientMessenger(playerid, "FF0000", 1, "That person is not banned!");
									}
								} else {
									ClientMessenger(playerid, "FF0000", 1, "That person doesn't exist!");
								}
								largequery[0] = '\0';
							} else {
								ClientMessenger(playerid, "FF0000", 1, "You can't select a year before the current year");
								ClientMessenger(playerid, "FFFFFF", 3, "If you wish for this player to never be unbanned put the following in");
								ClientMessenger(playerid, "FFFFFF", 3, "/unbandate <playername> 12 30 9999");
								ClientMessenger(playerid, "FFFFFF", 3, "By default, that player is already set to be unbanned on that day anyways.");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "You can only select 1 out of 30 days");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "There are only 12 months in a year");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/unbandate <player_name> <month> <day> <year>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:unban(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Admin] >= 1) {
			new message[144];
			if(PlayerInfo[playerid][Admin] >= 4) {
				new targetid[MAX_PLAYER_NAME];
				if (!sscanf(params, "s[31]", targetid)) {
					new largequery[250];
					mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `name` = '%e' LIMIT 1", targetid);
					mysql_query(MySQL, largequery);
					if(cache_num_rows() == 1){
						mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `banned` WHERE `BannedID` = %i AND `Banned` = 1 LIMIT 1", cache_get_field_content_int(0, "id"));
						mysql_query(MySQL, largequery);
						if(cache_num_rows() == 1){
							new fixid = cache_get_field_content_int(0, "BannedID");
							mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `banned` SET `Banned` = 0 WHERE `BannedID` = %i LIMIT 1", fixid);
							mysql_query(MySQL, largequery);
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", fixid);
							mysql_query(MySQL, largequery);
							new tempname[MAX_PLAYER_NAME];
							cache_get_field_content(0, "name", tempname);
							format(message, sizeof(message), "%s has unbanned %s", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", tempname));
							ClientMessenger(playerid, "FF0000", 4, message);
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That person is not banned!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That person doesn't exist!");
					}
					largequery[0] = '\0';
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/unban <player_name>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:checkbanip(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Admin] >= 1) {
			new message[144];
			if(PlayerInfo[playerid][Admin] >= 2) {
				new targetid[16];
				if (!sscanf(params, "s[17]", targetid)) {
					new largequery[250];
					mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `banned` WHERE `BannedIP` = '%e' AND `Banned` = 1 LIMIT 1", targetid);
					mysql_query(MySQL, largequery);
					if(cache_num_rows() == 1){
						new tempname[MAX_PLAYER_NAME], tempname2[MAX_PLAYER_NAME], tempip[15], tempreason[50], thedannerid;
						cache_get_field_content(0, "BanReason", tempreason);
						cache_get_field_content(0, "BannedIP", tempip);
						if(cache_get_field_content_int(0, "BannerID") != -1){
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", cache_get_field_content_int(0, "BannerID"));
							mysql_query(MySQL, largequery);
							cache_get_field_content(0, "name", tempname);
							thedannerid = cache_get_field_content_int(0, "id");
						} else {
							format(tempname, 30, "ANTI-CHEAT");
							thedannerid = -1;
						}
						mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `banned` WHERE `BannedIP` = '%e' LIMIT 1", targetid);
						mysql_query(MySQL, largequery);
						mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", cache_get_field_content_int(0, "BannedID"));
						mysql_query(MySQL, largequery);
						cache_get_field_content(0, "name", tempname2);
						format(message, sizeof(message), "{FF0000}%s{FFFFFF}(%s) was banned by: {00FFFF}%s{FFFFFF}(%i) for {FFFF00}%s{FFFFFF}\n", tempname2, tempip, tempname, thedannerid, tempreason);
						strcat(ReadAllMessages[playerid], message);
						mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `name` = '%e' LIMIT 1", tempname2);
						mysql_query(MySQL, largequery);
						mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `banned` WHERE `BannedID` = %i LIMIT 1", cache_get_field_content_int(0, "id"));
						mysql_query(MySQL, largequery);
						format(message, sizeof(message), "Was banned on: %i/%i/%i %i:%i:%i\n", cache_get_field_content_int(0, "Bandate_m"), cache_get_field_content_int(0, "Bandate_d"), cache_get_field_content_int(0, "Bandate_y"), cache_get_field_content_int(0, "Bantime_h"), cache_get_field_content_int(0, "Bantime_m"), cache_get_field_content_int(0, "Bantime_s"));
						strcat(ReadAllMessages[playerid], message);
						format(message, sizeof(message), "Will be unbanned on: %i/%i/%i", cache_get_field_content_int(0, "UnBandate_m"), cache_get_field_content_int(0, "UnBandate_d"), cache_get_field_content_int(0, "UnBandate_y"));
						strcat(ReadAllMessages[playerid], message);
						ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, "Check Banned IP", ReadAllMessages[playerid], "Done", "");
						ReadAllMessages[playerid][0] = '\0';
						tempname[0] = '\0';
						tempname2[0] = '\0';
						tempip[0] = '\0';
						tempreason[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That ip is not banned!");
					}
					largequery[0] = '\0';
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/checkbanip <ip address>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(2), GetAdminRanks(2));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:checkban(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Admin] >= 1) {
			new message[144];
			if(PlayerInfo[playerid][Admin] >= 2) {
				new targetid[MAX_PLAYER_NAME];
				if (!sscanf(params, "s[31]", targetid)) {
					new largequery[250];
					mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `name` = '%e' LIMIT 1", targetid);
					mysql_query(MySQL, largequery);
					if(cache_num_rows() == 1){
						mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `banned` WHERE `BannedID` = %i AND `Banned` = 1 LIMIT 1", cache_get_field_content_int(0, "id"));
						mysql_query(MySQL, largequery);
						if(cache_num_rows() == 1){
							new tempname[MAX_PLAYER_NAME], tempreason[50], tempip[15], thedannerid;
							cache_get_field_content(0, "BanReason", tempreason);
							cache_get_field_content(0, "BannedIP", tempip);
							if(cache_get_field_content_int(0, "BannerID") != -1){
								mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", cache_get_field_content_int(0, "BannerID"));
								mysql_query(MySQL, largequery);
								cache_get_field_content(0, "name", tempname);
								thedannerid = cache_get_field_content_int(0, "id");
							} else {
								format(tempname, 30, "ANTI-CHEAT");
								thedannerid = -1;
							}
							format(message, sizeof(message), "{FF0000}%s{FFFFFF}(%s) was banned by: {00FFFF}%s{FFFFFF}(%i) for {FFFF00}%s{FFFFFF}\n", targetid, tempip, tempname, thedannerid, tempreason);
							strcat(ReadAllMessages[playerid], message);
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `name` = '%e' LIMIT 1", targetid);
							mysql_query(MySQL, largequery);
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `banned` WHERE `BannedID` = %i LIMIT 1", cache_get_field_content_int(0, "id"));
							mysql_query(MySQL, largequery);
							format(message, sizeof(message), "Was banned on: %i/%i/%i %i:%i:%i\n", cache_get_field_content_int(0, "Bandate_m"), cache_get_field_content_int(0, "Bandate_d"), cache_get_field_content_int(0, "Bandate_y"), cache_get_field_content_int(0, "Bantime_h"), cache_get_field_content_int(0, "Bantime_m"), cache_get_field_content_int(0, "Bantime_s"));
							strcat(ReadAllMessages[playerid], message);
							format(message, sizeof(message), "Will be unbanned on: %i/%i/%i", cache_get_field_content_int(0, "UnBandate_m"), cache_get_field_content_int(0, "UnBandate_d"), cache_get_field_content_int(0, "UnBandate_y"));
							strcat(ReadAllMessages[playerid], message);
							ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, "Check Banned Player", ReadAllMessages[playerid], "Done", "");
							ReadAllMessages[playerid][0] = '\0';
							tempip[0] = '\0';
							tempreason[0] = '\0';
							tempname[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That person is not banned!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That person doesn't exist!");
					}
					largequery[0] = '\0';
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/checkban <player_name>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(2), GetAdminRanks(2));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:skick(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Admin] >= 1) {
			new targetid, skickreason[31], message[144];
			if (!sscanf(params, "us[31]", targetid, skickreason)) {
				if(targetid != 65535){
					if(targetid != playerid) {
						if(PlayerInfo[targetid][Online] == 1) {
							if(PlayerInfo[targetid][Admin] >= PlayerInfo[playerid][Admin]){
								format(message, sizeof(message), "%s has attempted to skick %s which is same level, or higer level admin!", str_replace("_", " ", GetPlayerNameEx(playerid)),  str_replace("_", " ", GetPlayerNameEx(targetid)));
								ClientMessenger(playerid, "FF0000", 4, message);
							} else {
								format(message, sizeof(message), "%s has skicked %s with reason %s", str_replace("_", " ", GetPlayerNameEx(playerid)),  str_replace("_", " ", GetPlayerNameEx(targetid)), skickreason);
								ClientMessenger(playerid, "FF0000", 4, message);
								format(message, sizeof(message), "You were skicked for %s", skickreason);
								ClientMessenger(targetid, "FF0000", 1, message);

								SetTimerEx("delaykick", 500, false, "i", targetid);
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "You can not kick yourself. Just leave like a normal person");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
				}
			} else if (!sscanf(params, "u", targetid)) {
				if(targetid != 65535){
					if(PlayerInfo[targetid][Online] == 1) {
						if(targetid != playerid) {
							if(PlayerInfo[targetid][Admin] >= PlayerInfo[playerid][Admin]){
								format(message, sizeof(message), "%s has attempted to skick %s which is a higer level admin!", str_replace("_", " ", GetPlayerNameEx(playerid)),  str_replace("_", " ", GetPlayerNameEx(targetid)), skickreason);
								ClientMessenger(playerid, "FF0000", 4, message);
							} else {
								ClientMessenger(targetid, "FF0000", 1, "You were skicked");
								format(message, sizeof(message), "%s has skicked %s", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)));
								ClientMessenger(playerid, "FF0000", 4, message);
								SetTimerEx("delaykick", 500, false, "i", targetid);
							}
						} else {
							SendClientMessage(playerid, -1, "{FF0000}SERVER{FFFFFF}: You can not kick yourself. Just leave like a normal person");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 5, "/skick <playerid/playername> <reason (optional)>");
			}
			message[0] = '\0';
			skickreason[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:setskin(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 2) {
				new targetid, skinid;
				if (!sscanf(params, "ui", targetid, skinid)) {
					if(targetid != 65535) {
						if(PlayerInfo[targetid][Online] == 1) {
							new largequery[144];
							format(message, sizeof(message), "%s has set %s skin to %i", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)), skinid);
							ClientMessenger(playerid, "FF0000", 4, message);
							mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `skin`=%i WHERE `id` = %i LIMIT 1", skinid, PlayerInfo[targetid][DBID]);
							mysql_query(MySQL, largequery);
							SetPlayerSkin(targetid, skinid);
							PlayerInfo[targetid][Skin] = skinid;
							format(message, sizeof(message), "Your skin was set to %i by %s", skinid, str_replace("_", " ", GetPlayerNameEx(playerid)));
							ClientMessenger(targetid, "FFFFFF", 3, message);
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}                       
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/setskin <playerid/playername> <skinid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(2), GetAdminRanks(2));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


FindClosestHospital(playerid)
{
	new Float:dist = FLOAT_INFINITY, closest_hospital;
	new Float:this_dist;
	for(new i = 1; i < MAX_HOSPITALS; i++)
	{
		this_dist = GetPlayerDistanceFromPoint(playerid, HospitalInfo[i][HPX], HospitalInfo[i][HPY], HospitalInfo[i][HPZ]);
		if(this_dist < dist)
		{
			closest_hospital = i;
			dist = this_dist;
		}
	}
	if(LastHospitalID[closest_hospital] == 1){
		return closest_hospital;
	} else {
		closest_hospital = 1;
		return closest_hospital;
	}
	//SendClientMessage(playerid, -1, closest_hospital);
}

COMMAND:setfname(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4) {
				new newfakename[MAX_PLAYER_NAME+1];
				if (!sscanf(params, "s[30]", newfakename)) { 
					if(strlen(newfakename) < MAX_PLAYER_NAME){
						if(strcmp(newfakename, "nil")){
							new largequery[144];
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `fakename` = '%e' OR `name` = '%e' LIMIT 1", str_replace(" ", "_", newfakename), str_replace(" ", "_", newfakename));
							mysql_query(MySQL, largequery);
							new output[10][MAX_PLAYER_NAME], count = 0;
							count = strexplode(output, newfakename, "_");
							if(cache_num_rows() == 0){
								mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `surnames` WHERE `surname` = '%e' LIMIT 1", output[sizeof(count)]);
								mysql_query(MySQL, largequery);
								if(cache_get_field_content_int(0, "playerid") == PlayerInfo[playerid][DBID] || cache_num_rows() == 0){
									format(message, sizeof(message), "%s has set their fake name to %s", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", newfakename));
									ClientMessenger(playerid, "FF0000", 4, message);
									format(PlayerInfo[playerid][FakeName], MAX_PLAYER_NAME, newfakename);
									SetPlayerName(playerid, str_replace(" ", "_", newfakename));
									mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `fakename`='%e' WHERE `name` = '%e' LIMIT 1", str_replace(" ", "_", newfakename), PlayerInfo[playerid][RealName]);
									mysql_query(MySQL, largequery);
								} else {
									printf("%s(%i) attempted to change name with surname of: %s",GetPlayerNameEx(playerid), count, output[sizeof(count)]);
									ClientMessenger(playerid, "FF0000", 1, "Sorry, that name is restricted. You can not set your name to that!");
								}
							} else if(cache_num_rows() == 1 && !strcmp(PlayerInfo[playerid][RealName], str_replace(" ", "_", newfakename))){
								format(message, sizeof(message), "%s has set their fake name to %s", GetPlayerNameEx(playerid), str_replace("_", " ", newfakename));
								ClientMessenger(playerid, "FF0000", 4, message);
								format(PlayerInfo[playerid][FakeName], MAX_PLAYER_NAME, newfakename);
								SetPlayerName(playerid, str_replace(" ", "_", newfakename));
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `fakename`='%e' WHERE `name` = '%e' LIMIT 1", str_replace(" ", "_", newfakename), PlayerInfo[playerid][RealName]);
								mysql_query(MySQL, largequery);
							} else {
								ClientMessenger(playerid, "FF0000", 1, "That name is already registered or is currently in use!");
							}
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "You can not set your name to this!");
						}
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/setfname <newname>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:nonewbie(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1){
		new message[144];
		if(PlayerInfo[playerid][Helper] >= 2 || PlayerInfo[playerid][Admin] >= 3){
			if(NoNewbie == 0){
				foreach(Player, i)
				{
					if(PlayerInfo[i][Online] == 1){
						ClientMessenger(i, "FF0000", 1, "Newbie chat has been disabled!");
					}
				}
				NoNewbie = 1;
				
				if(PlayerInfo[playerid][Helper] >= 1) {
					format(message, sizeof(message), "{00FFFF}%s %s{FFFFFF} has disabled newbie chat!", GetHelperRank(PlayerInfo[playerid][Helper]), str_replace("_", " ", GetPlayerNameEx(playerid)));
				} else if(PlayerInfo[playerid][Admin] >= 2) {
					format(message, sizeof(message), "%s has disabled newbie chat!", str_replace("_", " ", GetPlayerNameEx(playerid)));
				
				}
				ClientMessenger(playerid, "FF0000", 4, message);
			} else if(NoNewbie == 1){
				foreach(Player, i)
				{
					if(PlayerInfo[i][Online] == 1){
						ClientMessenger(i, "FF0000", 1, "Newbie chat has been enabled!");
					}
				}
				if(PlayerInfo[playerid][Helper] >= 1) {
					format(message, sizeof(message), "{00FFFF}%s %s{FFFFFF} has enabled newbie chat!", GetHelperRank(PlayerInfo[playerid][Helper]), str_replace("_", " ", GetPlayerNameEx(playerid)));
				} else if(PlayerInfo[playerid][Admin] >= 2) {
					format(message, sizeof(message), "%s has enabled newbie chat!", str_replace("_", " ", GetPlayerNameEx(playerid)));
				}
				ClientMessenger(playerid, "FF0000", 4, message);
			}
		} else {
			format(message, sizeof(message), "You are not {00FFFF}Senior Helper{FFFFFF} or {%s}%s", GetAdminRanksC(3), GetAdminRanks(3));
			ClientMessenger(playerid, "FF0000", 1, message);
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:helpers(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) /* Player must be logged in to use commands */
	{
		new message[144];
		SendClientMessage(playerid, -1, "{FFFFFF}~ ~ {00FFFF}Helper Team{FFFFFF} ~ ~"); /* The like table starter IG */
		foreach(Player, i)
		{
			if(PlayerInfo[i][Helper] >= 1) /* If player is helper or above, display them all here */
			{
				format(message, sizeof(message), "- {00FFFF}%s{FFFFFF} %s", GetPlayerHelperRank(i), str_replace("_", " ", GetPlayerNameEx(i))); /* Format: *RANK PLAYERNAME */
				SendClientMessage(playerid, -1, message);
			}
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:admins(playerid, params[]) /* /admins */
{
	if(PlayerInfo[playerid][Online] == 1) /* Player must be logged in to use commands */
	{
		new message[144];
		SendClientMessage(playerid, -1, "{FFFFFF}~ ~ {FFFFFF}Admin Team{FFFFFF} ~ ~");
		foreach(Player, i)
		{
			//if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[i][Admin] >= 1)
			{
				format(message, sizeof(message), "- {%s}%s{FFFFFF} %s", GetAdminRanksC(PlayerInfo[i][Admin]), GetAdminRanks(PlayerInfo[i][Admin]), str_replace("_", " ", GetPlayerNameEx(i)));
				SendClientMessage(playerid, -1, message);
			}
			//} else {
			//  if(PlayerInfo[i][Admin] >= 2)
			//  {
			//      format(message, sizeof(message), "- {%s}%s{FFFFFF} %s", GetAdminRanksC(PlayerInfo[i][Admin]), GetAdminRanks(PlayerInfo[i][Admin]), str_replace("_", " ", GetPlayerNameEx(i)));
			//      SendClientMessage(playerid, -1, message);
			//  }
			//}
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:makeadmin(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Admin] >= 1 || IsPlayerAdmin(playerid)) {
			new largequery[256], message[128], adminranklevel, targetid;
			if(PlayerInfo[playerid][Admin] >= 6 || IsPlayerAdmin(playerid)) {
				if (!sscanf(params, "ui", targetid, adminranklevel)) {
					if(targetid != 65535) {
						if(PlayerInfo[targetid][Online] == 1) {
							if(adminranklevel >= 0) {
								if(PlayerInfo[playerid][Admin] > adminranklevel || IsPlayerAdmin(playerid) || PlayerInfo[playerid][Admin] >= 7) {
									if(PlayerInfo[playerid][Admin] >= PlayerInfo[targetid][Admin] || IsPlayerAdmin(playerid)){
										new RandomAPassword = random(9999);
										CheckAPasswordIsAbovek:
										if(RandomAPassword < 1000){
											RandomAPassword = random(9999);
											goto CheckAPasswordIsAbovek;
										}
										if(adminranklevel == 0 || adminranklevel == 1){
											format(PlayerInfo[targetid][NewbieTag], 31, "Player");
											mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `admin` = %i, `apassword` = %i, `newbietag` = 'Player' WHERE `id` = %i", adminranklevel, RandomAPassword, PlayerInfo[targetid][DBID]);
										} else {
											format(PlayerInfo[targetid][NewbieTag], 31, GetAdminRanks(adminranklevel));
											mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `admin` = %i, `apassword` = %i, `newbietag` = '%e' WHERE `id` = %i", adminranklevel, RandomAPassword, GetAdminRanks(adminranklevel), PlayerInfo[targetid][DBID]);
										}
										mysql_query(MySQL, largequery);
										
										format(message, sizeof(message), "{FF0000}SERVER{FFFFFF}: You have been given {%s}%s{FFFFFF} by %s!", GetAdminRanksC(adminranklevel), GetAdminRanks(adminranklevel), str_replace("_", " ", GetPlayerNameEx(playerid)));
										SendClientMessage(targetid, -1, message);
										format(message, sizeof(message), "{FF0000}SERVER{FFFFFF}: Your admin password is: %i!", RandomAPassword);
										SendClientMessage(targetid, -1, message);
										
										format(message, sizeof(message), "%s has made %s a {%s}%s", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)), GetAdminRanksC(adminranklevel), GetAdminRanks(adminranklevel));
										ClientMessenger(playerid, "FF0000", 4, message);
										PlayerInfo[targetid][Admin] = adminranklevel;
										largequery[0] = '\0';
									} else {
										ClientMessenger(playerid, "FF0000", 1, "You can not touch that players admin level, they are higher then you!");
									}
								} else {
									ClientMessenger(playerid, "FF0000", 1, "You can not make that player the same level, or higher level admin then you!");
								}
							} else {
								ClientMessenger(playerid, "FF0000", 1, "You can not go below 0!");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/makeadmin <playerid/playername> <0/1/2/3/4/5/6>");
				}
				message[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
			message[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:makehelper(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* Player must be logged in to use commands */
		if(PlayerInfo[playerid][Helper] >= 1 || PlayerInfo[playerid][Admin] >= 5) { /* Player must be a helper to even view this command */
			new targetid, helper_rank_name[10], helper_rank_id = 0, message[144];
			if (!sscanf(params, "us[10]", targetid, helper_rank_name)) { /* Makes sure there are minmum of two options */
				if(targetid != 65535){
					if(PlayerInfo[targetid][Online] == 1) { /* Is the target that they want to promote logged in? */
						if(PlayerInfo[playerid][Helper] >= 3 || PlayerInfo[playerid][Admin] >= 5) /* Player must be at least head helper to use this command */
						{
						
							if(!strcmp("none", helper_rank_name)) {
								helper_rank_id = 0;
							} else if(!strcmp("helper", helper_rank_name)) {
								helper_rank_id = 1;
							} else if(!strcmp("senior", helper_rank_name)) {
								helper_rank_id = 2;
							} else if(!strcmp("head", helper_rank_name)) {
								helper_rank_id = 3;
							} else if(!strcmp("director", helper_rank_name)) {
								helper_rank_id = 4;
							} else {
								return 1;
							}
							
							if(PlayerInfo[playerid][Helper] > helper_rank_id || PlayerInfo[playerid][Helper] == 4 || PlayerInfo[playerid][Admin] >= 5) { /* If player is not director, they can not promote anyone to equal or higher of their rank */
								if(helper_rank_id == 0 || helper_rank_id == 1 || helper_rank_id == 2 || helper_rank_id == 3 || helper_rank_id == 4)
								{
									if(helper_rank_id == 0) { /* Player was removed from the helper team */
										if (PlayerInfo[playerid][Admin] >= 5 && PlayerInfo[playerid][Helper] == 0) {
											format(message, sizeof(message), "{FFFFFF}You have been removed from the {00FFFF}Helper Team{FFFFFF} by {%s}%s{FFFFFF} %s!", GetAdminRanksC(PlayerInfo[playerid][Admin]), GetAdminRanks(PlayerInfo[playerid][Admin]), str_replace("_", " ", GetPlayerNameEx(playerid)));
											ClientMessenger(targetid, "FFFFFF", 3, message);
											format(PlayerInfo[targetid][NewbieTag], 31, "Player");
											if(targetid != playerid) { /* Player will not receive this message if they are promoting themselves */
												format(message, sizeof(message), "You removed %s from the {00FFFF}Helper Team{FFFFFF}!", str_replace("_", " ", GetPlayerNameEx(targetid)));
												ClientMessenger(playerid, "FF0000", 1, message);
											}
											format(message, sizeof(message), "%s has removed %s from helper", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)));
											ClientMessenger(playerid, "FF0000", 4, message);
										} else {
											format(message, sizeof(message), "{FFFFFF}You have been removed from the {00FFFF}Helper Team{FFFFFF} by {00FFFF}%s{FFFFFF} %s!", GetPlayerHelperRank(playerid), str_replace("_", " ", GetPlayerNameEx(playerid)));
											ClientMessenger(targetid, "FFFFFF", 3, message);
											format(PlayerInfo[targetid][NewbieTag], 31, "Player");
											if(targetid != playerid) { /* Player will not receive this message if they are promoting themselves */
												format(message, sizeof(message), "You removed %s from the {00FFFF}Helper Team{FFFFFF}!", str_replace("_", " ", GetPlayerNameEx(targetid)));
												ClientMessenger(playerid, "FF0000", 1, message);
											}
											format(message, sizeof(message), "{00FFFF}%s %s{FFFFFF} has removed %s from helper", GetHelperRank(PlayerInfo[playerid][Helper]), str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)));
											ClientMessenger(playerid, "FF0000", 4, message);
										}
									} else if(helper_rank_id == PlayerInfo[targetid][Helper]) {
											SendClientMessage(playerid, -1, "{FF0000}SERVER{FFFFFF}: The rank is the same before you edited it, nothing has changed!");
									} else if(helper_rank_id == 1 || helper_rank_id == 2 || helper_rank_id == 3 || helper_rank_id == 4) { /* Player was promoted/demoted to Helper/Senior/Head/Director */
										if (PlayerInfo[playerid][Admin] >= 5 && PlayerInfo[playerid][Helper] == 0) {
											format(PlayerInfo[targetid][NewbieTag], 31, GetHelperRank(helper_rank_id));
											if (PlayerInfo[targetid][Helper] < helper_rank_id) {
												format(message, sizeof(message), "{FFFFFF}You have been promoted to {00FFFF}%s{FFFFFF} by {%s}%s{FFFFFF} %s!", GetHelperRank(helper_rank_id) ,GetAdminRanksC(PlayerInfo[playerid][Admin]), GetAdminRanks(PlayerInfo[playerid][Admin]), str_replace("_", " ", GetPlayerNameEx(playerid)));
												ClientMessenger(targetid, "FFFFFF", 3, message);
											} else {
												format(message, sizeof(message), "{FFFFFF}You have been demoted to {00FFFF}%s{FFFFFF} by {%s}%s{FFFFFF} %s!", GetHelperRank(helper_rank_id) ,GetAdminRanksC(PlayerInfo[playerid][Admin]), GetAdminRanks(PlayerInfo[playerid][Admin]), str_replace("_", " ", GetPlayerNameEx(playerid)));
												ClientMessenger(targetid, "FFFFFF", 3, message);
											}
											format(message, sizeof(message), "%s has given {00FFFF}%s{FFFFFF} for %s", str_replace("_", " ", GetPlayerNameEx(playerid)), GetHelperRank(helper_rank_id), str_replace("_", " ", GetPlayerNameEx(targetid)));
											ClientMessenger(playerid, "FF0000", 4, message);
											if(targetid != playerid) { /* Player will not receive this message if they are promoting themselves */
												format(message, sizeof(message), "You made %s {00FFFF}%s{FFFFFF}!", str_replace("_", " ", GetPlayerNameEx(targetid)), GetHelperRank(helper_rank_id));
												ClientMessenger(playerid, "FF0000", 1, message);
											}
										} else {
											format(PlayerInfo[targetid][NewbieTag], 31, GetHelperRank(helper_rank_id));
											if (PlayerInfo[targetid][Helper] < helper_rank_id) {
												format(message, sizeof(message), "{FFFFFF}You have been promoted to {00FFFF}%s{FFFFFF} by {00FFFF}%s{FFFFFF} %s!", GetHelperRank(helper_rank_id) ,GetPlayerHelperRank(playerid), str_replace("_", " ", GetPlayerNameEx(playerid)));
												ClientMessenger(targetid, "FFFFFF", 3, message);
											} else {
												format(message, sizeof(message), "{FFFFFF}You have been demoted to {00FFFF}%s{FFFFFF} by {00FFFF}%s{FFFFFF} %s!", GetHelperRank(helper_rank_id) ,GetPlayerHelperRank(playerid), str_replace("_", " ", GetPlayerNameEx(playerid)));
												ClientMessenger(targetid, "FFFFFF", 3, message);
											}
											format(message, sizeof(message), "{00FFFF}%s %s{FFFFFF} has given {00FFFF}%s{FFFFFF} for %s", GetHelperRank(PlayerInfo[playerid][Helper]), str_replace("_", " ", GetPlayerNameEx(playerid)), GetHelperRank(helper_rank_id), str_replace("_", " ", GetPlayerNameEx(targetid)));
											ClientMessenger(playerid, "FF0000", 4, message);
											if(targetid != playerid) { /* Player will not receive this message if they are promoting themselves */
												format(message, sizeof(message), "You made %s {00FFFF}%s{FFFFFF}!", str_replace("_", " ", GetPlayerNameEx(targetid)), GetHelperRank(helper_rank_id));
												ClientMessenger(playerid, "FF0000", 1, message);
											}
										}
									}
									
									PlayerInfo[targetid][Helper] = helper_rank_id; /* Sets the players helper status */
									new largequery[144];
									mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `helper` = %i, `newbietag` = '%e' WHERE `id` = %i", helper_rank_id, GetHelperRank(helper_rank_id), PlayerInfo[targetid][DBID]);
									mysql_query(MySQL, largequery);
									largequery[0] = '\0';
								}
							} else {
								ClientMessenger(playerid, "FF0000", 1, "You can not promote anyone to a rank equal or higher to yours!");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "You must be head helper or director to use this command!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 5, "/makehelper <playerid/playername> <none/helper/senior/head/director>");
			}
			helper_rank_name[0] = '\0';
			message[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be a helper to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:buycustomlicenceplate(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new onemessage = 0;
		for(new a = 1; a < sizeof(DMVInfo); a++) {
			if(DMVInfo[a][DMVEndWorld] == GetPlayerVirtualWorld(playerid) && DMVInfo[a][DMVEndInt] == GetPlayerInterior(playerid)) {
				if(LastDMVID[a] == 1){
					onemessage = 1;
					new message[144], licenceplate[33], vehicleid;
					if(!sscanf(params, "is[10]", vehicleid, licenceplate)) {
						if(vehicleid >= 1 && vehicleid <= MAX_PLAYER_VEHICLES){
							if(strlen(licenceplate) <= 8 && strlen(licenceplate) >= 1){
								new largequery[256];
								if(PlayerInfo[playerid][PVehsID][vehicleid] != 0) {
									if((PlayerInfo[playerid][Money]-450) >= 0){
										new largequery2[144], largequery3[144], limit1, limit2;
										for(new g = 0; g < 32; g++){
											licenceplate[g] = toupper(licenceplate[g]);
										}
										mysql_format(MySQL, largequery2, sizeof(largequery2), "SELECT * FROM `vehicles` WHERE `licenceplate`='%e' LIMIT 1", licenceplate);
										mysql_query(MySQL, largequery2);
										limit1 = cache_num_rows();
										mysql_format(MySQL, largequery3, sizeof(largequery3), "SELECT * FROM `player_vehicles` WHERE `licenceplate`='%e' LIMIT 1", licenceplate);
										mysql_query(MySQL, largequery3);
										limit2 = cache_num_rows();
										if(limit1 == 0 && limit2 == 0){
											PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money]-450);
											ResetPlayerMoney(playerid);
											GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
											mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
											mysql_query(MySQL, largequery);
											mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_vehicles` SET `licenceplate`='%e' WHERE `slot` = %i AND `playerid` = %i LIMIT 1", licenceplate, vehicleid, PlayerInfo[playerid][DBID]);
											mysql_query(MySQL, largequery);
											ClientMessenger(playerid, "FFFF00", 3, "* You have change your vehicles licence plate number *");
											SetVehicleNumberPlate(PlayerInfo[playerid][PVehsID][vehicleid], licenceplate);
											format(Vehicles[PlayerInfo[playerid][PVehsID][vehicleid]][VehLicence], 33, licenceplate);
											GetVehiclePos(PlayerInfo[playerid][PVehsID][vehicleid], Vehicles[PlayerInfo[playerid][PVehsID][vehicleid]][VehX], Vehicles[PlayerInfo[playerid][PVehsID][vehicleid]][VehY], Vehicles[PlayerInfo[playerid][PVehsID][vehicleid]][VehZ]);
											SetVehicleToRespawn(PlayerInfo[playerid][PVehsID][vehicleid]);
										} else {
											ClientMessenger(playerid, "FFFFFF", 2, "* That licence plate number already is registered, please choose another one! *");
										}
										largequery2[0] = '\0';
										largequery3[0] = '\0';
									} else {
										ClientMessenger(playerid, "FFFF00", 3, "* Changing your licence costs $450 dollars, which you do not have! *");
									}
								} else {
									ClientMessenger(playerid, "FFFFFF", 2, "* You don't own a vehicle for that slot *");
								}
								largequery[0] = '\0';
							} else {
								ClientMessenger(playerid, "FFFFFF", 1, "You can not have more then 8 or less then 1 character in your licence plate");
							}
						} else {
							ClientMessenger(playerid, "FFFFFF", 1, "Not a valid vehicle slot id");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 5, "/buycustomlicenceplate <carslot> <licenceplate (max is 8 characters)>");
					}
					message[0] = '\0';
				}
			}
		}
		if(onemessage == 0){
			ClientMessenger(playerid, "FFFFFF", 3, "* You're not inside a DMV *");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:trackcar(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new message[200];
		format(message, 200, "{FFFFFF}Vehicle\tModel\n");
		strcat(ReadAllMessages[playerid], message);
		for(new cc = 1; cc <= MAX_PLAYER_VEHICLES; cc++ )
		{
			if(PlayerInfo[playerid][PVehsID][cc] != 0) {
				if(Vehicles[PlayerInfo[playerid][PVehsID][cc]][VehGPS] == 1){
					format(message, 200, "{FFFFFF}%s\t%i\n", GetVehicleInformation(PlayerInfo[playerid][PVehs][cc]), PlayerInfo[playerid][PVehs][cc]);
				} else {
					format(message, 200, "{FF0000}%s\t%i\n", GetVehicleInformation(PlayerInfo[playerid][PVehs][cc]), PlayerInfo[playerid][PVehs][cc]);
				}
				strcat(ReadAllMessages[playerid], message);
			}
		}
		ShowPlayerDialog(playerid, 90, DIALOG_STYLE_TABLIST_HEADERS, "Vehicle Tracker", ReadAllMessages[playerid], "Select", "Cancel");
		ReadAllMessages[playerid][0] = '\0';
		message[0] = '\0';	
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:installgps(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		printf("%i", PlayerInfo[playerid][TempInfo][10]);
		if(PlayerInfo[playerid][TempInfo][10] >= 1){
			new message[144];
			if(IsPlayerInAnyVehicle(playerid)){
				new explode = 0;
				for(new cc = 1; cc <= MAX_PLAYER_VEHICLES; cc++ )
				{
					if(PlayerInfo[playerid][PVehsID][cc] == GetPlayerVehicleID(playerid)) {
						new largequery[256];
						if(PlayerInfo[playerid][PVehs][cc] != 0) {
							PlayerInfo[playerid][TempInfo][10] = (PlayerInfo[playerid][TempInfo][10]-1);
							mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_vehicles` SET `gps`=1 WHERE `playerid` = %i AND `slot` = %i LIMIT 1", PlayerInfo[playerid][DBID], cc);
							mysql_query(MySQL, largequery);
							mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_inventory` SET `itemvalues` = %i WHERE `playerid` = %i AND `itemname` = 'VehicleGPS' LIMIT 1;", PlayerInfo[playerid][TempInfo][10], PlayerInfo[playerid][DBID]);
							mysql_query(MySQL, largequery);
							format(message, sizeof(message), "* You have installed a GPS in your %s *", GetVehicleInformation(GetVehicleModel(GetPlayerVehicleID(playerid))));
							ClientMessenger(playerid, "FFFF00", 3, message);
							Vehicles[GetPlayerVehicleID(playerid)][VehGPS] = 1;
						} else {
							ClientMessenger(playerid, "FFFFFF", 2, "* You don't own a vehicle to install a GPS in *");
						}
						largequery[0] = '\0';
						explode = 1;
						break;
					}
				}
				if (explode == 0){
					ClientMessenger(playerid, "FFFFFF", 2, "* You do not own this vehicle, so you can not install a GPS *");
				}
			} else {
				ClientMessenger(playerid, "FFFFFF", 2, "* You're not in any vehicle at the moment! *");
			}
			message[0] = '\0';
		} else {
			ClientMessenger(playerid, "FFFFFF", 2, "* You do not have any vehicle GPS's, go get some from 24/7 *");
		}	
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:park(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new message[144];
		if(IsPlayerInAnyVehicle(playerid)){
			GetVehiclePos(GetPlayerVehicleID(playerid), Vehicles[GetPlayerVehicleID(playerid)][VehPX], Vehicles[GetPlayerVehicleID(playerid)][VehPY], Vehicles[GetPlayerVehicleID(playerid)][VehPZ]);
			GetVehicleZAngle(GetPlayerVehicleID(playerid), Vehicles[GetPlayerVehicleID(playerid)][VehPA]);
			GetVehiclePos(GetPlayerVehicleID(playerid), Vehicles[GetPlayerVehicleID(playerid)][VehX], Vehicles[GetPlayerVehicleID(playerid)][VehY], Vehicles[GetPlayerVehicleID(playerid)][VehZ]);
			GetVehicleZAngle(GetPlayerVehicleID(playerid), Vehicles[GetPlayerVehicleID(playerid)][VehA]);
			new explode = 0;
			for(new cc = 1; cc <= MAX_PLAYER_VEHICLES; cc++ )
			{
				if(PlayerInfo[playerid][PVehsID][cc] == GetPlayerVehicleID(playerid)) {
					new largequery[256];
					if(PlayerInfo[playerid][PVehs][cc] != 0) {
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_vehicles` SET `px`='%f', `py`='%f', `pz`='%f', `pa`='%f' WHERE `playerid` = %i AND `slot` = %i LIMIT 1", Vehicles[GetPlayerVehicleID(playerid)][VehPX], Vehicles[GetPlayerVehicleID(playerid)][VehPY], Vehicles[GetPlayerVehicleID(playerid)][VehPZ], Vehicles[GetPlayerVehicleID(playerid)][VehPA], PlayerInfo[playerid][DBID], cc);
						mysql_query(MySQL, largequery);
						format(message, sizeof(message), "* You have parked your %s *", GetVehicleInformation(GetVehicleModel(GetPlayerVehicleID(playerid))));
						ClientMessenger(playerid, "FFFF00", 3, message);
					} else {
						ClientMessenger(playerid, "FFFFFF", 2, "* You don't own a vehicle to lock *");
					}
					largequery[0] = '\0';
					explode = 1;
					break;
				}
			}
			if (explode == 0){
				ClientMessenger(playerid, "FFFFFF", 2, "* You do not own this vehicle, so you can not park it *");
			}
		} else {
			ClientMessenger(playerid, "FFFFFF", 2, "* You're not in any vehicle at the moment! *");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:lock(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new message[144], cantlock = 0;
		for(new a = 1; a < sizeof(Vehicles); a++){
			GetVehiclePos(a, Vehicles[a][VehX], Vehicles[a][VehY], Vehicles[a][VehZ]);
			if(IsPlayerInRangeOfPoint(playerid, 6.5, Vehicles[a][VehX], Vehicles[a][VehY], Vehicles[a][VehZ])){
				new canlock = 0;
				for(new cc = 1; cc <= MAX_PLAYER_VEHICLES; cc++ )
				{
					if(PlayerInfo[playerid][PVehsID][cc] == a){
						canlock = 1;
					}
				}
				if(Vehicles[a][Faction] != 0) {
					if(PlayerInfo[playerid][Faction] == Vehicles[a][Faction]) {
						canlock = 1;
					}
				}
				if(canlock == 1) {
					if(Vehicles[a][DoorLS] == 1) {
						SetVehicleParamsEx(a, Vehicles[a][EngineS], Vehicles[a][LightS], 0, 0, Vehicles[a][HoodS], Vehicles[a][TrunkS], 0);
						Vehicles[a][DoorLS] = 0;
						format(message, sizeof(message), "{C2A2DA}* %s has unlocked their %s", str_replace("_", " ", GetPlayerNameEx(playerid)), GetVehicleInformation(Vehicles[a][Vehicle]));
						ClientMessenger(playerid, "FFFFFF", 3, "* You have unlocked the car *");
					} else {
						SetVehicleParamsEx(a, Vehicles[a][EngineS], Vehicles[a][LightS], 0, 1, Vehicles[a][HoodS], Vehicles[a][TrunkS], 0);
						Vehicles[a][DoorLS] = 1;
						format(message, sizeof(message), "{C2A2DA}* %s has locked their %s", str_replace("_", " ", GetPlayerNameEx(playerid)), GetVehicleInformation(Vehicles[a][Vehicle]));
						ClientMessenger(playerid, "FFFFFF", 3, "* You have locked the car *");
					}
					new largequery[144];
					for(new cc = 1; cc <= MAX_PLAYER_VEHICLES; cc++ )
					{
						if(PlayerInfo[playerid][PVehsID][cc] == a){
							mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_vehicles` SET `locked` = %i WHERE `playerid` = %i AND `slot` = %i", Vehicles[a][DoorLS], PlayerInfo[playerid][DBID], cc);
						}
					}
					mysql_query(MySQL, largequery);
					largequery[0] = '\0';
					ActionMessager(playerid, 10, message);
				} else {
					ClientMessenger(playerid, "FFFFFF", 3, "* You can't lock this vehicle! *");
				}
				cantlock = 1;
				break;
			}
		}
		if (cantlock == 0){
			ClientMessenger(playerid, "FFFFFF", 2, "* You're not near any vehicles at the moment! *");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:lockhouse(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][House] != 0) {
			PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
			PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
			new houseid = PlayerInfo[playerid][House];
			if(IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[houseid][HouseX], HouseInfo[houseid][HouseY], HouseInfo[houseid][HouseZ]) && HouseInfo[houseid][HouseStartWorld] == PlayerInfo[playerid][WorldID] && HouseInfo[houseid][HouseStartInt] == PlayerInfo[playerid][InteriorID] || HouseInfo[houseid][HouseEndWorld] == PlayerInfo[playerid][WorldID] && HouseInfo[houseid][HouseEndInt] == PlayerInfo[playerid][InteriorID]) {
				new largequery[128], message[144];
				if(HouseInfo[houseid][HouseLock] == 1){
					format(message, sizeof(message), "{C2A2DA}* %s has unlocked his house", str_replace("_", " ", GetPlayerNameEx(playerid)));
					ActionMessager(playerid, 10, message);
					ClientMessenger(playerid, "FFFFFF", 3, "* You have unlocked your house *");
					HouseInfo[houseid][HouseLock] = 0;
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `houses` SET `locked`=0 WHERE `id` = %i LIMIT 1", houseid);
					mysql_query(MySQL, largequery);
				} else if(HouseInfo[houseid][HouseLock] == 0){
					format(message, sizeof(message), "{C2A2DA}* %s has locked his house", str_replace("_", " ", GetPlayerNameEx(playerid)));
					ActionMessager(playerid, 10, message);
					ClientMessenger(playerid, "FFFFFF", 3, "* You have locked your house *");
					HouseInfo[houseid][HouseLock] = 1;
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `houses` SET `locked`=1 WHERE `id` = %i LIMIT 1", houseid);
					mysql_query(MySQL, largequery);
				}
				largequery[0] = '\0';
				message[0] = '\0';
			} else {
				ClientMessenger(playerid, "FFFFFF", 2, "* You're not at your house to lock it *");
			}
		} else {
			ClientMessenger(playerid, "FFFFFF", 2, "* You don't have a house to lock *");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:getjob(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][Job] == 0) {
			new message[144], onemessage = 0;
			for(new a = 0; a < sizeof(JobInfo); a++) {
				if(IsPlayerInRangeOfPoint(playerid,1.5,JobInfo[a][JobX],JobInfo[a][JobY],JobInfo[a][JobZ])) {
					PlayerInfo[playerid][Job] = JobInfo[a][JobType];
					SendClientMessage(playerid, -1, "{FFFF00}* Congratulations on your new job! *");
					format(message, sizeof(message), "All you need to do for %s is %s", JobNames(JobInfo[a][JobType]), JobDescriptions(JobInfo[a][JobType]));
					ClientMessenger(playerid, "FFFFFF", 3, message);
					new largequery[124];
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `job` = %i WHERE `id` = %i", JobInfo[a][JobType], PlayerInfo[playerid][DBID]);
					mysql_query(MySQL, largequery);
					if(PlayerInfo[playerid][Job] == 2 && PlayerInfo[playerid][JobItems][2] != 0) {
						//PlayerInfo[playerid][TempInfo][22] = SetTimerEx("LawyerDefendAbility", 1000, true, "i", playerid);
						PlayerInfo[playerid][TempInfo][22] = 1;
					}
					onemessage = 1;
					largequery[0] = '\0';
				}
			}
			if(onemessage == 0){
				ClientMessenger(playerid, "FF0000", 5, "/getjob");
			}
			message[0] = '\0';
		} else {
			ClientMessenger(playerid, "FFFFFF", 2, "You already have a job. /quitjob first to join a new job!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:kill(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][TempInfo][12] <= 0){
			ClientMessenger(playerid, "FFFFFF", 2, "* You have killed yourself *");
			SetPlayerHealth(playerid, 0);
			PlayerInfo[playerid][HP] = 0;
			PlayerInfo[playerid][Armor] = 0;
			for(new a = 0; a <= 12; a++)
			{
				PlayerInfo[playerid][Weapons][a] = 0;
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You can not do this while in jail/prison!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

/*
COMMAND:checkstreetcam(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][FactionModerator] >= 1) {
				new targetcam;
				if (!sscanf(params, "i", targetcam)) {
					if(PlayerInfo[playerid][ViewingCamera] != targetcam && targetcam != 0){
						if(LastStreetCamID[targetcam] != 0){
							new largequery[200];
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `streetcams` WHERE `id` = %i LIMIT 1", targetcam);
							mysql_query(MySQL, largequery);
							PlayerInfo[playerid][ViewingCamera] = targetcam;
							TogglePlayerControllable(playerid, 0);
							PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
							PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
							SetPlayerVirtualWorld(playerid, cache_get_field_content_int(0, "world"));
							SetPlayerInterior(playerid, cache_get_field_content_int(0, "interior"));
							GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
							SetPlayerPos(playerid, cache_get_field_content_float(0, "x"), cache_get_field_content_float(0, "y"), cache_get_field_content_float(0, "z")-30);
							SetPlayerCameraPos(playerid, cache_get_field_content_float(0, "x"), cache_get_field_content_float(0, "y"), cache_get_field_content_float(0, "z"));
							SetPlayerCameraLookAt(playerid, cache_get_field_content_float(0, "tx"), cache_get_field_content_float(0, "ty"), cache_get_field_content_float(0, "tz"));
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "Invalid camera id");
						}
					} else if(targetcam == 0 || PlayerInfo[playerid][ViewingCamera] == targetcam){
						PlayerInfo[playerid][ViewingCamera] = 0;
						TogglePlayerControllable(playerid,1);
						SetCameraBehindPlayer(playerid);
						SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][WorldID]);
						SetPlayerInterior(playerid, PlayerInfo[playerid][InteriorID]);
						SetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/editstreetcamtarget <cameraid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Moderator{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1,message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
*/

/*
COMMAND:editstreetcamtarget(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][FactionModerator] >= 1) {
				new targetcam;
				if (!sscanf(params, "i", targetcam)) {
					if(LastStreetCamID[targetcam] != 0){
						new largequery[300];
						format(message, sizeof(message), "%s has changed street camera %i target positon", str_replace("_", " ", GetPlayerNameEx(playerid)), targetcam);
						ClientMessenger(playerid, "FF0000", 4, message);
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `streetcams` SET `tx`= '%f', `ty`= '%f', `tz`= '%f'  WHERE `id` = %i", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], targetcam);
						mysql_query(MySQL, largequery);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Invalid camera id");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/editstreetcamtarget <cameraid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Moderator{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1,message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
*/

/*
COMMAND:deletestreetcam(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][FactionModerator] >= 1) {
				new targetcam;
				if (!sscanf(params, "i", targetcam)) {
					new largequery[150];
					if(LastStreetCamID[targetcam] == 1){
						format(message, sizeof(message), "%s has deleted street camera %i", str_replace("_", " ", GetPlayerNameEx(playerid)), targetcam);
						ClientMessenger(playerid, "FF0000", 4, message);
						LastStreetCamID[targetcam] = 0;
						mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `streetcams` WHERE `id` = %i", targetcam);
						mysql_query(MySQL, largequery);
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That camera doesn't exist!");
					}
					largequery[0] = '\0';
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/deletestreetcam <cameraid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Moderator{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1,message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
*/


/*
COMMAND:makestreetcam(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][FactionModerator] >= 1) {
				new largequery[300];
				PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
				PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
				GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
				new getall = sizeof(LastStreetCamID);
				for(new x = 1; x < sizeof(LastStreetCamID); x++){
					if(LastStreetCamID[x] == 0){
						getall = getall-1;
					}
				}
				if(getall != sizeof(LastStreetCamID)){
					for(new w = 1; w < sizeof(LastStreetCamID); w++){
						if(LastStreetCamID[w] == 0){
							format(message, sizeof(message), "%s has made a street camera %i", str_replace("_", " ", GetPlayerNameEx(playerid)), w);
							ClientMessenger(playerid, "FF0000", 4, message);
							LastStreetCamID[w] = 1;
							mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `streetcams` (`id`, `x`, `y`, `z`, `tx`, `ty`, `tz`, `world`, `interior`) VALUES ('%i', '%f', '%f', '%f', '%f', '%f', '%f', '%i', '%i')", w, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID]);
							mysql_query(MySQL, largequery);
							break;
						}
					}
				}
				largequery[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Moderator{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1,message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
*/


COMMAND:nrw(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new targetid, message2[144];
		if (PlayerInfo[playerid][Admin] >= 2 || PlayerInfo[playerid][Helper] >= 1) {
			if (!sscanf(params, "u", targetid)) {
				if(targetid != 65535){
					new largequery[500];
					PlayerInfo[targetid][NewbieTWarns] = (PlayerInfo[targetid][NewbieTWarns]-1);
					PlayerInfo[targetid][NewbieWarns] = (PlayerInfo[targetid][NewbieWarns]-1);
					
					if(PlayerInfo[targetid][NewbieTWarns] >= 0){
						if(PlayerInfo[targetid][NewbieWarns] < 0){
							PlayerInfo[targetid][NewbieWarns] = 2;
						}
						
						format(message2, sizeof(message2), "You're newbie warn(%i-%i) was removed by %s %s", PlayerInfo[targetid][NewbieTWarns], PlayerInfo[targetid][NewbieWarns], GetPlayerHelperRank(playerid), str_replace("_", " ", GetPlayerNameEx(playerid)));
						ClientMessenger(targetid, "FF0000", 1, message2);
						format(message2, sizeof(message2), "%s %s has removed a newbie warn(%i-%i) from %s", GetPlayerHelperRank(playerid), str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[targetid][NewbieTWarns], PlayerInfo[targetid][NewbieWarns], str_replace("_", " ", GetPlayerNameEx(targetid)));
						ClientMessenger(playerid, "FF0000", 6, message2);
						
						if(PlayerInfo[targetid][NewbieMuted] == 1){
							PlayerInfo[targetid][NewbieMuted] = 0;
							PlayerInfo[targetid][NewbieTMuted] = (PlayerInfo[targetid][NewbieTMuted]-1);
							format(message2, sizeof(message2), "You have been automatically unmuted for your last warning being removed");
							ClientMessenger(targetid, "FF0000", 1, message2);
							format(message2, sizeof(message2), "%s has been automatically unmuted for his last warning being removed", str_replace("_", " ", GetPlayerNameEx(targetid)));
							ClientMessenger(playerid, "FF0000", 6, message2);
						}
					} else {
						PlayerInfo[targetid][NewbieTWarns] = 0;
						PlayerInfo[targetid][NewbieWarns] = 0;
						format(message2, sizeof(message2), "That player has no warnings to be removed!");
						ClientMessenger(targetid, "FF0000", 1, message2);
					}
					
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_newbie` SET `muted`=%i, `times_muted`=%i, `times_warned`=%i, `warnings`=%i, `warnerid`=%i, `muterid`=%i WHERE `playerid` = %i LIMIT 1", 
					PlayerInfo[targetid][NewbieMuted], PlayerInfo[targetid][NewbieTMuted], PlayerInfo[targetid][NewbieTWarns], PlayerInfo[targetid][NewbieWarns], PlayerInfo[playerid][DBID], PlayerInfo[playerid][DBID], PlayerInfo[targetid][DBID]);
					mysql_query(MySQL, largequery);
					largequery[0] = '\0';
				} else {
					ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 5, "/nrw <playername/playerid>");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not a helper or administrator!");
		}
		message2[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:nwarn(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new targetid, message[50], message2[144];
		if (PlayerInfo[playerid][Admin] >= 2 || PlayerInfo[playerid][Helper] >= 1) {
			if (!sscanf(params, "u", targetid)) {
				if(targetid != 65535){
					new Year, Month, Day, Hour, Minute, Second, TotalDate[20], TotalTime[20], Total[50], largequery[500];
					if (!sscanf(params, "us[50]", targetid, message)) {
						
					}
					if(strlen(message) == 0){
						format(message, sizeof(message), "Abuse of Newbie");
					}
					if (PlayerInfo[targetid][NewbieWarns] <= 3) {
						PlayerInfo[targetid][NewbieWarns] = (PlayerInfo[targetid][NewbieWarns]+1);
						PlayerInfo[targetid][NewbieTWarns] = (PlayerInfo[targetid][NewbieTWarns]+1);
						format(message2, sizeof(message2), "You have been newbie warned(%i-%i) by %s %s for %s.", PlayerInfo[targetid][NewbieTWarns], PlayerInfo[targetid][NewbieWarns], GetPlayerHelperRank(playerid), str_replace("_", " ", GetPlayerNameEx(playerid)), message);
						ClientMessenger(targetid, "FF0000", 1, message2);
						format(message2, sizeof(message2), "%s %s has newbie warned(%i-%i) %s for %s", GetPlayerHelperRank(playerid), str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[targetid][NewbieTWarns], PlayerInfo[targetid][NewbieWarns], str_replace("_", " ", GetPlayerNameEx(targetid)), message);
						ClientMessenger(playerid, "FF0000", 6, message2);
						
						getdate(Year, Month, Day);
						gettime(Hour, Minute, Second);
						format(TotalDate, 18, "%i/%i/%i", Month, Day, Year);
						format(TotalTime, 18, "%s", ConvertMilitaryTime(Hour, Minute));
						if (PlayerInfo[targetid][NewbieWarns] == 3) {
							PlayerInfo[targetid][NewbieMuted] = 1;
							PlayerInfo[targetid][NewbieTMuted] = (PlayerInfo[targetid][NewbieTMuted]+1);
							PlayerInfo[targetid][NewbieWarns] = 0;
							format(message2, sizeof(message2), "You have been automatically muted for %s(WARNINGS)", message);
							ClientMessenger(targetid, "FF0000", 1, message2);
							format(message2, sizeof(message2), "%s has been automatically muted for %s(WARNINGS)", str_replace("_", " ", GetPlayerNameEx(targetid)), message);
							ClientMessenger(playerid, "FF0000", 6, message2);
						}
						format(Total, sizeof(Total), "%s - %s", TotalDate, TotalTime);
						
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_newbie` SET `muted`=%i, `times_muted`=%i, `times_warned`=%i, `muted_date`='%e', `warnings`=%i, `reason`='%e', `warnerid`=%i, `muterid`=%i WHERE `playerid` = %i LIMIT 1", 
						PlayerInfo[targetid][NewbieMuted], PlayerInfo[targetid][NewbieTMuted], PlayerInfo[targetid][NewbieTWarns], Total, PlayerInfo[targetid][NewbieWarns], message, PlayerInfo[playerid][DBID], PlayerInfo[playerid][DBID], PlayerInfo[targetid][DBID]);
						mysql_query(MySQL, largequery);
					}
					Total[0] = '\0';
					TotalTime[0] = '\0';
					TotalDate[0] = '\0';
					largequery[0] = '\0';
				} else {
					ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 5, "/nwarn <playername/playerid> <reason (optional)>");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not a helper or administrator!");
		}
		message[0] = '\0';
		message2[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:nmute(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new targetid, message[50], message2[144], timemuted = -1;
		if (PlayerInfo[playerid][Admin] >= 2 || PlayerInfo[playerid][Helper] >= 1) {
			if (!sscanf(params, "ui", targetid, timemuted)) {
				if(targetid != 65535){
					new Year, Month, Day, Hour, Minute, Second, TotalDate[20], TotalTime[20], Total[50], largequery[500];
					//new TMDay, TMMonth, TMYear;
					if (!sscanf(params, "uis[50]", targetid, timemuted, message)) {
						
					}
					if(strlen(message) == 0){
						format(message, sizeof(message), "Abuse of Newbie");
					}
					
					if(timemuted <= -1){
						//TMDay = 31;
						//TMMonth = 12;
						//TMYear = 9999;
						PlayerInfo[playerid][NewbieMuteHour] = -1;
					} else if(timemuted <= 0){
						//TMDay = 0;
						//TMMonth = 0;
						//TMYear = 0;
						PlayerInfo[playerid][NewbieMuteHour] = 0;
					} else {
						PlayerInfo[playerid][NewbieMuteHour] = (timemuted*60);
					}
					
					if (PlayerInfo[playerid][NewbieMuteHour] != 0) {
						PlayerInfo[targetid][NewbieMuted] = 1;
						format(message2, sizeof(message2), "You have been muted(hour(s): %i) by %s %s for %s.", timemuted, GetPlayerHelperRank(playerid), str_replace("_", " ", GetPlayerNameEx(playerid)), message);
						ClientMessenger(targetid, "FF0000", 1, message2);
						format(message2, sizeof(message2), "%s %s has muted(hour(s): %i) %s for %s", GetPlayerHelperRank(playerid), str_replace("_", " ", GetPlayerNameEx(playerid)), timemuted, str_replace("_", " ", GetPlayerNameEx(targetid)), message);
						ClientMessenger(playerid, "FF0000", 6, message2);
						
						getdate(Year, Month, Day);
						gettime(Hour, Minute, Second);
						format(TotalDate, 18, "%i/%i/%i", Month, Day, Year);
						format(TotalTime, 18, "%s", ConvertMilitaryTime(Hour, Minute));
						PlayerInfo[targetid][NewbieTMuted] = (PlayerInfo[targetid][NewbieTMuted]+1);
						format(Total, sizeof(Total), "%s - %s", TotalDate, TotalTime);
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_newbie` SET `muted`=%i, `times_muted`=%i, `muted_date`='%e', `unmute_hours` = %i, `reason`='%e', `muterid`=%i WHERE `playerid` = %i LIMIT 1", PlayerInfo[targetid][NewbieMuted], PlayerInfo[targetid][NewbieTMuted], Total, PlayerInfo[playerid][NewbieMuteHour], message, PlayerInfo[playerid][DBID], PlayerInfo[targetid][DBID]);
						mysql_query(MySQL, largequery);
					} else if (PlayerInfo[playerid][NewbieMuteHour] == 0) {
						PlayerInfo[targetid][NewbieMuted] = 0;
						
						format(message2, sizeof(message2), "You have been unmuted by %s %s", GetPlayerHelperRank(playerid), str_replace("_", " ", GetPlayerNameEx(playerid)));
						ClientMessenger(targetid, "FF0000", 1, message2);
						format(message2, sizeof(message2), "%s %s has unmuted %s", GetPlayerHelperRank(playerid), str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)));
						ClientMessenger(playerid, "FF0000", 6, message2);

						
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_newbie` SET `muted`=%i, `times_muted`=%i, `muted_date`='%e', `unmute_hours` = 0, `reason`='', `muterid`=%i WHERE `playerid` = %i LIMIT 1", PlayerInfo[targetid][NewbieMuted], PlayerInfo[targetid][NewbieTMuted], Total, PlayerInfo[playerid][DBID], PlayerInfo[targetid][DBID]);
						mysql_query(MySQL, largequery);
					}
					Total[0] = '\0';
					TotalTime[0] = '\0';
					TotalDate[0] = '\0';
					largequery[0] = '\0';
				} else {
					ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 5, "/nmute <playername/playerid> <x hours (-1 forever)> <reason (optional)>");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not a helper or administrator!");
		}
		message[0] = '\0';
		message2[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:newb(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new message[144];
		if(NoNewbie == 0 || PlayerInfo[playerid][Admin] >= 2 && NoNewbie == 1 || PlayerInfo[playerid][Helper] >= 1 && NoNewbie == 1){
			if(PlayerInfo[playerid][NewbieMuted] == 0){
				if (!sscanf(params, "s[300]", message)) {
					format(message, sizeof(message), "{ADD8E6}** %s %s [%i]: %s **", PlayerInfo[playerid][NewbieTag], str_replace("_", " ", GetPlayerNameEx(playerid)),playerid, message);
					foreach(Player, i)
					{
						if(PlayerInfo[i][Online] == 1){
							SendClientMessage(i, -1, message);
						}
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/newb <question>");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "You are currently muted from newbie. Submit an appeal to be unmuted!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "Newbie chat is currently disabled!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

stock GetWeaponSlotforPlayer(weapon)
{
	new slotid;
	if(weapon == 1){ // slot 0
		slotid = 0;
	} else if(weapon >= 2 && weapon <= 9){ // slot 1
		slotid = 1;
	} else if(weapon >= 22 && weapon <= 24){ // slot 2
		slotid = 2;
	} else if(weapon >= 25 && weapon <= 27){ // slot 3
		slotid = 3;
	} else if(weapon >= 28 && weapon <= 29 || weapon == 32 ){ // slot 4
		slotid = 4;
	} else if(weapon == 30 || weapon == 31){ // slot 5
		slotid = 5;
	} else if(weapon == 33 || weapon == 34){ // slot 6
		slotid = 6;
	} else if(weapon >= 35 && weapon <= 38){ // slot 7
		slotid = 7;
	} else if(weapon >= 16 && weapon <= 18 || weapon == 39){ // slot 8
		slotid = 8;
	} else if(weapon >= 41 && weapon <= 43){ // slot 9
		slotid = 9;
	} else if(weapon >= 10 && weapon <= 15){ // slot 10
		slotid = 10;
	} else if(weapon == 44 || weapon == 45 || weapon == 46){ // slot 11
		slotid = 11;
	} else {
		return 99;
	}
	return slotid;
}

COMMAND:cuffme(playerid, params[]) // For texting purpose only
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Admin] >= 1) {
			new message[144];
			if(PlayerInfo[playerid][Admin] >= 2) {
				if(!IsPlayerInAnyVehicle(playerid)) {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can't do this action inside a vehicle!");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(2), GetAdminRanks(2));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
			message[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:cuff(playerid, params[]) // For texting purpose only
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Faction] != 0) {
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][7] == 1) {
				if(AllFactionRanksPermissions[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]][7] == 1) {
					new targetid;
					if (!sscanf(params, "u", targetid)) {
						if(targetid != 65535){
							if(PlayerInfo[targetid][Online] == 1){
								PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
								PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
								GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
								PlayerInfo[targetid][InteriorID] = GetPlayerInterior(targetid);
								PlayerInfo[targetid][WorldID] = GetPlayerVirtualWorld(targetid);
								GetPlayerPos(targetid, PlayerInfo[targetid][PosX], PlayerInfo[targetid][PosY], PlayerInfo[targetid][PosZ]);
								if(IsPlayerInRangeOfPoint(playerid,2.0,PlayerInfo[targetid][PosX], PlayerInfo[targetid][PosY], PlayerInfo[targetid][PosZ])) {
									if(PlayerInfo[playerid][WorldID] == PlayerInfo[targetid][WorldID] && PlayerInfo[playerid][InteriorID] == PlayerInfo[targetid][InteriorID]){
										if(GetPlayerSpecialAction(targetid) == SPECIAL_ACTION_HANDSUP || PlayerInfo[targetid][TempInfo][4] == 1) {
											if(!IsPlayerInAnyVehicle(playerid) && !IsPlayerInAnyVehicle(targetid)) {
												PlayerInfo[targetid][TempInfo][4] = 0;
												format(message, sizeof(message), "You have been cuffed by %s", str_replace("_", " ", GetPlayerNameEx(playerid)));
												ClientMessenger(targetid, "FF0000", 3, message);
												format(message, sizeof(message), "You have cuffed %s", str_replace("_", " ", GetPlayerNameEx(targetid)));
												ClientMessenger(playerid, "FF0000", 3, message);
												PlayerInfo[targetid][TempInfo][2] = 300;
												SetPlayerSpecialAction(targetid, SPECIAL_ACTION_CUFFED);
											} else {
												ClientMessenger(playerid, "FF0000", 1, "You can not cuff anyone when they are in a vehicle or you are in a vehicle!");
											}
										} else {
											ClientMessenger(playerid, "FF0000", 2, "That player does not have their hands up, or is currently tazed!");
										}
									}
								}
							} else {
								ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 5, "/cuff <playerid/playername>");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can not do this at your rank!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:uncuffme(playerid, params[]) // For texting purpose only
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Admin] >= 1) {
			new message[144];
			if(PlayerInfo[playerid][Admin] >= 2) {
				PlayerInfo[playerid][TempInfo][2] = 0;
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(2), GetAdminRanks(2));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
			message[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:time(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		new Year, Month, Day, Hour, Minute, Second;
		gettime(Hour, Minute, Second);
		getdate(Year, Month, Day);
		PlayerTextDrawDestroy(playerid, PlayerInfo[playerid][GameText]);
		KillTimer(PlayerInfo[playerid][TempInfo][3]);
		if(PlayerInfo[playerid][TempInfo][12] >= 1){
			format(message, sizeof(message), "~r~Jail Time Left: %i Seconds~n~~b~The time is: ~g~%s (Seconds: %i)~n~~r~%s %i, %i", PlayerInfo[playerid][TempInfo][12], ConvertMilitaryTime(Hour, Minute), Second, ConvertDatetoName(Month), Day, Year);
			PlayerInfo[playerid][GameText] = CreatePlayerTextDraw(playerid, 220, 370, message);
		} else {
			format(message, sizeof(message), "~b~The time is: ~g~%s (Seconds: %i)~n~~r~%s %i, %i", ConvertMilitaryTime(Hour, Minute), Second, ConvertDatetoName(Month), Day, Year);
			PlayerInfo[playerid][GameText] = CreatePlayerTextDraw(playerid, 220, 380, message);
		}
		PlayerTextDrawShow(playerid, PlayerInfo[playerid][GameText]);
		PlayerInfo[playerid][TempInfo][3] = SetTimerEx("RemovePlayerText", 5000, false, "i", playerid);
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:handsup(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		PlayerInfo[playerid][TempInfo][1] = 1;
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_HANDSUP);
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:pickup(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new pickuptype[31], onemessage = 1;
		// new replacewep[15];
		if (!sscanf(params, "s[31]", pickuptype)) {
			new message[144], largequery[144];
			if(!strcmp(pickuptype, "weapon", true)){
				PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
				PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
				GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
				for(new a = 0; a < sizeof(DroppedItemsInfo); a++) {
					if(IsPlayerInRangeOfPoint(playerid,1.5,DroppedItemsInfo[a][DIX], DroppedItemsInfo[a][DIY], DroppedItemsInfo[a][DIZ])) {
						if(PlayerInfo[playerid][WorldID] == DroppedItemsInfo[a][DIWorld] && PlayerInfo[playerid][InteriorID] == DroppedItemsInfo[a][DIInt]){
							onemessage = 0;
							new weaponslot = GetWeaponSlotforPlayer(DroppedItemsInfo[a][DIItem]);
							if(PlayerInfo[playerid][Weapons][weaponslot] == 0){
								//PlayerOverwritePickupWeapon:
								PlayerInfo[playerid][TempInfo][13] = 1;
								
								PlayerInfo[playerid][Weapons][weaponslot] = DroppedItemsInfo[a][DIItem];
								GivePlayerWeapon(playerid, DroppedItemsInfo[a][DIItem], 1);
								PlayerInfo[playerid][WeaponsAmmo][weaponslot] = (DroppedItemsInfo[a][DIItemC]+PlayerInfo[playerid][WeaponsAmmo][weaponslot]);
								SetPlayerAmmo(playerid, DroppedItemsInfo[a][DIItem], PlayerInfo[playerid][WeaponsAmmo][weaponslot]);
								
								format(message, sizeof(message), "You have picked up a %s", GetWeaponNameInfo(DroppedItemsInfo[a][DIItem]));
								ClientMessenger(playerid, "FFFF00", 3, message);
								
								LastDroppedItemID[a] = 0;
								DestroyDynamicObject(DroppedItemsInfo[a][DIIcon]);
								DroppedItemsInfo[a][DIX] = 0;
								DroppedItemsInfo[a][DIY] = 0;
								DroppedItemsInfo[a][DIZ] = 0;
								DroppedItemsInfo[a][DIA] = 0;
								DroppedItemsInfo[a][DIItem] = 0;
								DroppedItemsInfo[a][DIItemC] = 0;
								DroppedItemsInfo[a][DITime] = 0;
								DroppedItemsInfo[a][DIPID] = 65535;
								DroppedItemsInfo[a][DIWorld] = 0;
								DroppedItemsInfo[a][DIInt] = 0;
								
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_weapons` SET `weapon`=%i, `weapon_ammo` = %i WHERE `slot` = %i AND `playerid` = %i LIMIT 1", PlayerInfo[playerid][Weapons][weaponslot], PlayerInfo[playerid][WeaponsAmmo][weaponslot], weaponslot, PlayerInfo[playerid][DBID]);
								mysql_query(MySQL, largequery);
								PlayerInfo[playerid][TempInfo][13] = 0;
							} else {
								//if (!sscanf(params, "s[31]s[15]", pickuptype, replacewep)) {
								//  goto PlayerOverwritePickupWeapon;
								//} else {
									format(message, sizeof(message), "You currently have a %s in that weapon slot.", GetWeaponNameInfo(PlayerInfo[playerid][Weapons][weaponslot]));
									ClientMessenger(playerid, "FFFF00", 3, message);
									ClientMessenger(playerid, "FFFF00", 3, "To replace your currently weapon, you need to drop or store your current weapon!");
								//}
							}
							break;
						}
					}
				}
			} else {
				ClientMessenger(playerid, "FFFFFF", 2, "You did not type a valid pickup.");
				ClientMessenger(playerid, "FFFFFF", 3, "Valid Pickups:");
				ClientMessenger(playerid, "FFFFFF", 3, "weapon");
			}
			if(onemessage == 1){
				ClientMessenger(playerid, "FFFF00", 2, "There is nothing to pickup!");  
			}
			message[0] = '\0';
			largequery[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 5, "/pickup <type>");
		}
		//replacewep[0] = '\0';
		pickuptype[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
			

COMMAND:drop(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new droptype[31];
		if (!sscanf(params, "s[31]", droptype)) {
			new message[144], largequery[144];
			if(!strcmp(droptype, "weapon", true)){
				if(GetPlayerWeapon(playerid) != 0){
					new weaponslot = GetWeaponSlotforPlayer(GetPlayerWeapon(playerid));
					new weaponslotammo = GetPlayerAmmo(playerid);
					
					new getall = sizeof(LastDroppedItemID);
					for(new x = 1; x < sizeof(LastDroppedItemID); x++){
						if(LastDroppedItemID[x] == 0){
							getall = getall-1;
						}
					}
					
					new target = 0;
					for(new x = 1; x < sizeof(LastDroppedItemID); x++){
						if(LastDroppedItemID[x] == 1){
							if(DroppedItemsInfo[x][DIPID] == PlayerInfo[playerid][DBID]){
								target = (target+1);
							}
						}
					}
					new deletetime = 15, maxitems = 3;
					if(target < maxitems){
						if(getall != sizeof(LastDroppedItemID)){
							for(new w = 1; w < sizeof(LastDroppedItemID); w++){
								if(LastDroppedItemID[w] == 0){
									LastDroppedItemID[w] = 1;
									PlayerInfo[playerid][TempInfo][13] = 1;
									GetPlayerPos(playerid, DroppedItemsInfo[w][DIX], DroppedItemsInfo[w][DIY], DroppedItemsInfo[w][DIZ]);
									GetPlayerFacingAngle(playerid, DroppedItemsInfo[w][DIA]);
									DroppedItemsInfo[w][DIPID] = PlayerInfo[playerid][DBID];
									DroppedItemsInfo[w][DIItem] = GetPlayerWeapon(playerid);
									DroppedItemsInfo[w][DIItemC] = weaponslotammo;
									DroppedItemsInfo[w][DITime] = deletetime;
									DroppedItemsInfo[w][DIWorld] = GetPlayerVirtualWorld(playerid);
									DroppedItemsInfo[w][DIInt] = GetPlayerInterior(playerid);
									DroppedItemsInfo[w][DIIcon] = CreateDynamicObject(GetActiveWeaponModels(playerid), DroppedItemsInfo[w][DIX], (DroppedItemsInfo[w][DIY]), (DroppedItemsInfo[w][DIZ]-1), 90, 0, DroppedItemsInfo[w][DIA], DroppedItemsInfo[w][DIWorld], DroppedItemsInfo[w][DIInt], -1, 200.0, 200.0);
									
									format(message, sizeof(message), "You have dropped your %s", GetWeaponNameInfo(GetPlayerWeapon(playerid)));
									ClientMessenger(playerid, "FFFF00", 3, message);
									
									ResetPlayerWeapons(playerid);
									PlayerInfo[playerid][Weapons][weaponslot] = 0;
									PlayerInfo[playerid][WeaponsAmmo][weaponslot] = 0;
									for(new h = 0; h < 12; h++)
									{
										GivePlayerWeapon(playerid, PlayerInfo[playerid][Weapons][h], 1);
										SetPlayerAmmo(playerid, PlayerInfo[playerid][Weapons][h], PlayerInfo[playerid][WeaponsAmmo][h]);
									}
									mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_weapons` SET `weapon`=0, `weapon_ammo` = %i WHERE `slot` = %i AND `playerid` = %i LIMIT 1", PlayerInfo[playerid][WeaponsAmmo][weaponslot], weaponslot, PlayerInfo[playerid][DBID]);
									mysql_query(MySQL, largequery);
									PlayerInfo[playerid][TempInfo][13] = 0;
									break;
								}
							}
						} else {
							ClientMessenger(playerid, "FFFFFF", 1, "SOMEHOW, At this time, the server currently has too many items dropped. Please wait!");
						}
					} else {
						format(message, sizeof(message), "You can not drop more then %i items per %i seconds.", maxitems, deletetime);
						ClientMessenger(playerid, "FFFFFF", 1, message);
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 2, "You can't drop your hand!");
				}
			} else {
				ClientMessenger(playerid, "FFFFFF", 2, "You did not type a valid drop.");
				ClientMessenger(playerid, "FFFFFF", 3, "Valid Drops:");
				ClientMessenger(playerid, "FFFFFF", 3, "weapon");
			}
			message[0] = '\0';
			largequery[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 5, "/drop <type>");
		}
		droptype[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:cnewbietag(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new newbietagselect[31];
		if (!sscanf(params, "s[31]", newbietagselect)) {
			new message[144], largequery[144];
			if(PlayerInfo[playerid][Admin] > 1) {
				if(strlen(newbietagselect) <= 30) {
					format(PlayerInfo[playerid][NewbieTag], 31, newbietagselect);
					format(message, sizeof(message), "%s has set their newbietag to %s", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][NewbieTag]);
					ClientMessenger(playerid, "FF0000", 4, message);
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can not have more then 30 characters!");
				}
			}
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `newbietag` = '%e' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][NewbieTag], PlayerInfo[playerid][DBID]);
			mysql_query(MySQL, largequery);
			message[0] = '\0';
			largequery[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 5, "/cnewbietag <custom (30 character limit)>");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:newbietag(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new newbietagselect[31];
		if (!sscanf(params, "s[31]", newbietagselect)) {
			new message[144], largequery[256];
			if(!strcmp(newbietagselect, "Newbie", true)){
				if(PlayerInfo[playerid][Level] == 1 || PlayerInfo[playerid][Admin] > 1) {
					format(PlayerInfo[playerid][NewbieTag], 31, "Newbie");
					format(message, sizeof(message), "You have set your newbie tag to: %s", PlayerInfo[playerid][NewbieTag]);
					ClientMessenger(playerid, "FFFFFF", 3, message);
				}
			} else if(!strcmp(newbietagselect, "Player", true)){
				if(PlayerInfo[playerid][Level] >= 2 || PlayerInfo[playerid][Admin] > 1) {
					format(PlayerInfo[playerid][NewbieTag], 31, "Player");
					format(message, sizeof(message), "You have set your newbie tag to: %s", PlayerInfo[playerid][NewbieTag]);
					ClientMessenger(playerid, "FFFFFF", 3, message);
				}
			} else if(!strcmp(newbietagselect, "Admin", true)){
				if(PlayerInfo[playerid][Admin] > 1) {
					format(PlayerInfo[playerid][NewbieTag], 31, GetAdminRanks(PlayerInfo[playerid][Admin]));
					format(message, sizeof(message), "You have set your newbie tag to: %s", PlayerInfo[playerid][NewbieTag]);
					ClientMessenger(playerid, "FFFFFF", 3, message);
				}
			} else if(!strcmp(newbietagselect, "Helper", true)){
				if(PlayerInfo[playerid][Helper] > 1) {
					format(PlayerInfo[playerid][NewbieTag], 31, GetHelperRank(PlayerInfo[playerid][Helper]));
					format(message, sizeof(message), "You have set your newbie tag to: %s", PlayerInfo[playerid][NewbieTag]);
					ClientMessenger(playerid, "FFFFFF", 3, message);
				}
			} else {
				ClientMessenger(playerid, "FF0000", 5, "/newbietag <Newbie, Player, Admin, Helper>");
			}
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `newbietag` = '%e' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][NewbieTag], PlayerInfo[playerid][DBID]);
			mysql_query(MySQL, largequery);
			message[0] = '\0';
			largequery[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 5, "/newbietag <Newbie, Player, Admin, Helper>");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:goto(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 2) {
				new targetid, largequery[256];
				if (!sscanf(params, "u", targetid)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1 || IsPlayerNPC(targetid)) {
							if(PlayerInfo[targetid][ViewingCamera] == 0){
								GetPlayerFacingAngle(targetid, PlayerInfo[playerid][FacingAngle]);
								PlayerInfo[targetid][WorldID] = GetPlayerVirtualWorld(targetid);
								PlayerInfo[targetid][InteriorID] = GetPlayerInterior(targetid);
								GetPlayerPos(targetid, PlayerInfo[targetid][PosX],PlayerInfo[targetid][PosY],PlayerInfo[targetid][PosZ]);
								SetPlayerVirtualWorld( playerid, PlayerInfo[targetid][WorldID] );
								SetPlayerInterior( playerid, PlayerInfo[targetid][InteriorID] );
								if(IsPlayerInAnyVehicle(playerid) == 1){
									SetVehiclePos(GetPlayerVehicleID(playerid), PlayerInfo[targetid][PosX],PlayerInfo[targetid][PosY],PlayerInfo[targetid][PosZ]+1.5);
									SetVehicleZAngle(GetPlayerVehicleID(playerid), PlayerInfo[targetid][FacingAngle]);
									SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), PlayerInfo[targetid][WorldID]);
									LinkVehicleToInterior(GetPlayerVehicleID(playerid), PlayerInfo[targetid][InteriorID]);
								} else {
									SetPlayerPos(playerid, PlayerInfo[targetid][PosX],PlayerInfo[targetid][PosY],PlayerInfo[targetid][PosZ]+1.5);
									SetPlayerFacingAngle( playerid, PlayerInfo[targetid][FacingAngle] );
								}
								PlayerInfo[playerid][PosX] = PlayerInfo[targetid][PosX];
								PlayerInfo[playerid][PosY] = PlayerInfo[targetid][PosY];
								PlayerInfo[playerid][PosZ] = PlayerInfo[targetid][PosZ]+1.5;
								PlayerInfo[playerid][WorldID] = PlayerInfo[targetid][WorldID];
								PlayerInfo[playerid][InteriorID] = PlayerInfo[targetid][InteriorID];
								format(message, sizeof(message), "%s has telported to you!", str_replace("_", " ", GetPlayerNameEx(playerid)));
								ClientMessenger(targetid, "FF0000", 1, message);
								format(message, sizeof(message), "%s has gone to %s", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)));
								ClientMessenger(playerid, "FF0000", 4, message);
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`=%i, `interior`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[targetid][PosX], PlayerInfo[targetid][PosY], PlayerInfo[targetid][PosZ], PlayerInfo[targetid][WorldID], PlayerInfo[targetid][InteriorID], PlayerInfo[playerid][DBID]);
								mysql_query(MySQL, largequery);
								FreezePlayerAfterTeleport(playerid, 2500);
							} else {
								ClientMessenger(playerid, "FF0000", 1, "That player is currently spectating someone!");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/goto <playerid/playername>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(2), GetAdminRanks(2));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:test(playerid, params[])
{
	printf("%s", The2DZone(-1515, 2523));
	printf("%s", The3DZone(-1515, 2523, 55));
	return 1;
}

COMMAND:exit(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new onemessage = 0;
		new largequery[256], message[144];
		for(new a = 1; a < sizeof(Businesses); a++) {
			if(IsPlayerInRangeOfPoint(playerid,1.0,Businesses[a][BizIntX], Businesses[a][BizIntY], Businesses[a][BizIntZ])) {
				if(GetPlayerVirtualWorld(playerid) == Businesses[a][BizEndWorld] && GetPlayerInterior(playerid) == Businesses[a][BizEndInt]){
					if(LastBusinessesID[a] == 1){
						onemessage = 1;
						if(Businesses[a][BizOwner] != 0) {
							format(message, sizeof(message), "{C2A2DA}* %s pushes the door open, exiting the business", str_replace("_", " ", GetPlayerNameEx(playerid)));
							ActionMessager(playerid, 25, message);
							GetPlayerHealth(playerid,PlayerInfo[playerid][HP]);
							GetPlayerArmour(playerid, PlayerInfo[playerid][Armor]);
							SetPlayerVirtualWorld(playerid, Businesses[a][BizStartWorld]);
							SetPlayerInterior(playerid, Businesses[a][BizStartInt]);
							SetPlayerPos(playerid, Businesses[a][BizX], Businesses[a][BizY], Businesses[a][BizZ]);
							PlayerInfo[playerid][WorldID] = Businesses[a][BizStartWorld];
							PlayerInfo[playerid][InteriorID] = Businesses[a][BizStartInt];
							GetPlayerPos(playerid, PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ]);
							StopAudioStreamForPlayer(playerid);
							//mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`=%i, `interior`=%i, `health`='%f', `armor`='%f' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ],PlayerInfo[playerid][WorldID],PlayerInfo[playerid][InteriorID],PlayerInfo[playerid][HP],PlayerInfo[playerid][Armor], PlayerInfo[playerid][DBID]);
							//mysql_query(MySQL, largequery);
							FreezePlayerAfterTeleport(playerid, 3000);
							break;
						}
					}
				}
			}
		}
		for(new a = 1; a < sizeof(HouseInfo); a++) {
			if(IsPlayerInRangeOfPoint(playerid,1.0,HouseInfo[a][HouseIntX], HouseInfo[a][HouseIntY], HouseInfo[a][HouseIntZ])) {
				if(GetPlayerVirtualWorld(playerid) == HouseInfo[a][HouseEndWorld] && GetPlayerInterior(playerid) == HouseInfo[a][HouseEndInt]){
					if(LastHouseID[a] == 1){
						onemessage = 1;
						if(HouseInfo[a][HouseOwner] != 0) {
							format(message, sizeof(message), "{C2A2DA}* %s pushes the door open, exiting the house", str_replace("_", " ", GetPlayerNameEx(playerid)));
							ActionMessager(playerid, 25, message);
							GetPlayerHealth(playerid,PlayerInfo[playerid][HP]);
							GetPlayerArmour(playerid, PlayerInfo[playerid][Armor]);
							SetPlayerVirtualWorld(playerid, HouseInfo[a][HouseStartWorld]);
							SetPlayerInterior(playerid, HouseInfo[a][HouseStartInt]);
							SetPlayerPos(playerid, HouseInfo[a][HouseX], HouseInfo[a][HouseY], HouseInfo[a][HouseZ]);
							PlayerInfo[playerid][WorldID] = HouseInfo[a][HouseStartWorld];
							PlayerInfo[playerid][InteriorID] = HouseInfo[a][HouseStartInt];
							GetPlayerPos(playerid, PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ]);
							//mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`='%i', `interior`=%i, `health`='%f', `armor`='%f' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ],PlayerInfo[playerid][WorldID],PlayerInfo[playerid][InteriorID],PlayerInfo[playerid][HP],PlayerInfo[playerid][Armor], PlayerInfo[playerid][DBID]);
							//mysql_query(MySQL, largequery);
							FreezePlayerAfterTeleport(playerid, 3000);
							break;
						}
					}
				}
			}
		}
		for(new a = 1; a < sizeof(InteriorInfo); a++) {
			if(IsPlayerInRangeOfPoint(playerid,1.0,InteriorInfo[a][IntIntX], InteriorInfo[a][IntIntY], InteriorInfo[a][IntIntZ])) {
				if(GetPlayerVirtualWorld(playerid) == InteriorInfo[a][IntEndWorld] && GetPlayerInterior(playerid) == InteriorInfo[a][IntEndInt]){
					if(LastInteriorID[a] == 1){
						onemessage = 1;
						format(message, sizeof(message), "{C2A2DA}* %s pushes the door open, exiting the building", str_replace("_", " ", GetPlayerNameEx(playerid)));
						ActionMessager(playerid, 25, message);
						GetPlayerHealth(playerid,PlayerInfo[playerid][HP]);
						GetPlayerArmour(playerid, PlayerInfo[playerid][Armor]);
						SetPlayerVirtualWorld(playerid, InteriorInfo[a][IntStartWorld]);
						SetPlayerInterior(playerid, InteriorInfo[a][IntStartInt]);
						SetPlayerPos(playerid, InteriorInfo[a][IntX], InteriorInfo[a][IntY], InteriorInfo[a][IntZ]);
						PlayerInfo[playerid][WorldID] = InteriorInfo[a][IntStartWorld];
						PlayerInfo[playerid][InteriorID] = InteriorInfo[a][IntStartInt];
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ]);
						//mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`='%i', `interior`=%i, `health`='%f', `armor`='%f' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ],PlayerInfo[playerid][WorldID],PlayerInfo[playerid][InteriorID],PlayerInfo[playerid][HP],PlayerInfo[playerid][Armor], PlayerInfo[playerid][DBID]);
						//mysql_query(MySQL, largequery);
						FreezePlayerAfterTeleport(playerid, 3000);
						break;
					}
				}
			}
		}
		for(new a = 1; a < sizeof(DMVInfo); a++) {
			if(IsPlayerInRangeOfPoint(playerid,1.0,DMVInfo[a][DMVIntX], DMVInfo[a][DMVIntY], DMVInfo[a][DMVIntZ])) {
				if(GetPlayerVirtualWorld(playerid) == DMVInfo[a][DMVEndWorld] && GetPlayerInterior(playerid) == DMVInfo[a][DMVEndInt]){
					if(LastDMVID[a] == 1){
						onemessage = 1;
						format(message, sizeof(message), "{C2A2DA}* %s pushes the door open, exiting the DMV", str_replace("_", " ", GetPlayerNameEx(playerid)));
						ActionMessager(playerid, 25, message);
						GetPlayerHealth(playerid,PlayerInfo[playerid][HP]);
						GetPlayerArmour(playerid, PlayerInfo[playerid][Armor]);
						SetPlayerVirtualWorld(playerid, DMVInfo[a][DMVStartWorld]);
						SetPlayerInterior(playerid, DMVInfo[a][DMVStartInt]);
						SetPlayerPos(playerid, DMVInfo[a][DMVX], DMVInfo[a][DMVY], DMVInfo[a][DMVZ]);
						PlayerInfo[playerid][WorldID] = DMVInfo[a][DMVStartWorld];
						PlayerInfo[playerid][InteriorID] = DMVInfo[a][DMVStartInt];
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ]);
						//mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`='%i', `interior`=%i, `health`='%f', `armor`='%f' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ],PlayerInfo[playerid][WorldID],PlayerInfo[playerid][InteriorID],PlayerInfo[playerid][HP],PlayerInfo[playerid][Armor], PlayerInfo[playerid][DBID]);
						//mysql_query(MySQL, largequery);
						FreezePlayerAfterTeleport(playerid, 3000);
						break;
					}
				}
			}
		}
		if(onemessage == 0){
			ClientMessenger(playerid, "FF0000", 5, "/exit");
		}
		largequery[0] = '\0';
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


stock TaxMoneyCountBiz(StockAmt)
{
	new count;
	count = floatround((StockAmt/TaxPercentage), floatround_round);
	return count;
}


COMMAND:buy(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
		PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
		new onemessage = 0;
		for(new a = 0; a < sizeof(Businesses); a++) {
			if(PlayerInfo[playerid][WorldID] == Businesses[a][BizEndWorld] && PlayerInfo[playerid][InteriorID] == Businesses[a][BizEndInt]) {
				new message[144], largequery[256];
				if(Businesses[a][BizType] == 1){
					new whatweapon[20];
					if (!sscanf(params, "s[20]", whatweapon)) {
						if(!strcmp("colt45", whatweapon, true)) {
							if(0 <= (PlayerInfo[playerid][Money] - GameSettings[25][GameSetting])) {
								if((Businesses[a][BizStock]-1) >= 0) {
									if(PlayerInfo[playerid][Weapons][2] == 0){
										Businesses[a][BizStock] = (Businesses[a][BizStock]-1);
										
										TaxMoney = (TaxMoney + TaxMoneyCountBiz(GameSettings[25][GameSetting]));
										Businesses[a][BizMoney] = (Businesses[a][BizMoney] + (GameSettings[25][GameSetting] - TaxMoneyCountBiz(GameSettings[25][GameSetting])));
										PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - GameSettings[25][GameSetting]);
										
										ResetPlayerMoney(playerid);
										GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
										GivePlayerWeapon(playerid, 22, 1);
										PlayerInfo[playerid][Weapons][2] = 22;
										PlayerInfo[playerid][WeaponsAmmo][2] = (PlayerInfo[playerid][WeaponsAmmo][2]+GameSettings[69][GameSetting]);
										SetPlayerAmmo(playerid, 22, PlayerInfo[playerid][WeaponsAmmo][2]);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_weapons` SET `weapon` = 22, `weapon_ammo` = %i WHERE `playerid` = %i AND `slot` = 2 LIMIT 1", PlayerInfo[playerid][WeaponsAmmo][2], PlayerInfo[playerid][DBID]);
										mysql_query(MySQL, largequery);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = '%i' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
										mysql_query(MySQL, largequery);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `stock` = %i, `money` = %i WHERE `id` = %i LIMIT 1", Businesses[a][BizStock], Businesses[a][BizMoney], a);
										mysql_query(MySQL, largequery);
										format(message, sizeof(message), "{C2A2DA}* %s hands the cashier money, and takes their weapon", str_replace("_", " ", GetPlayerNameEx(playerid)));
										ActionMessager(playerid, 25, message);
										ClientMessenger(playerid, "FFFFFF", 3, "* You just bought a colt45 *");
									} else {
										ClientMessenger(playerid, "FFFFFF", 2, "* You already own a weapon in this slot, drop this weapon, or buy ammo for it. *");
									}
								} else {
									ClientMessenger(playerid, "FFFFFF", 3, "* This business is closed! *");
								}
							} else {
								ClientMessenger(playerid, "FFFFFF", 2, "* You don't have enough money for that! *");
							}
						} else if(!strcmp("colt45ammo", whatweapon, true)) {
							if(0 <= (PlayerInfo[playerid][Money] - ((GameSettings[25][GameSetting]/2)/2))) {
								if((Businesses[a][BizStock]-1) >= 0) {
									if(PlayerInfo[playerid][Weapons][2] == 22){
										Businesses[a][BizStock] = (Businesses[a][BizStock]-1);
										
										TaxMoney = (TaxMoney + ((TaxMoneyCountBiz(GameSettings[25][GameSetting])/2)/2));
										Businesses[a][BizMoney] = (Businesses[a][BizMoney] + (((GameSettings[25][GameSetting]/2)/2) - ((TaxMoneyCountBiz(GameSettings[25][GameSetting])/2)/2)));
										PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - ((GameSettings[25][GameSetting]/2)/2));
										
										ResetPlayerMoney(playerid);
										GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
										GivePlayerWeapon(playerid, 22, 1);
										PlayerInfo[playerid][Weapons][2] = 22;
										PlayerInfo[playerid][WeaponsAmmo][2] = (PlayerInfo[playerid][WeaponsAmmo][2]+GameSettings[69][GameSetting]);
										SetPlayerAmmo(playerid, 22, PlayerInfo[playerid][WeaponsAmmo][2]);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_weapons` SET `weapon` = 22, `weapon_ammo` = %i WHERE `playerid` = %i AND `slot` = 2 LIMIT 1", PlayerInfo[playerid][WeaponsAmmo][2], PlayerInfo[playerid][DBID]);
										mysql_query(MySQL, largequery);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = '%i' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
										mysql_query(MySQL, largequery);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `stock` = %i, `money` = %i WHERE `id` = %i LIMIT 1", Businesses[a][BizStock], Businesses[a][BizMoney], a);
										mysql_query(MySQL, largequery);
										format(message, sizeof(message), "{C2A2DA}* %s hands the cashier money, and takes their ammo", str_replace("_", " ", GetPlayerNameEx(playerid)));
										ActionMessager(playerid, 25, message);
										ClientMessenger(playerid, "FFFFFF", 3, "* You just bought colt45 ammo *");
									} else {
										ClientMessenger(playerid, "FFFFFF", 2, "* You do not own a colt45! *");
									}
								} else {
									ClientMessenger(playerid, "FFFFFF", 3, "* This business is closed! *");
								}
							} else {
								ClientMessenger(playerid, "FFFFFF", 2, "* You don't have enough money for that! *");
							}
						} else if(!strcmp("shotgun", whatweapon, true)) {
							if(0 <= (PlayerInfo[playerid][Money] - GameSettings[28][GameSetting])) {
								if((Businesses[a][BizStock]-1) >= 0) {
									if(PlayerInfo[playerid][Weapons][3] == 0){
										Businesses[a][BizStock] = (Businesses[a][BizStock]-1);
										
										TaxMoney = (TaxMoney + TaxMoneyCountBiz(GameSettings[28][GameSetting]));
										Businesses[a][BizMoney] = (Businesses[a][BizMoney] + (GameSettings[28][GameSetting] - TaxMoneyCountBiz(GameSettings[28][GameSetting])));
										PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - GameSettings[28][GameSetting]);
										
										ResetPlayerMoney(playerid);
										GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
										GivePlayerWeapon(playerid, 25, 1);
										PlayerInfo[playerid][Weapons][3] = 25;
										PlayerInfo[playerid][WeaponsAmmo][3] = (GameSettings[72][GameSetting]+PlayerInfo[playerid][WeaponsAmmo][3]);
										SetPlayerAmmo(playerid, 25, PlayerInfo[playerid][WeaponsAmmo][3]);
										SendClientMessage(playerid, -1, "* You just bought a shotgun *");
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_weapons` SET `weapon` = 25, `weapon_ammo` = %i WHERE `playerid` = %i AND `slot` = 3 LIMIT 1", PlayerInfo[playerid][WeaponsAmmo][3], PlayerInfo[playerid][DBID]);
										mysql_query(MySQL, largequery);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = '%i' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
										mysql_query(MySQL, largequery);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `stock` = %i, `money` = %i WHERE `id` = %i LIMIT 1", Businesses[a][BizStock], Businesses[a][BizMoney], a);
										mysql_query(MySQL, largequery);
										format(message, sizeof(message), "{C2A2DA}* %s hands the cashier money, and takes their weapon", str_replace("_", " ", GetPlayerNameEx(playerid)));
										ActionMessager(playerid, 25, message);
									} else {
										ClientMessenger(playerid, "FFFFFF", 2, "* You already own a weapon in this slot, drop this weapon, or buy ammo for it. *");
									}
								} else {
									ClientMessenger(playerid, "FFFFFF", 3, "* This business is closed! *");
								}
							} else {
								ClientMessenger(playerid, "FFFFFF", 2, "* You don't have enough money for that! *");
							}
						} else if(!strcmp("shotgunammo", whatweapon, true)) {
							if(0 <= (PlayerInfo[playerid][Money] - ((GameSettings[28][GameSetting]/2)/2))) {
								if((Businesses[a][BizStock]-1) >= 0) {
									if(PlayerInfo[playerid][Weapons][3] == 25){
										Businesses[a][BizStock] = (Businesses[a][BizStock]-1);
										
										TaxMoney = (TaxMoney + ((TaxMoneyCountBiz(GameSettings[28][GameSetting])/2)/2));
										Businesses[a][BizMoney] = (Businesses[a][BizMoney] + (((GameSettings[28][GameSetting]/2)/2) - ((TaxMoneyCountBiz(GameSettings[28][GameSetting])/2)/2)));
										PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - ((GameSettings[28][GameSetting]/2)/2));
										
										ResetPlayerMoney(playerid);
										GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
										GivePlayerWeapon(playerid, 25, GameSettings[72][GameSetting]);
										PlayerInfo[playerid][Weapons][3] = 25;
										PlayerInfo[playerid][WeaponsAmmo][3] = (PlayerInfo[playerid][WeaponsAmmo][3]+GameSettings[72][GameSetting]);
										SetPlayerAmmo(playerid, 25, PlayerInfo[playerid][WeaponsAmmo][3]);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_weapons` SET `weapon` = 25, `weapon_ammo` = %i WHERE `playerid` = %i AND `slot` = 3 LIMIT 1", PlayerInfo[playerid][WeaponsAmmo][3], PlayerInfo[playerid][DBID]);
										mysql_query(MySQL, largequery);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = '%i' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
										mysql_query(MySQL, largequery);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `stock` = %i, `money` = %i WHERE `id` = %i LIMIT 1", Businesses[a][BizStock], Businesses[a][BizMoney], a);
										mysql_query(MySQL, largequery);
										format(message, sizeof(message), "{C2A2DA}* %s hands the cashier money, and takes their ammo", str_replace("_", " ", GetPlayerNameEx(playerid)));
										ActionMessager(playerid, 25, message);
										ClientMessenger(playerid, "FFFFFF", 3, "* You just bought shotgun ammo *");
									} else {
										ClientMessenger(playerid, "FFFFFF", 2, "* You do not own a shotgun *");
									}
								} else {
									ClientMessenger(playerid, "FFFFFF", 3, "* This business is closed! *");
								}
							} else {
								ClientMessenger(playerid, "FFFFFF", 2, "* You don't have enough money for that! *");
							}
						} else if(!strcmp("rifle", whatweapon, true)) {
							if(0 <= (PlayerInfo[playerid][Money] - GameSettings[36][GameSetting])) {
								if((Businesses[a][BizStock]-1) >= 0) {
									if(PlayerInfo[playerid][Weapons][6] == 0){
										Businesses[a][BizStock] = (Businesses[a][BizStock]-1);
										
										TaxMoney = (TaxMoney + TaxMoneyCountBiz(GameSettings[36][GameSetting]));
										Businesses[a][BizMoney] = (Businesses[a][BizMoney] + (GameSettings[36][GameSetting] - TaxMoneyCountBiz(GameSettings[36][GameSetting])));
										PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - GameSettings[36][GameSetting]);
										
										ResetPlayerMoney(playerid);
										GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
										GivePlayerWeapon(playerid, 33, GameSettings[80][GameSetting]);
										PlayerInfo[playerid][Weapons][6] = 33;
										PlayerInfo[playerid][WeaponsAmmo][6] = (PlayerInfo[playerid][WeaponsAmmo][6]+GameSettings[80][GameSetting]);
										SetPlayerAmmo(playerid, 33, PlayerInfo[playerid][WeaponsAmmo][6]);
										SendClientMessage(playerid, -1, "* You just bought a rifle *");
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_weapons` SET `weapon` = 33, `weapon_ammo` = %i WHERE `playerid` = %i AND `slot` = 6 LIMIT 1", PlayerInfo[playerid][WeaponsAmmo][6], PlayerInfo[playerid][DBID]);
										mysql_query(MySQL, largequery);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = '%i' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
										mysql_query(MySQL, largequery);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `stock` = %i, `money` = %i WHERE `id` = %i LIMIT 1", Businesses[a][BizStock], Businesses[a][BizMoney], a);
										mysql_query(MySQL, largequery);
										format(message, sizeof(message), "{C2A2DA}* %s hands the cashier money, and takes their weapon", str_replace("_", " ", GetPlayerNameEx(playerid)));
										ActionMessager(playerid, 25, message);
									} else {
										ClientMessenger(playerid, "FFFFFF", 2, "* You already own a weapon in this slot, drop this weapon, or buy ammo for it. *");
									}
								} else {
									ClientMessenger(playerid, "FFFFFF", 3, "* This business is closed! *");
								}
							} else {
								ClientMessenger(playerid, "FFFFFF", 2, "* You don't have enough money for that! *");
							}
						} else if(!strcmp("rifleammo", whatweapon, true)) {
							if(0 <= (PlayerInfo[playerid][Money] - ((GameSettings[36][GameSetting]/2)/2))) {
								if((Businesses[a][BizStock]-1) >= 0) {
									if(PlayerInfo[playerid][Weapons][6] == 33){
										Businesses[a][BizStock] = (Businesses[a][BizStock]-1);
										
										TaxMoney = (TaxMoney + ((TaxMoneyCountBiz(GameSettings[36][GameSetting])/2)/2));
										Businesses[a][BizMoney] = (Businesses[a][BizMoney] + (((GameSettings[36][GameSetting]/2)/2) - ((TaxMoneyCountBiz(GameSettings[36][GameSetting])/2)/2)));
										PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - ((GameSettings[36][GameSetting]/2)/2));
										
										ResetPlayerMoney(playerid);
										GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
										GivePlayerWeapon(playerid, 33, GameSettings[80][GameSetting]);
										PlayerInfo[playerid][Weapons][6] = 33;
										PlayerInfo[playerid][WeaponsAmmo][6] = (PlayerInfo[playerid][WeaponsAmmo][6]+GameSettings[80][GameSetting]);
										SetPlayerAmmo(playerid, 33, PlayerInfo[playerid][WeaponsAmmo][6]);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_weapons` SET `weapon` = 33, `weapon_ammo` = %i WHERE `playerid` = %i AND `slot` = 6 LIMIT 1", PlayerInfo[playerid][WeaponsAmmo][6], PlayerInfo[playerid][DBID]);
										mysql_query(MySQL, largequery);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = '%i' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
										mysql_query(MySQL, largequery);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `stock` = %i, `money` = %i WHERE `id` = %i LIMIT 1", Businesses[a][BizStock], Businesses[a][BizMoney], a);
										mysql_query(MySQL, largequery);
										format(message, sizeof(message), "{C2A2DA}* %s hands the cashier money, and takes their ammo", str_replace("_", " ", GetPlayerNameEx(playerid)));
										ActionMessager(playerid, 25, message);
										ClientMessenger(playerid, "FFFFFF", 3, "* You just bought rifle ammo *");
									} else {
										ClientMessenger(playerid, "FFFFFF", 2, "* You do not own a rifle *");
									}
								} else {
									ClientMessenger(playerid, "FFFFFF", 3, "* This business is closed! *");
								}
							} else {
								ClientMessenger(playerid, "FFFFFF", 2, "* You don't have enough money for that! *");
							}
						} else if(!strcmp("vest", whatweapon, true)) {
							if(PlayerInfo[playerid][Armor] < 50.0) {
								if(0 <= (PlayerInfo[playerid][Money] - GameSettings[50][GameSetting])) {
									if((Businesses[a][BizStock]-1) >= 0) {
										Businesses[a][BizStock] = (Businesses[a][BizStock]-1);
										
										TaxMoney = (TaxMoney + TaxMoneyCountBiz(GameSettings[50][GameSetting]));
										Businesses[a][BizMoney] = (Businesses[a][BizMoney] + (GameSettings[50][GameSetting] - TaxMoneyCountBiz(GameSettings[50][GameSetting])));
										PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - GameSettings[50][GameSetting]);
										
										ResetPlayerMoney(playerid);
										GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
										SetPlayerArmour(playerid,50);
										PlayerInfo[playerid][Armor] = 50;
										SendClientMessage(playerid, -1, "* You just bought a vest *");
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = '%i', `armor`='%f' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][Money], PlayerInfo[playerid][Armor], PlayerInfo[playerid][DBID]);
										mysql_query(MySQL, largequery);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `stock` = %i, `money` = %i WHERE `id` = %i LIMIT 1", Businesses[a][BizStock], Businesses[a][BizMoney], a);
										mysql_query(MySQL, largequery);
										format(message, sizeof(message), "{C2A2DA}* %s hands the cashier money, and takes their vest", str_replace("_", " ", GetPlayerNameEx(playerid)));
										ActionMessager(playerid, 25, message);
									} else {
										ClientMessenger(playerid, "FFFFFF", 3, "* This business is closed! *");
									}
								} else {
									ClientMessenger(playerid, "FFFFFF", 2, "* You don't have enough money for that! *");
								}
							} else {
								ClientMessenger(playerid, "FFFFFF", 2, "* You currently have half or more of your vest, you are unable to get another one! *");
							}
						} else {
							ClientMessenger(playerid, "FFFFFF", 3, "List of Weapons:");
							format(message, sizeof(message), "Colt45[$%i], Rifle[$%i], Shotgun[$%i], Vest[$%i]",GameSettings[25][GameSetting],GameSettings[36][GameSetting],GameSettings[28][GameSetting],GameSettings[50][GameSetting]);
							ClientMessenger(playerid, "FFFFFF", 3,message);
							format(message, sizeof(message), "Colt45Ammo[$%i], RifleAmmo[$%i], ShotgunAmmo[$%i]",((GameSettings[25][GameSetting]/2)/2),((GameSettings[36][GameSetting]/2)/2),((GameSettings[28][GameSetting]/2)/2));
							ClientMessenger(playerid, "FFFFFF", 3,message);
							ClientMessenger(playerid, "FFFFFF", 2, "Example{FFFFFF}: /buy shotgun");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 3, "List of Weapons:");
						format(message, sizeof(message), "Colt45[$%i], Rifle[$%i], Shotgun[$%i], Vest[$%i]",GameSettings[25][GameSetting],GameSettings[36][GameSetting],GameSettings[28][GameSetting],GameSettings[50][GameSetting]);
						ClientMessenger(playerid, "FFFFFF", 3,message);
						format(message, sizeof(message), "Colt45Ammo[$%i], RifleAmmo[$%i], ShotgunAmmo[$%i]",((GameSettings[25][GameSetting]/2)/2),((GameSettings[36][GameSetting]/2)/2),((GameSettings[28][GameSetting]/2)/2));
						ClientMessenger(playerid, "FFFFFF", 3,message);
						ClientMessenger(playerid, "FFFFFF", 2, "Example{FFFFFF}: /buy shotgun");
					}
				} else if(Businesses[a][BizType] == 2){
					new whatproduct[25];
					if (!sscanf(params, "s[25]", whatproduct)) {
						if(!strcmp("parachute", whatproduct, true)) {
							if(0 <= (PlayerInfo[playerid][Money] - GameSettings[49][GameSetting])) {
								if((Businesses[a][BizStock]-1) >= 0) {
									Businesses[a][BizStock] = (Businesses[a][BizStock]-1);
									
									TaxMoney = (TaxMoney + TaxMoneyCountBiz(GameSettings[49][GameSetting]));
									Businesses[a][BizMoney] = (Businesses[a][BizMoney] + (GameSettings[49][GameSetting] - TaxMoneyCountBiz(GameSettings[49][GameSetting])));
									PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - GameSettings[49][GameSetting]);
									
									ResetPlayerMoney(playerid);
									GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
									GivePlayerWeapon(playerid, 46, 1);
									PlayerInfo[playerid][Weapons][11] = 46;
									SendClientMessage(playerid, -1, "* You just bought a parachute *");
									mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_weapons` SET `weapon` = 46 WHERE `slot` = 11 AND `playerid` = %i LIMIT 1", PlayerInfo[playerid][DBID]);
									mysql_query(MySQL, largequery);
									mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = '%i' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
									mysql_query(MySQL, largequery);
									mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `stock` = %i, `money` = %i WHERE `id` = %i LIMIT 1", Businesses[a][BizStock], Businesses[a][BizMoney], a);
									mysql_query(MySQL, largequery);
									format(message, sizeof(message), "{C2A2DA}* %s hands the cashier money, and takes their parachute", str_replace("_", " ", GetPlayerNameEx(playerid)));
									ActionMessager(playerid, 25, message);
								} else {
									ClientMessenger(playerid, "FFFFFF", 3, "* This business is closed! *");
								}
							} else {
								ClientMessenger(playerid, "FFFFFF", 2, "* You don't have enough money for that! *");
							}
						} else if(!strcmp("vehiclegps", whatproduct, true)) {
							if(0 <= (PlayerInfo[playerid][Money] - GameSettings[96][GameSetting])) {
								if((Businesses[a][BizStock]-1) >= 0) {
									Businesses[a][BizStock] = (Businesses[a][BizStock]-1);
									
									TaxMoney = (TaxMoney + TaxMoneyCountBiz(GameSettings[96][GameSetting]));
									Businesses[a][BizMoney] = (Businesses[a][BizMoney] + (GameSettings[96][GameSetting] - TaxMoneyCountBiz(GameSettings[96][GameSetting])));
									PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - GameSettings[96][GameSetting]);
									PlayerInfo[playerid][TempInfo][10] = (PlayerInfo[playerid][TempInfo][10]+1);
									ResetPlayerMoney(playerid);
									GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
									SendClientMessage(playerid, -1, "* You just bought a Vehicle GPS. To use it go to a vehicle and type /installgps *");
									mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = '%i' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
									mysql_query(MySQL, largequery);
									mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_inventory` SET `itemvalues` = %i WHERE `playerid` = %i AND `itemname` = 'VehicleGPS' LIMIT 1;", PlayerInfo[playerid][TempInfo][10], PlayerInfo[playerid][DBID]);
									mysql_query(MySQL, largequery);
									mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `stock` = %i, `money` = %i WHERE `id` = %i LIMIT 1", Businesses[a][BizStock], Businesses[a][BizMoney], a);
									mysql_query(MySQL, largequery);
									format(message, sizeof(message), "{C2A2DA}* %s hands the cashier money, and takes their Vehicle GPS *", str_replace("_", " ", GetPlayerNameEx(playerid)));
									ActionMessager(playerid, 25, message);
								} else {
									ClientMessenger(playerid, "FFFFFF", 3, "* This business is closed! *");
								}
							} else {
								ClientMessenger(playerid, "FFFFFF", 2, "* You don't have enough money for that! *");
							}
						} else if(!strcmp("toolkit", whatproduct, true)) {
							if(0 <= (PlayerInfo[playerid][Money] - GameSettings[96][GameSetting])) {
								if(PlayerInfo[playerid][JobItems][1] < 2) {
									if((Businesses[a][BizStock]-1) >= 0) {
										Businesses[a][BizStock] = (Businesses[a][BizStock]-1);
										
										TaxMoney = (TaxMoney + TaxMoneyCountBiz(GameSettings[97][GameSetting]));
										Businesses[a][BizMoney] = (Businesses[a][BizMoney] + (GameSettings[97][GameSetting] - TaxMoneyCountBiz(GameSettings[97][GameSetting])));
										PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - GameSettings[97][GameSetting]);
										PlayerInfo[playerid][JobItems][1] = (PlayerInfo[playerid][JobItems][1]+1);
										ResetPlayerMoney(playerid);
										GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
										SendClientMessage(playerid, -1, "* This toolkit can be used to partially fix your vehicle, or place nos on it! *");
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = '%i' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
										mysql_query(MySQL, largequery);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_inventory` SET `itemvalues` = %i WHERE `playerid` = %i AND `itemname` = 'ToolKits' LIMIT 1;", PlayerInfo[playerid][JobItems][1], PlayerInfo[playerid][DBID]);
										mysql_query(MySQL, largequery);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `stock` = %i, `money` = %i WHERE `id` = %i LIMIT 1", Businesses[a][BizStock], Businesses[a][BizMoney], a);
										mysql_query(MySQL, largequery);
										format(message, sizeof(message), "{C2A2DA}* %s hands the cashier money, and takes their toolkit *", str_replace("_", " ", GetPlayerNameEx(playerid)));
										ActionMessager(playerid, 25, message);
									} else {
										ClientMessenger(playerid, "FFFFFF", 3, "* This business is closed! *");
									}
								} else {
									ClientMessenger(playerid, "FFFF00", 3, "* You already own two mechanic tool kits! *");
								}
							} else {
								ClientMessenger(playerid, "FFFFFF", 2, "* You don't have enough money for that! *");
							}
						} else if(!strcmp("gps", whatproduct, true)) {
							if(PlayerInfo[playerid][TempInfo][9] == 0){
								if(0 <= (PlayerInfo[playerid][Money] - GameSettings[93][GameSetting])) {
									if((Businesses[a][BizStock]-1) >= 0) {
										Businesses[a][BizStock] = (Businesses[a][BizStock]-1);
										
										TaxMoney = (TaxMoney + TaxMoneyCountBiz(GameSettings[93][GameSetting]));
										Businesses[a][BizMoney] = (Businesses[a][BizMoney] + (GameSettings[93][GameSetting] - TaxMoneyCountBiz(GameSettings[93][GameSetting])));
										PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - GameSettings[93][GameSetting]);
										
										ResetPlayerMoney(playerid);
										GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
										PlayerInfo[playerid][TempInfo][9] = 1;
										SendClientMessage(playerid, -1, "* You just bought a GPS *");
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = '%i' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
										mysql_query(MySQL, largequery);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_inventory` SET `itemvalues` = 1 WHERE `playerid` = %i AND `itemname` = 'GPS' LIMIT 1;",  PlayerInfo[playerid][DBID]);
										mysql_query(MySQL, largequery);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `stock` = %i, `money` = %i WHERE `id` = %i LIMIT 1", Businesses[a][BizStock], Businesses[a][BizMoney], a);
										mysql_query(MySQL, largequery);
										format(message, sizeof(message), "{C2A2DA}* %s hands the cashier money, and takes their GPS *", str_replace("_", " ", GetPlayerNameEx(playerid)));
										ActionMessager(playerid, 25, message);
									} else {
										ClientMessenger(playerid, "FFFFFF", 3, "* This business is closed! *");
									}
								} else {
									ClientMessenger(playerid, "FFFFFF", 2, "* You don't have enough money for that! *");
								}
							} else {
								ClientMessenger(playerid, "FFFFFF", 3, "* You already own a GPS! *");
							}

						} else {
							ClientMessenger(playerid, "FFFFFF", 3, "List of Products:");
							format(message, sizeof(message), "parachute[$%i], GPS[$%i], VehicleGPS[$%i], Toolkit[$%i]",GameSettings[49][GameSetting], GameSettings[93][GameSetting], GameSettings[96][GameSetting], GameSettings[97][GameSetting]);
							ClientMessenger(playerid, "FFFFFF", 3,message);
							ClientMessenger(playerid, "FFFFFF", 2, "Example{FFFFFF}: /buy parachute");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 3, "List of Products:");
						format(message, sizeof(message), "parachute[$%i], GPS[$%i], VehicleGPS[$%i], Toolkit[$%i]",GameSettings[49][GameSetting], GameSettings[93][GameSetting], GameSettings[96][GameSetting], GameSettings[97][GameSetting]);
						ClientMessenger(playerid, "FFFFFF", 3,message);
						ClientMessenger(playerid, "FFFFFF", 2, "Example{FFFFFF}: /buy parachute");
					}
				} else if(Businesses[a][BizType] == 3){
					new whatskin;
					if (!sscanf(params, "i", whatskin)) {
						if( whatskin >= 0 && whatskin <= 312 ) {
							if( whatskin != 301 && whatskin != 301 && whatskin != 302 && whatskin != 306 && whatskin != 307 && whatskin != 309 && whatskin != 310 && whatskin != 311 && whatskin != 280 && whatskin != 281 && whatskin != 282 && whatskin != 283 && whatskin != 288 && whatskin != 284 && whatskin != 285) {
								if( whatskin != 274 && whatskin != 275 && whatskin != 276 && whatskin != 308 && whatskin != 277 && whatskin != 278 && whatskin != 279 ) {
									if( whatskin != 165 && whatskin != 166 && whatskin != 286 && whatskin != 287 ) {
										if(0 <= (PlayerInfo[playerid][Money] - GameSettings[94][GameSetting])) {
											if((Businesses[a][BizStock]-1) >= 0) {
												Businesses[a][BizStock] = (Businesses[a][BizStock]-1);
												
												TaxMoney = (TaxMoney + TaxMoneyCountBiz(GameSettings[94][GameSetting]));
												Businesses[a][BizMoney] = (Businesses[a][BizMoney] + (GameSettings[94][GameSetting] - TaxMoneyCountBiz(GameSettings[94][GameSetting])));
												PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - GameSettings[94][GameSetting]);

												
												ResetPlayerMoney(playerid);
												GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
												SetPlayerSkin(playerid, whatskin);
												PlayerInfo[playerid][Skin] = whatskin;
												format(message, sizeof(message), "{C2A2DA}* %s hands the cashier money, and takes their new clothing", str_replace("_", " ", GetPlayerNameEx(playerid)));
												ActionMessager(playerid, 25, message);
												ClientMessenger(playerid, "FFFFFF", 3, "You just bought some new clothing!");
												mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = '%i', `skin` = '%i' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][Money], whatskin, PlayerInfo[playerid][DBID]);
												mysql_query(MySQL, largequery);
												mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `stock` = %i, `money` = %i WHERE `id` = %i LIMIT 1", Businesses[a][BizStock], Businesses[a][BizMoney], a);
												mysql_query(MySQL, largequery);
											} else {
												ClientMessenger(playerid, "FFFFFF", 3, "* This business is closed! *");
											}
										} else {
											ClientMessenger(playerid, "FFFFFF", 2, "* You don't have enough money for that! *");
										}
									} else {
										ClientMessenger(playerid, "FF0000", 3, "* Sorry, we don't carry that clothing here! *");
									}
								} else {
									ClientMessenger(playerid, "FF0000", 3, "* Sorry, we don't carry that clothing here! *");
								}
							} else {
								ClientMessenger(playerid, "FF0000", 3, "* Sorry, we don't carry that clothing here! *");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "You can not go below 0 or above 312");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 5, "/buy <skinid>");
					}
				} else if(Businesses[a][BizType] == 4){
				} else if(Businesses[a][BizType] == 5){
				} else {
					onemessage = 1;
				}
				message[0] = '\0';
				largequery[0] = '\0';
			}
		}
		if(onemessage == 1){
			ClientMessenger(playerid, "FF0000", 1, "You are not in a business!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

forward UnFreezePlayerAfterTeleport(playerid);
FreezePlayerAfterTeleport(playerid, time)
{
	TogglePlayerControllable(playerid, 0);
	SetTimerEx("UnFreezePlayerAfterTeleport", time, false, "i", playerid);
	PlayerTextDrawDestroy(playerid, PlayerInfo[playerid][GameText]);
	KillTimer(PlayerInfo[playerid][TempInfo][3]);
	PlayerInfo[playerid][GameText] = CreatePlayerTextDraw(playerid, 160, 380, "~g~Please wait while we load the server's details!");
	PlayerTextDrawShow(playerid, PlayerInfo[playerid][GameText]);
	PlayerInfo[playerid][TempInfo][3] = SetTimerEx("RemovePlayerText", time, false, "i", playerid);
}

public UnFreezePlayerAfterTeleport(playerid)
{
	TogglePlayerControllable(playerid, 1);
}

COMMAND:enter(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new onemessage = 0;
		new largequery[256], message[144];
		for(new a = 1; a < sizeof(Businesses); a++) {
			if(IsPlayerInRangeOfPoint(playerid,1.0,Businesses[a][BizX],Businesses[a][BizY],Businesses[a][BizZ])) {
				if(Businesses[a][BizStartWorld] == GetPlayerVirtualWorld(playerid) && Businesses[a][BizStartInt] == GetPlayerInterior(playerid)) {
					if(LastBusinessesID[a] == 1){
						if(Businesses[a][BizOwner] != 0) {
							onemessage = 1;
							if(Businesses[a][BizStock] != 0) {
								if(0 <= (PlayerInfo[playerid][Money]-Businesses[a][BizPrice])) {
									PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - Businesses[a][BizPrice]);
									Businesses[a][BizMoney] = (Businesses[a][BizMoney]+Businesses[a][BizPrice]);
									ResetPlayerMoney(playerid);
									GivePlayerMoney(playerid,PlayerInfo[playerid][Money]);
									mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `Money`=%i WHERE `id` = %i", Businesses[a][BizMoney], a);
									mysql_query(MySQL, largequery);
									
									format(message, sizeof(message), "{C2A2DA}* %s pushes the door open, entering the business", str_replace("_", " ", GetPlayerNameEx(playerid)));
									ActionMessager(playerid, 25, message);
									GetPlayerHealth(playerid,PlayerInfo[playerid][HP]);
									GetPlayerArmour(playerid, PlayerInfo[playerid][Armor]);
									SetPlayerVirtualWorld(playerid, Businesses[a][BizEndWorld]);
									SetPlayerInterior(playerid, Businesses[a][BizEndInt]);
									SetPlayerPos(playerid, Businesses[a][BizIntX], Businesses[a][BizIntY], Businesses[a][BizIntZ]);
									PlayerInfo[playerid][WorldID] = Businesses[a][BizEndWorld];
									PlayerInfo[playerid][InteriorID] = Businesses[a][BizEndInt];
									GetPlayerPos(playerid, PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ]);
									PlayAudioStreamForPlayer(playerid, GetBusinessesMusic(Businesses[a][BizType]));
									//mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`=%i, `interior`=%i, `money` = '%i', `health`='%f', `armor`='%f' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ],Businesses[a][BizEndWorld],Businesses[a][BizEndInt], PlayerInfo[playerid][Money],PlayerInfo[playerid][HP],PlayerInfo[playerid][Armor], PlayerInfo[playerid][DBID]);
									//mysql_query(MySQL, largequery);
									ClientMessenger(playerid, "FFFFFF", 3, "* Type /buy to find out what is available *");
									FreezePlayerAfterTeleport(playerid, 3000);
								} else {
									ClientMessenger(playerid, "FF0000", 3, "* Sorry, you do not have enough money to enter this business! *");
								}
							} else {
								ClientMessenger(playerid, "FFFFFF", 3, "* This business is closed! *");
							}
							break;
						}
					}
				}
			}
		}
		for(new a = 1; a < sizeof(HouseInfo); a++) {
			if(IsPlayerInRangeOfPoint(playerid,1.0,HouseInfo[a][HouseX],HouseInfo[a][HouseY],HouseInfo[a][HouseZ])) {
				if(HouseInfo[a][HouseStartWorld] == GetPlayerVirtualWorld(playerid) && HouseInfo[a][HouseStartInt] == GetPlayerInterior(playerid)) {
					if(LastHouseID[a] == 1){
						if(HouseInfo[a][HouseOwner] != 0) {
							if(HouseInfo[a][HouseLock] == 0){
								onemessage = 1;
								format(message, sizeof(message), "{C2A2DA}* %s pushes the door open, entering the house", str_replace("_", " ", GetPlayerNameEx(playerid)));
								ActionMessager(playerid, 25, message);
								GetPlayerHealth(playerid,PlayerInfo[playerid][HP]);
								GetPlayerArmour(playerid, PlayerInfo[playerid][Armor]);
								SetPlayerVirtualWorld(playerid, HouseInfo[a][HouseEndWorld]);
								SetPlayerInterior(playerid, HouseInfo[a][HouseEndInt]);
								SetPlayerPos(playerid, HouseInfo[a][HouseIntX], HouseInfo[a][HouseIntY], HouseInfo[a][HouseIntZ]);
								PlayerInfo[playerid][WorldID] = HouseInfo[a][HouseEndWorld];
								PlayerInfo[playerid][InteriorID] = HouseInfo[a][HouseEndInt];
								GetPlayerPos(playerid, PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ]);
								//mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`=%i, `interior`=%i, `health`='%f', `armor`='%f' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ],HouseInfo[a][HouseEndWorld],HouseInfo[a][HouseEndInt], PlayerInfo[playerid][HP], PlayerInfo[playerid][Armor], PlayerInfo[playerid][DBID]);
								//mysql_query(MySQL, largequery);
								FreezePlayerAfterTeleport(playerid, 3000);
							} else {
								onemessage = 1;
								ClientMessenger(playerid, "FF0000", 2, "* House is locked! *");
							}
							break;
						}
					}
				}
			}
		}
		for(new a = 1; a < sizeof(InteriorInfo); a++) {
			if(IsPlayerInRangeOfPoint(playerid,1.0,InteriorInfo[a][IntX],InteriorInfo[a][IntY],InteriorInfo[a][IntZ])) {
				if(InteriorInfo[a][IntStartWorld] == GetPlayerVirtualWorld(playerid) && InteriorInfo[a][IntStartInt] == GetPlayerInterior(playerid)) {
					if(LastInteriorID[a] == 1){
						new iwl = InteriorInfo[a][IntWhiteList];
						new if1 = InteriorInfo[a][IntFaction];
						new if2 = InteriorInfo[a][IntFaction2];
						new if3 = InteriorInfo[a][IntFaction3];
						new pfid = PlayerInfo[playerid][Faction];
						new pffid = PlayerInfo[playerid][FakeFaction];
						if(iwl == 0 || iwl == 1 && if1 == pfid && if1 != 0 || iwl == 1 && if2 == pfid && if2 != 0 || iwl == 1 && if3 == pfid && if3 != 0 || iwl == 1 && if1 == pffid && if1 != 0 || iwl == 1 && if2 == pffid && if2 != 0 || iwl == 1 && if3 == pffid && if3 != 0 ){
							onemessage = 1;
							format(message, sizeof(message), "{C2A2DA}* %s pushes the door open, entering the building", str_replace("_", " ", GetPlayerNameEx(playerid)));
							ActionMessager(playerid, 25, message);
							GetPlayerHealth(playerid,PlayerInfo[playerid][HP]);
							GetPlayerArmour(playerid, PlayerInfo[playerid][Armor]);
							SetPlayerVirtualWorld(playerid, InteriorInfo[a][IntEndWorld]);
							SetPlayerInterior(playerid, InteriorInfo[a][IntEndInt]);
							SetPlayerPos(playerid, InteriorInfo[a][IntIntX], InteriorInfo[a][IntIntY], InteriorInfo[a][IntIntZ]);
							PlayerInfo[playerid][WorldID] = InteriorInfo[a][IntEndWorld];
							PlayerInfo[playerid][InteriorID] = InteriorInfo[a][IntEndInt];
							GetPlayerPos(playerid, PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ]);
							//mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`=%i, `interior`=%i, `health`='%f', `armor`='%f' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ],InteriorInfo[a][IntEndWorld],InteriorInfo[a][IntEndInt], PlayerInfo[playerid][HP], PlayerInfo[playerid][Armor], PlayerInfo[playerid][DBID]);
							//mysql_query(MySQL, largequery);
							FreezePlayerAfterTeleport(playerid, 3000);
						} else {
							onemessage = 1;
							ClientMessenger(playerid, "FFFFFF", 2, "* You do not have the keys to this building *");
						}
						break;
					}
				}
			}
		}
		for(new a = 1; a < sizeof(DMVInfo); a++) {
			if(IsPlayerInRangeOfPoint(playerid,1.0,DMVInfo[a][DMVX],DMVInfo[a][DMVY],DMVInfo[a][DMVZ])) {
				if(DMVInfo[a][DMVStartWorld] == GetPlayerVirtualWorld(playerid) && DMVInfo[a][DMVStartInt] == GetPlayerInterior(playerid)) {
					if(LastDMVID[a] == 1){
						onemessage = 1;
						format(message, sizeof(message), "{C2A2DA}* %s pushes the door open, entering the DMV", str_replace("_", " ", GetPlayerNameEx(playerid)));
						ActionMessager(playerid, 25, message);
						GetPlayerHealth(playerid,PlayerInfo[playerid][HP]);
						GetPlayerArmour(playerid, PlayerInfo[playerid][Armor]);
						SetPlayerVirtualWorld(playerid, DMVInfo[a][DMVEndWorld]);
						SetPlayerInterior(playerid, DMVInfo[a][DMVEndInt]);
						SetPlayerPos(playerid, DMVInfo[a][DMVIntX], DMVInfo[a][DMVIntY], DMVInfo[a][DMVIntZ]);
						PlayerInfo[playerid][WorldID] = DMVInfo[a][DMVEndWorld];
						PlayerInfo[playerid][InteriorID] = DMVInfo[a][DMVEndInt];
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ]);
						//mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`=%i, `interior`=%i, `health`='%f', `armor`='%f' WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ],InteriorInfo[a][IntEndWorld],InteriorInfo[a][IntEndInt], PlayerInfo[playerid][HP], PlayerInfo[playerid][Armor], PlayerInfo[playerid][DBID]);
						//mysql_query(MySQL, largequery);
						if(PlayerInfo[playerid][Licenses][1] == 0){
							ClientMessenger(playerid, "FFFFFF", 3, "* Type /taketest to take your drivers license test *");
						}
						for(new tap = 1; tap <= MAX_PLAYER_VEHICLES; tap++)
						{
							if(PlayerInfo[playerid][PVehs][tap] != 0){
								ClientMessenger(playerid, "FFFFFF", 3, "* If you want to buy a custom license plate. Type /buycustomlicenceplate *");
								break;
							}
						}
						break;
					}
				}
			}
		}
		if(onemessage == 0){
			ClientMessenger(playerid, "FF0000", 5, "/enter");
		}
		largequery[0] = '\0';
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:checkmybiz(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Biz] != 0) {
			if(Businesses[PlayerInfo[playerid][Biz]][BizEndWorld] == GetPlayerVirtualWorld(playerid) && Businesses[PlayerInfo[playerid][Biz]][BizEndInt] == GetPlayerInterior(playerid)) {
				new message[144];
				format(message, sizeof(message), "* Your %s has %i stocks left & and has made %i dollars! *", GetBusinesses(Businesses[PlayerInfo[playerid][Biz]][BizType]), Businesses[PlayerInfo[playerid][Biz]][BizStock], Businesses[PlayerInfo[playerid][Biz]][BizMoney]);
				ClientMessenger(playerid, "FFFFFF", 3, message);
				format(message, sizeof(message), "{C2A2DA}* %s checks his business' vault", str_replace("_", " ", GetPlayerNameEx(playerid)));
				ActionMessager(playerid, 25, message);
				message[0] = '\0';
			} else {
				ClientMessenger(playerid, "FFFFFF", 3, "* You are not in your business! *");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You do not own a business!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:takebizmoney(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Biz] != 0) {
			if(Businesses[PlayerInfo[playerid][Biz]][BizEndInt] == PlayerInfo[playerid][InteriorID]) {
				if(PlayerInfo[playerid][Biz] == PlayerInfo[playerid][WorldID]) {
					new message[144], largequery[144];
					format(message, sizeof(message), "* You have taken %i from your %s vault *", Businesses[PlayerInfo[playerid][Biz]][BizMoney], GetBusinesses(Businesses[PlayerInfo[playerid][Biz]][BizType]));
					ClientMessenger(playerid, "FFFFFF", 3, message);
					PlayerInfo[playerid][Money] = (Businesses[PlayerInfo[playerid][Biz]][BizMoney]+PlayerInfo[playerid][Money]);
					Businesses[PlayerInfo[playerid][Biz]][BizMoney] = (Businesses[PlayerInfo[playerid][Biz]][BizMoney] - Businesses[PlayerInfo[playerid][Biz]][BizMoney]);
					ResetPlayerMoney(playerid);
					GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = %i WHERE `id` = %i", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
					mysql_query(MySQL, largequery);
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `Money`=0 WHERE `id` = %i", PlayerInfo[playerid][Biz]);
					mysql_query(MySQL, largequery);
					message[0] = '\0';
					largequery[0] = '\0';
				} else {
					ClientMessenger(playerid, "FFFFFF", 3, "* You are not in the correct business! *");
				}
			} else {
				ClientMessenger(playerid, "FFFFFF", 3, "* You are not in your business! *");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You do not own a business!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:sellhousetobank(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][House] != 0) {
			new message[144], sellhouseconfirm[8], largequery[256], houseid = PlayerInfo[playerid][House];
			if (!sscanf(params, "s[8]", sellhouseconfirm)) {
				if(!strcmp(sellhouseconfirm, "confirm")) {
					format(message, sizeof(message), "* You have sold your house for ${FF0000}%i{FFFFFF}!", (HouseInfo[PlayerInfo[playerid][House]][HousePrice]*50/100));
					ClientMessenger(playerid, "FFFFFF", 3, message);
					PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money]+(HouseInfo[PlayerInfo[playerid][House]][HousePrice]*50/100));
					ResetPlayerMoney(playerid);
					GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
					HouseInfo[PlayerInfo[playerid][House]][HouseOwner] = 0;
					DestroyDynamic3DTextLabel(HouseInfo[PlayerInfo[playerid][House]][HouseText]);
					DestroyDynamicPickup(HouseInfo[PlayerInfo[playerid][House]][HouseIcon]);
					DestroyDynamicMapIcon(HouseInfo[PlayerInfo[playerid][House]][HouseMapIcon]);
					
					format(HouseInfo[PlayerInfo[playerid][House]][HouseTempText], 200, "{FFFF00}House for Sell{FFFFFF} (ID: %i)\n {FF0000}Price{FFFFFF}: ${FF0000}%i{FFFFFF}\n Type /buyhouse to buy!", PlayerInfo[playerid][House], HouseInfo[PlayerInfo[playerid][House]][HousePrice]);
					
					HouseInfo[houseid][HouseIcon] = CreateDynamicPickup(1273, 23, HouseInfo[houseid][HouseX], HouseInfo[houseid][HouseY], HouseInfo[houseid][HouseZ], HouseInfo[houseid][HouseStartWorld], HouseInfo[houseid][HouseStartInt], -1);
					
					HouseInfo[houseid][HouseText] = CreateDynamic3DTextLabel(HouseInfo[houseid][HouseTempText], -1, HouseInfo[houseid][HouseX], HouseInfo[houseid][HouseY], HouseInfo[houseid][HouseZ], 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, HouseInfo[houseid][HouseStartWorld], HouseInfo[houseid][HouseStartInt], -1);
					
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = %i, `house` = 0 WHERE `id` = %i", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
					mysql_query(MySQL, largequery);
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `houses` SET `ownerid` = 0, `tag` = '/sethousetag' WHERE `id` = %i", houseid);
					mysql_query(MySQL, largequery);
					PlayerInfo[playerid][House] = 0;
					houseid = 0;
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You did not type confirm correctly!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "You will only get 50 percent back from your original purchase price!");
				format(message, sizeof(message), "Sell price is: ${FF0000}%i{FFFFFF} Type /sellhousetobank confirm", (HouseInfo[houseid][HousePrice]*50/100));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
			message[0] = '\0';
			sellhouseconfirm[0] = '\0';
			largequery[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You do not own a house!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:sellbiztobank(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Biz] != 0) {
			new message[144], sellbizconfirm[8], largequery[256];
			if (!sscanf(params, "s[8]", sellbizconfirm)) {
				if(!strcmp(sellbizconfirm, "confirm")) {
					format(message, sizeof(message), "* You have sold your {FFFF00}%s{FFFFFF} to the bank for ${FF0000}%i{FFFFFF}!", GetBusinesses(Businesses[PlayerInfo[playerid][Biz]][BizType]), (Businesses[PlayerInfo[playerid][Biz]][BizOPrice]*50/100));
					ClientMessenger(playerid, "FFFFFF", 3, message);
					PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money]+(Businesses[PlayerInfo[playerid][Biz]][BizOPrice]*50/100));
					ResetPlayerMoney(playerid);
					GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
					Businesses[PlayerInfo[playerid][Biz]][BizOwner] = 0;
					
					DestroyDynamic3DTextLabel(Businesses[PlayerInfo[playerid][Biz]][BizText]);
					
					format(Businesses[PlayerInfo[playerid][Biz]][BizTempText], 200, "{FFFF00}%s for Sell{FFFFFF} (ID: %i)\n ${FF0000}Price{FFFFFF}: {FF0000}%i{FFFFFF}\n Type /buybiz to buy!", GetBusinesses(Businesses[PlayerInfo[playerid][Biz]][BizType]), PlayerInfo[playerid][Biz], Businesses[PlayerInfo[playerid][Biz]][BizOPrice]);
					
					Businesses[PlayerInfo[playerid][Biz]][BizText] = CreateDynamic3DTextLabel(Businesses[PlayerInfo[playerid][Biz]][BizTempText], -1, Businesses[PlayerInfo[playerid][Biz]][BizX], Businesses[PlayerInfo[playerid][Biz]][BizY], Businesses[PlayerInfo[playerid][Biz]][BizZ], 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0, -1);
				
					Businesses[PlayerInfo[playerid][Biz]][BizPrice] = Businesses[PlayerInfo[playerid][Biz]][BizOPrice];
					Businesses[PlayerInfo[playerid][Biz]][BizStock] = 0;
					Businesses[PlayerInfo[playerid][Biz]][BizMoney] = 0;
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = %i, `biz` = 0 WHERE `id` = %i", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
					mysql_query(MySQL, largequery);
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `OwnerID` = 0, `Price` = %i, `Stock`=0, `Money`=0 WHERE `id` = %i", Businesses[PlayerInfo[playerid][Biz]][BizOPrice], PlayerInfo[playerid][Biz]);
					mysql_query(MySQL, largequery);
					PlayerInfo[playerid][Biz] = 0;
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You did not type confirm correctly!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "You will only get 50 percent back from your original purchase price!");
				format(message, sizeof(message), "Sell price is: ${FF0000}%i{FFFFFF} Type /sellbiztobank confirm", (Businesses[PlayerInfo[playerid][Biz]][BizOPrice]*50/100));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
			message[0] = '\0';
			sellbizconfirm[0] = '\0';
			largequery[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You do not own a business!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:buybiz(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new onemessage = 0, onemessage2 = 0;
		for(new a = 0; a < sizeof(Businesses); a++) {
			if(IsPlayerInRangeOfPoint(playerid,1.0,Businesses[a][BizX],Businesses[a][BizY],Businesses[a][BizZ])) {
				onemessage = 1;
				if(PlayerInfo[playerid][Biz] == 0) {
					if(Businesses[a][BizOwner] == 0) {
						new message[144], buybizid, bizconfirm[8], largequery[144];
						if (!sscanf(params, "is[8]", buybizid, bizconfirm)) {
							if(buybizid == a) {
								if(!strcmp(bizconfirm, "confirm")) {
									if(0 <= (PlayerInfo[playerid][Money] - Businesses[a][BizPrice])){
										onemessage2 = 1;
										DestroyDynamic3DTextLabel(Businesses[a][BizText]);
										Businesses[a][BizOwner] = PlayerInfo[playerid][DBID];
										
										TaxMoney = (TaxMoney + TaxMoneyCountBiz(Businesses[a][BizPrice]));
										PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - Businesses[a][BizPrice]);
										
										Businesses[a][BizPrice] = 1;
										ResetPlayerMoney(playerid);
										GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = %i, `biz` = %i WHERE `id` = %i", PlayerInfo[playerid][Money], a, PlayerInfo[playerid][DBID]);
										mysql_query(MySQL, largequery);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `OwnerID` = %i, `Price` = 1 WHERE `id` = '%i'", Businesses[a][BizOwner], a);
										mysql_query(MySQL, largequery);
										PlayerInfo[playerid][Biz] = a;
										format(Businesses[a][BizTempText], 325, "{FFFF00}%s{FFFFFF} (ID: %i)\n {FFFFFF}Type /enter\n {FFFFFF}Entrance Price{FFFFFF}: ${FF0000}%i{FFFFFF}\n Owner: %s", GetBusinesses(Businesses[a][BizType]), a, Businesses[a][BizPrice], str_replace("_", " ", GetPlayerNameEx(playerid)));
										Businesses[a][BizText] = CreateDynamic3DTextLabel(Businesses[a][BizTempText], -1, Businesses[a][BizX], Businesses[a][BizY], Businesses[a][BizZ], 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, Businesses[a][BizStartWorld], Businesses[a][BizStartInt], -1);
										format(message, sizeof(message), "* You just bought an {FFFF00}%s{FFFFFF} for ${FF0000}%i{FFFFFF}! *", GetBusinesses(Businesses[a][BizType]), Businesses[a][BizPrice], a);
										ClientMessenger(playerid, "FFFFFF", 3, message);
										PlayAudioStreamForPlayer(playerid, "https://raw.githubusercontent.com/chaos12135/sarp_forum/master/_files/complete.mp3");
									} else {
										ClientMessenger(playerid, "FFFFFF", 3, "* You do not have enough money to buy this business! *");
										onemessage2 = 1;
									}
								} else {
									ClientMessenger(playerid, "FFFFFF", 1, "You did not type confirm correctly!");
									onemessage2 = 1;
								}
							} else {
								ClientMessenger(playerid, "FFFFFF", 1, "You did not select the correct business ID!");
								onemessage2 = 1;
							}
						}
						if(onemessage2 == 0) {
							format(message, sizeof(message), "* Are sure you want to buy this business for ${FF0000}%i{FFFFFF}, type /buybiz %i confirm *", Businesses[a][BizPrice], a);
							ClientMessenger(playerid, "FFFFFF", 3, message);
						}
						message[0] = '\0';
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "This business is not for sale!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 1, "You already own a business. You can not own two!");
				}
			}
		}
		if(onemessage == 0) {
			ClientMessenger(playerid, "FFFFFF", 5, "/buybiz");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:getpos(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		//if(PlayerInfo[playerid][Admin] >= 1) {
			//if(PlayerInfo[playerid][Admin] >= 2) {
		GetPlayerPos(playerid,PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ]);
		GetPlayerFacingAngle(playerid, PlayerInfo[playerid][FacingAngle]);
		PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
		PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
		SendClientMessage(playerid, -1, "{FF0000}SERVER{FFFFFF}: Your current position is:");
		format(message, sizeof(message), "X: %f", PlayerInfo[playerid][PosX]);
		SendClientMessage(playerid, -1, message);
		format(message, sizeof(message), "Y: %f", PlayerInfo[playerid][PosY]);
		SendClientMessage(playerid, -1, message);
		format(message, sizeof(message), "Z: %f", PlayerInfo[playerid][PosZ]);
		SendClientMessage(playerid, -1, message);
		format(message, sizeof(message), "A: %f", PlayerInfo[playerid][FacingAngle]);
		SendClientMessage(playerid, -1, message);
		format(message, sizeof(message), "WorldID: %i", PlayerInfo[playerid][WorldID]);
		SendClientMessage(playerid, -1, message);
		format(message, sizeof(message), "InteriorID: %i", PlayerInfo[playerid][InteriorID]);
		SendClientMessage(playerid, -1, message);
			//} else {
			//  format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(2), GetAdminRanks(2));
			//  SendClientMessage(playerid, -1, message);
			//}
		//} else {
		//  ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		//}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:togglemusic(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][TempInfo][15] == 1){
			PlayerInfo[playerid][TempInfo][15] = 0;
			ClientMessenger(playerid, "FF0000", 1, "You have untoggled streaming music");
		} else if(PlayerInfo[playerid][TempInfo][15] == 0){
			PlayerInfo[playerid][TempInfo][15] = 1;
			ClientMessenger(playerid, "FF0000", 1, "You have toggled streaming music");
			StopAudioStreamForPlayer(playerid);
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}



COMMAND:setplayercarslot(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Admin] >= 1) {
			new message[300];
			if(PlayerInfo[playerid][Admin] >= 4) {
				new targetid, carslot, vehicleid, licence[33];
				if (!sscanf(params, "uii", targetid, carslot, vehicleid)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online]==1){
							if(carslot >= 1 && MAX_PLAYER_VEHICLES >= carslot){
								if(vehicleid >= 400 && vehicleid <= 611 || vehicleid == 0) {
									format(message, sizeof(message), "%s has set %s car slot %i to vehicle model %s(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)), carslot, GetVehicleInformation(vehicleid), vehicleid);
									ClientMessenger(playerid, "FF0000", 4, message);
									format(message, sizeof(message), "* %s has set your car slot %i to vehicle model %s(%i) *", str_replace("_", " ", GetPlayerNameEx(playerid)), carslot, GetVehicleInformation(vehicleid), vehicleid);
									ClientMessenger(targetid, "FFFFFF", 3, message);
									if(PlayerInfo[targetid][PVehs][carslot] != 0){
										LastVehicleID[PlayerInfo[targetid][PVehsID][carslot]] = 0;
										DestroyVehicle(PlayerInfo[targetid][PVehsID][carslot]);
										PlayerInfo[targetid][PVehsID][carslot] = 0;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][Vehicle] = 0;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][Faction] = 0;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][Color1] = -1;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][Color2] = -1;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][EngineS] = 0;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][LightS] = 0;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][DoorLS] = 1;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][HoodS] = 0;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][TrunkS] = 0;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][Temp] = 0;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][Health] = 0;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][VDBID] = 0;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][VehPX] = 0;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][VehPY] = 0;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][VehPZ] = 0;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][VehPA] = 0;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][VehX] = 0;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][VehY] = 0;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][VehZ] = 0;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][VehA] = 0;
										Vehicles[PlayerInfo[targetid][PVehsID][carslot]][VehLicence][0] = '\0';
									}
									PlayerInfo[targetid][PVehs][carslot] = vehicleid;
									GetPlayerPos(targetid, PlayerInfo[targetid][PosX], PlayerInfo[targetid][PosY], PlayerInfo[targetid][PosZ]);
									GetPlayerFacingAngle(targetid, PlayerInfo[targetid][FacingAngle]);
									if(vehicleid != 0){
										CreateVehicle(vehicleid, PlayerInfo[targetid][PosX],PlayerInfo[targetid][PosY],PlayerInfo[targetid][PosZ], PlayerInfo[targetid][FacingAngle], -1, -1, -1);
										for(new w = 1; w <= sizeof(LastVehicleID); w++){
											if(LastVehicleID[w] == 0){
												SetVehicleParamsEx(w, 0, 0, 0, 0, 0, 0, 0);
												LastVehicleID[w] = 1;
												PlayerInfo[targetid][PVehsID][carslot] = w;
												Vehicles[w][Vehicle] = vehicleid;
												Vehicles[w][Faction] = 0;
												Vehicles[w][Color1] = -1;
												Vehicles[w][Color2] = -1;
												Vehicles[w][EngineS] = 0;
												Vehicles[w][LightS] = 0;
												Vehicles[w][DoorLS] = 0;
												Vehicles[w][HoodS] = 0;
												Vehicles[w][TrunkS] = 0;
												
												RedoGenerator:
												format(licence, 33, RandomPlateGenerator());
												format(Vehicles[w][VehLicence], 33, licence);
												new largequery2[144], largequery3[144], limit1, limit2;
												mysql_format(MySQL, largequery2, sizeof(largequery2), "SELECT * FROM `vehicles` WHERE `licenceplate`='%e' LIMIT 1", Vehicles[w][VehLicence]);
												mysql_query(MySQL, largequery2);
												limit1 = cache_num_rows();
												mysql_format(MySQL, largequery3, sizeof(largequery3), "SELECT * FROM `player_vehicles` WHERE `licenceplate`='%e' LIMIT 1", Vehicles[w][VehLicence]);
												mysql_query(MySQL, largequery3);
												limit2 = cache_num_rows();
												if(limit1 == 1 || limit2 == 1){
													goto RedoGenerator;
												}
												largequery2[0] = '\0';
												largequery3[0] = '\0';
												
												SetVehicleNumberPlate(w, Vehicles[w][VehLicence]);
												Vehicles[w][Temp] = 2;
												Vehicles[w][Health] = 1000;
												SetVehicleHealth(w, 1000);
												Vehicles[w][VDBID] = 0;
												Vehicles[w][VehPX] = PlayerInfo[targetid][PosX];
												Vehicles[w][VehPY] = PlayerInfo[targetid][PosY];
												Vehicles[w][VehPZ] = PlayerInfo[targetid][PosZ];
												Vehicles[w][VehPA] = PlayerInfo[targetid][FacingAngle];
												Vehicles[w][VehX] = PlayerInfo[targetid][PosX];
												Vehicles[w][VehY] = PlayerInfo[targetid][PosY];
												Vehicles[w][VehZ] = PlayerInfo[targetid][PosZ];
												Vehicles[w][VehA] = PlayerInfo[targetid][FacingAngle];
												SetVehicleToRespawn(w);
												break;
											}
										}
										mysql_format(MySQL, message, sizeof(message), "SELECT * FROM `player_vehicles` WHERE `playerid` = %i AND `slot` = %i LIMIT 1", PlayerInfo[targetid][DBID], carslot);
										mysql_query(MySQL, message);
										if(cache_num_rows() == 1){
											mysql_format(MySQL, message, sizeof(message), "UPDATE `player_vehicles` SET `vehicle` = %i, `licenceplate`='%e', `px`='%f', `py`='%f', `pz`='%f', `pa`='%f' WHERE `slot` = %i AND `playerid` = %i", vehicleid, licence, PlayerInfo[targetid][PosX], PlayerInfo[targetid][PosY], PlayerInfo[targetid][PosZ], PlayerInfo[targetid][FacingAngle], carslot, PlayerInfo[targetid][DBID]);
											mysql_query(MySQL, message);
											mysql_format(MySQL, message, sizeof(message), "UPDATE `player_vehicles` SET `x`='%f', `y`='%f', `z`='%f', `a`='%f' WHERE `slot` = %i AND `playerid` = %i", PlayerInfo[targetid][PosX], PlayerInfo[targetid][PosY], PlayerInfo[targetid][PosZ], PlayerInfo[targetid][FacingAngle], carslot, PlayerInfo[targetid][DBID]);
											mysql_query(MySQL, message);
										} else {
											format(message, sizeof(message), "INSERT INTO `player_vehicles` (`x`, `y`, `z`, `a`, `px`, `py`, `pz`, `pa`, `vehicle`, `slot`, `licenceplate`, `world`, `interior`, `playerid`) VALUES (");
											strcat(ReadAllMessages[playerid], message);
											format(message, sizeof(message), "'%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', ", PlayerInfo[targetid][PosX], PlayerInfo[targetid][PosY], PlayerInfo[targetid][PosZ], PlayerInfo[targetid][FacingAngle], PlayerInfo[targetid][PosX], PlayerInfo[targetid][PosY], PlayerInfo[targetid][PosZ], PlayerInfo[targetid][FacingAngle]);
											strcat(ReadAllMessages[playerid], message);
											mysql_format(MySQL, message, sizeof(message), "'%i', '%i', '%e', '%i', '%i', '%i')", vehicleid, carslot, Vehicles[PlayerInfo[targetid][PVehsID][carslot]][VehLicence], GetPlayerVirtualWorld(targetid), GetPlayerInterior(targetid), PlayerInfo[targetid][DBID]);
											strcat(ReadAllMessages[playerid], message);
											mysql_query(MySQL, ReadAllMessages[playerid]);
											ReadAllMessages[playerid][0] = '\0';
										}
									} else {
										mysql_format(MySQL, message, sizeof(message), "SELECT * FROM `player_vehicles` WHERE `playerid` = %i AND `slot` = %i LIMIT 1", PlayerInfo[targetid][DBID], carslot);
										mysql_query(MySQL, message);
										if(cache_num_rows() == 1){
											mysql_format(MySQL, message, sizeof(message), "DELETE FROM `player_vehicles` WHERE `playerid` = %i AND `slot` = %i LIMIT 1", PlayerInfo[targetid][DBID], carslot);
											mysql_query(MySQL, message);
										}
									}
								} else {
									ClientMessenger(playerid, "FF0000", 1, "Invalid vehicle model");
								}
							} else {
								format(message, sizeof(message), "There are only %i possible vehicle slots available to use!", MAX_PLAYER_VEHICLES);
								ClientMessenger(playerid, "FF0000", 1, message);
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That has no spawned yet, or is not online!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Invalid player name, or player id");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/setplayercarslot <playername/playerid> <carslot> <vehicleid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
			message[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:playmusic(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Admin] >= 1) {
			new message[144], songurl[250];
			if(PlayerInfo[playerid][Admin] >= 3) {
				if (!sscanf(params, "s[144]", songurl)) {
					format(message, sizeof(message), "%s is streaming music to everyone: %s", str_replace("_", " ", GetPlayerNameEx(playerid)), songurl);
					ClientMessenger(playerid, "FF0000", 4, message);
					foreach(Player, i)
					{
						if(PlayerInfo[i][Online] == 1) {
							if(PlayerInfo[i][TempInfo][15] == 0) {
								PlayAudioStreamForPlayer(i, songurl);
							}
						}
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/playmusic <url>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(3), GetAdminRanks(3));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
			message[0] = '\0';
			songurl[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:changemybizprice(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Biz] != 0) {
			new bizprice, largequery[144], message[144];
			if (!sscanf(params, "i", bizprice)) {
				if(bizprice >= 0) {
					Businesses[PlayerInfo[playerid][Biz]][BizPrice] = bizprice;
					DestroyDynamic3DTextLabel(Businesses[PlayerInfo[playerid][Biz]][BizText]);
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `Price` = %i WHERE `id` = %i", bizprice, PlayerInfo[playerid][Biz]);
					mysql_query(MySQL, largequery);
					format(Businesses[PlayerInfo[playerid][Biz]][BizTempText], 325, "{FFFF00}%s{FFFFFF} (ID: %i)\n {FFFFFF}Type /enter\n {FFFFFF}Entrance Price{FFFFFF}: ${FF0000}%i{FFFFFF}\n Owner: %s", GetBusinesses(Businesses[PlayerInfo[playerid][Biz]][BizType]), PlayerInfo[playerid][Biz], Businesses[PlayerInfo[playerid][Biz]][BizPrice], str_replace("_", " ", GetPlayerNameEx(playerid)));
					Businesses[PlayerInfo[playerid][Biz]][BizText] = CreateDynamic3DTextLabel(Businesses[PlayerInfo[playerid][Biz]][BizTempText], -1, Businesses[PlayerInfo[playerid][Biz]][BizX], Businesses[PlayerInfo[playerid][Biz]][BizY], Businesses[PlayerInfo[playerid][Biz]][BizZ], 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0, -1);
					format(message, sizeof(message), "** You have changed your business enterance price to {FF0000}%i{FFFFFF} **", bizprice);
					ClientMessenger(playerid, "FFFFFF", 2, message);
				} else {
					ClientMessenger(playerid, "FFFFFF", 3, "* You can not have a price that is below 0! *");
				}
			} else {
				ClientMessenger(playerid, "FFFFFF", 5, "/changemybizprice <amount>");
			}
			message[0] = '\0';
			largequery[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You do not own a business!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:movebizintpos(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 2) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][PropertyModerator] >= 2) {
				new bizid;
				if (!sscanf(params, "i", bizid)) {
					if(LastBusinessesID[bizid] != 0) {
						new largequery[256];
						format(message, sizeof(message), "%s has moved biz int(%i) to their location", str_replace("_", " ", GetPlayerNameEx(playerid)), bizid);
						ClientMessenger(playerid, "FF0000", 1, message);
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
						PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
						Businesses[bizid][BizIntX] = PlayerInfo[playerid][PosX];
						Businesses[bizid][BizIntY] = PlayerInfo[playerid][PosY];
						Businesses[bizid][BizIntZ] = PlayerInfo[playerid][PosZ];
						Businesses[bizid][BizEndWorld] = PlayerInfo[playerid][WorldID];
						Businesses[bizid][BizEndInt] = PlayerInfo[playerid][InteriorID];
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `intx`='%f', `inty`='%f', `intz`='%f', `EndWorld`=%i, `EndInt`=%i WHERE `id` = %i", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], Businesses[bizid][BizEndWorld], Businesses[bizid][BizEndInt], bizid);
						mysql_query(MySQL, largequery);
						DestroyDynamicPickup(Businesses[bizid][BizIntIcon]);
						DestroyDynamic3DTextLabel(Businesses[bizid][BizIntText]);
						Businesses[bizid][BizIntIcon] = CreateDynamicPickup(1239, 23, Businesses[bizid][BizIntX], Businesses[bizid][BizIntY], Businesses[bizid][BizIntZ], Businesses[bizid][BizEndWorld], Businesses[bizid][BizEndInt], -1);
						Businesses[bizid][BizIntText] = CreateDynamic3DTextLabel("/exit", -1, Businesses[bizid][BizIntX], Businesses[bizid][BizIntY], Businesses[bizid][BizIntZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, Businesses[bizid][BizEndWorld], Businesses[bizid][BizEndInt], -1);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid biz id");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/movebizintpos <bizid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Director{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:setbizstocks(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5) {
				new bizid, bizamount;
				if (!sscanf(params, "ii", bizid, bizamount)) {
					if(LastBusinessesID[bizid] != 0) {
						if(bizamount >= 1){
							if(Businesses[bizid][BizOwner] != 0){
								new largequery[144];
								mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", Businesses[bizid][BizOwner]);
								mysql_query(MySQL, largequery);
								new tempname[MAX_PLAYER_NAME];
								cache_get_field_content(0, "name", tempname);
								format(message, sizeof(message), "%s has changed biz(%i) %s stocks to %i which belongs to %s", str_replace("_", " ", GetPlayerNameEx(playerid)), bizid, GetBusinesses(Businesses[bizid][BizType]), bizamount, str_replace("_", " ", tempname));
								ClientMessenger(playerid, "FFFFFF", 4, message);
								Businesses[bizid][BizStock] = bizamount;
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `Stock` = %i WHERE `id` = %i", bizamount, bizid);
								mysql_query(MySQL, largequery);
								largequery[0] = '\0';
							} else {
								ClientMessenger(playerid, "FFFFFF", 1, "This business is not owned by anyone, so you can not change the stocks on it!");
							}
						} else {
							ClientMessenger(playerid, "FFFFFF", 1, "You can not go below 1 stock!");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid business!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/setbizstocks <bizid> <stocks>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FFFFFF", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:movebiz(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 2) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][PropertyModerator] >= 2) {
				new bizid;
				if (!sscanf(params, "i", bizid)) {
					if(bizid != 0 && bizid <= 50) {
						if(LastBusinessesID[bizid] != 0) {
							new largequery[144];
							GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
							PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
							PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
							mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `x` = '%f', `y` = '%f', `z` = '%f', `World`=%i, `WorldInt`=%i WHERE `id` = %i", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], bizid);
							mysql_query(MySQL, largequery);
							Businesses[bizid][BizX] = PlayerInfo[playerid][PosX];
							Businesses[bizid][BizY] = PlayerInfo[playerid][PosY];
							Businesses[bizid][BizZ] = PlayerInfo[playerid][PosZ];
							Businesses[bizid][BizStartWorld] = PlayerInfo[playerid][WorldID];
							Businesses[bizid][BizStartInt] = PlayerInfo[playerid][InteriorID];
							DestroyDynamicPickup(Businesses[bizid][BizIcon]);
							DestroyDynamic3DTextLabel(Businesses[bizid][BizText]);
							DestroyDynamicMapIcon(Businesses[bizid][BizMapIcon]);

							if(Businesses[bizid][BizOwner] == 0) { 
								format(Businesses[bizid][BizTempText], 325, "{FFFF00}%s for Sell{FFFFFF} (ID: %i)\n {FF0000}Price{FFFFFF}: ${FF0000}%i{FFFFFF}\n Type /buybiz to buy!", GetBusinesses(Businesses[bizid][BizType]), bizid, Businesses[bizid][BizPrice]);
								Businesses[bizid][BizText] = CreateDynamic3DTextLabel(Businesses[bizid][BizTempText], -1, Businesses[bizid][BizX], Businesses[bizid][BizY], Businesses[bizid][BizZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, Businesses[bizid][BizStartWorld], Businesses[bizid][BizStartInt], -1);
								format(message, sizeof(message), "%s has moved a biz(%i): %s which is not owned by anyone", str_replace("_", " ", GetPlayerNameEx(playerid)), bizid, GetBusinesses(Businesses[bizid][BizType]));
							} else {
								mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", Businesses[bizid][BizOwner]);
								mysql_query(MySQL, largequery);
								new tempname[MAX_PLAYER_NAME];
								cache_get_field_content(0, "name", tempname);
								format(message, sizeof(message), "%s has moved a biz(%i): %s which is owned by %s", str_replace("_", " ", GetPlayerNameEx(playerid)), bizid, GetBusinesses(Businesses[bizid][BizType]), str_replace("_", " ", tempname));
								format(Businesses[bizid][BizTempText], 325, "{FFFF00}%s{FFFFFF} (ID: %i)\n {FFFFFF}Type /enter\n {FFFFFF}Entrance Price{FFFFFF}: ${FF0000}%i{FFFFFF}\n Owner: %s", GetBusinesses(Businesses[bizid][BizType]), bizid, Businesses[bizid][BizPrice], str_replace("_", " ", tempname));
								Businesses[bizid][BizText] = CreateDynamic3DTextLabel(Businesses[bizid][BizTempText], -1, Businesses[bizid][BizX], Businesses[bizid][BizY], Businesses[bizid][BizZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, Businesses[bizid][BizStartWorld], Businesses[bizid][BizStartInt], -1);
								tempname[0] = '\0';
							}   

							BizMapIconLoader(bizid);
							BizIconLoader(bizid); 
							
							ClientMessenger(playerid, "FFFFFF", 4, message);
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FFFFFF", 1, "Not a valid business!");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid business!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/movebiz <bizid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Director{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:deletebiz(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 2) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][PropertyModerator] >= 2) {
				new bizid, bizconfirm[8];
				if (!sscanf(params, "is[8]", bizid, bizconfirm)) {
					if(!strcmp(bizconfirm, "confirm")){
						if(LastBusinessesID[bizid] != 0){
							new largequery[144];
							mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `businesses` WHERE `id`=%i", bizid);
							mysql_query(MySQL, largequery);
							foreach(Player, i)
							{
								if(PlayerInfo[i][Biz] == bizid) {
									PlayerInfo[i][Biz] = 0;
								}
							}
							if(Businesses[bizid][BizOwner] != 0){
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `biz` = 0 WHERE `biz` = %i", bizid);
								mysql_query(MySQL, largequery);
								mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", Businesses[bizid][BizOwner]);
								mysql_query(MySQL, largequery);
								new tempname[MAX_PLAYER_NAME];
								cache_get_field_content(0, "name", tempname);
								format(message, sizeof(message), "%s has deleted a biz(%i): %s which was owned by %s", str_replace("_", " ", GetPlayerNameEx(playerid)), bizid, GetBusinesses(Businesses[bizid][BizType]), str_replace("_", " ", tempname));
								tempname[0] = '\0';
							} else {
								format(message, sizeof(message), "%s has deleted a biz(%i): %s which was not owned by anyone", str_replace("_", " ", GetPlayerNameEx(playerid)), bizid, GetBusinesses(Businesses[bizid][BizType]));
							}
							ClientMessenger(playerid, "FFFFFF", 4, message);

							DestroyDynamicPickup(Businesses[bizid][BizIcon]);
							DestroyDynamic3DTextLabel(Businesses[bizid][BizText]);
							DestroyDynamicPickup(Businesses[bizid][BizIntIcon]);
							DestroyDynamic3DTextLabel(Businesses[bizid][BizIntText]);
							DestroyDynamicMapIcon(Businesses[bizid][BizMapIcon]);
							
							Businesses[bizid][BizX] = 0;
							Businesses[bizid][BizY] = 0;
							Businesses[bizid][BizZ] = 0;
							Businesses[bizid][BizIntX] = 0;
							Businesses[bizid][BizIntY] = 0;
							Businesses[bizid][BizIntZ] = 0;
							Businesses[bizid][BizType] = 0;
							Businesses[bizid][BizOwner] = 0;
							Businesses[bizid][BizPrice] = 0;
							Businesses[bizid][BizOPrice] = 0;
							Businesses[bizid][BizEndInt] = 0;
							Businesses[bizid][BizStock] = 0;
							Businesses[bizid][BizMoney] = 0;
							Businesses[bizid][BizStartWorld] = -1;
							Businesses[bizid][BizStartInt] = -1;
							LastBusinessesID[bizid] = 0;
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FFFFFF", 1, "Not a valid business!");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "You did not type confirm correctly!!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/deletebiz <bizid> confirm");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Director{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:sethousetag(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][House] != 0) {
			new housetag[31], largequery[144], message[144];
			if (!sscanf(params, "s[31]", housetag)) {
				if(strlen(housetag) <= 30) {
					format(HouseInfo[PlayerInfo[playerid][House]][HouseTag], 31, housetag);
					DestroyDynamic3DTextLabel(HouseInfo[PlayerInfo[playerid][House]][HouseText]);
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `houses` SET `tag` = '%e' WHERE `id` = %i", housetag, PlayerInfo[playerid][House]);
					mysql_query(MySQL, largequery);
					mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", HouseInfo[PlayerInfo[playerid][House]][HouseOwner]);
					mysql_query(MySQL, largequery);
					new tempname[MAX_PLAYER_NAME];
					cache_get_field_content(0, "name", tempname);
					format(HouseInfo[PlayerInfo[playerid][House]][HouseTempText], 128, "{FFFF00}%s's House{FFFFFF} (ID: %i)\n%s", str_replace("_", " ", tempname), PlayerInfo[playerid][House], HouseInfo[PlayerInfo[playerid][House]][HouseTag]);
					HouseInfo[PlayerInfo[playerid][House]][HouseText] = CreateDynamic3DTextLabel(HouseInfo[PlayerInfo[playerid][House]][HouseTempText], -1, HouseInfo[PlayerInfo[playerid][House]][HouseX], HouseInfo[PlayerInfo[playerid][House]][HouseY], HouseInfo[PlayerInfo[playerid][House]][HouseZ], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0, -1);
					format(message, sizeof(message), "** You have changed your house tag to {FF0000}%s{FFFFFF} **", housetag);
					ClientMessenger(playerid, "FFFFFF", 3, message);
					tempname[0] = '\0';
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can only have 30 characters max!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 5, "/sethousetag <tag>");
			}
			largequery[0] = '\0';
			housetag[0] = '\0';
			message[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 2, "* You do not own a house! *");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

forward RemovePlayerText(playerid, gametextid);
public RemovePlayerText(playerid, gametextid)
{
	PlayerTextDrawDestroy(playerid, PlayerInfo[playerid][GameText]);
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(newstate == PLAYER_STATE_DRIVER)
	{
		if(Vehicles[GetPlayerVehicleID(playerid)][EngineS] == 0){
			SendClientMessage(playerid, -1, "* Engine is off. Do /engine to turn the vehicle's engine on. *");
		}
		if(PlayerInfo[playerid][Licenses][1] == 0){
			PlayerTextDrawDestroy(playerid, PlayerInfo[playerid][GameText]);
			KillTimer(PlayerInfo[playerid][TempInfo][3]);
			PlayerInfo[playerid][GameText] = CreatePlayerTextDraw(playerid, 160, 380, "~r~You do not have your drivers license");
			PlayerTextDrawShow(playerid, PlayerInfo[playerid][GameText]);
			PlayerInfo[playerid][TempInfo][3] = SetTimerEx("RemovePlayerText", 3000, false, "i", playerid);
		}
		GameTextForPlayer(playerid, GetVehicleInformation(GetVehicleModel(GetPlayerVehicleID(playerid))), 1500, 1);
	}
	return 1;
}

COMMAND:engine(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(IsPlayerInAnyVehicle(playerid)) {
			new message[144], vehicleid;
			if(Vehicles[GetPlayerVehicleID(playerid)][EngineS] == 0){
				vehicleid = GetPlayerVehicleID(playerid);
				format(message, sizeof(message), "{C2A2DA}* %s turns the vehicle's engine on", str_replace("_", " ", GetPlayerNameEx(playerid)));
				ActionMessager(playerid, 25, message);
				Vehicles[vehicleid][EngineS] = 1;
				SetVehicleParamsEx(vehicleid, Vehicles[vehicleid][EngineS], Vehicles[vehicleid][LightS], 0, Vehicles[vehicleid][DoorLS], Vehicles[vehicleid][HoodS], Vehicles[vehicleid][TrunkS], 0);
			} else if(Vehicles[GetPlayerVehicleID(playerid)][EngineS] == 1){
				vehicleid = GetPlayerVehicleID(playerid);
				format(message, sizeof(message), "{C2A2DA}* %s turns the vehicle's engine off", str_replace("_", " ", GetPlayerNameEx(playerid)));
				ActionMessager(playerid, 25, message);
				Vehicles[vehicleid][EngineS] = 0;
				SetVehicleParamsEx(vehicleid, Vehicles[vehicleid][EngineS], Vehicles[vehicleid][LightS], 0, Vehicles[vehicleid][DoorLS], Vehicles[vehicleid][HoodS], Vehicles[vehicleid][TrunkS], 0);
			}
			message[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 2, "* You're not in any vehicle! *");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:quitjob(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Job] != 0) {
			PlayerInfo[playerid][Job] = 0;
			new largequery[144];
			SendClientMessage(playerid, -1, "{FFFF00}* You have quit your job! *");
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `job` = 0 WHERE `id` = %i", PlayerInfo[playerid][DBID]);
			mysql_query(MySQL, largequery);
			DestroyDynamicCP(PlayerInfo[playerid][CPLoc]);
			PlayerInfo[playerid][TempInfo][22] = 0;
			PlayerInfo[playerid][JobItems] = 0;
			PlayerInfo[playerid][CPLoc] = 0;
			largequery[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 2, "* You do not have a job! *");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:hood(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(IsPlayerInAnyVehicle(playerid)){
			new message[144], vehicleid;
			vehicleid = GetPlayerVehicleID(playerid);
			if(Vehicles[vehicleid][HoodS] == 1){
				format(message, sizeof(message), "{C2A2DA}* %s closes the hood", str_replace("_", " ", GetPlayerNameEx(playerid)));
				ActionMessager(playerid, 25, message);
				Vehicles[vehicleid][HoodS] = 0;
				SetVehicleParamsEx(vehicleid, Vehicles[vehicleid][EngineS], Vehicles[vehicleid][LightS], 0, Vehicles[vehicleid][DoorLS], Vehicles[vehicleid][HoodS], Vehicles[vehicleid][TrunkS], 0);
			} else if(Vehicles[vehicleid][HoodS] == 0){
				format(message, sizeof(message), "{C2A2DA}* %s open up the hood", str_replace("_", " ", GetPlayerNameEx(playerid)));
				ActionMessager(playerid, 25, message);
				Vehicles[vehicleid][HoodS] = 1;
				SetVehicleParamsEx(vehicleid, Vehicles[vehicleid][EngineS], Vehicles[vehicleid][LightS], 0, Vehicles[vehicleid][DoorLS], Vehicles[vehicleid][HoodS], Vehicles[vehicleid][TrunkS], 0);
			}
			message[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 2, "* You're not in any vehicle! *");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:trunk(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(IsPlayerInAnyVehicle(playerid)){
			new message[144], vehicleid;
			vehicleid = GetPlayerVehicleID(playerid);
			if(Vehicles[vehicleid][TrunkS] == 1){
				format(message, sizeof(message), "{C2A2DA}* %s closes the trunk", str_replace("_", " ", GetPlayerNameEx(playerid)));
				ActionMessager(playerid, 25, message);
				Vehicles[vehicleid][TrunkS] = 0;
				SetVehicleParamsEx(vehicleid, Vehicles[vehicleid][EngineS], Vehicles[vehicleid][LightS], 0, Vehicles[vehicleid][DoorLS], Vehicles[vehicleid][HoodS], Vehicles[vehicleid][TrunkS], 0);
			} else if(Vehicles[vehicleid][TrunkS] == 0){
				format(message, sizeof(message), "{C2A2DA}* %s open up the trunk", str_replace("_", " ", GetPlayerNameEx(playerid)));
				ActionMessager(playerid, 25, message);
				Vehicles[vehicleid][TrunkS] = 1;
				SetVehicleParamsEx(vehicleid, Vehicles[vehicleid][EngineS], Vehicles[vehicleid][LightS], 0, Vehicles[vehicleid][DoorLS], Vehicles[vehicleid][HoodS], Vehicles[vehicleid][TrunkS], 0);
			}
			message[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 2, "* You're not in any vehicle! *");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:lights(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(IsPlayerInAnyVehicle(playerid)){
			new message[144], vehicleid;
			vehicleid = GetPlayerVehicleID(playerid);
			if(Vehicles[vehicleid][LightS] == 1){
				format(message, sizeof(message), "{C2A2DA}* %s turns the vehicle's lights off", str_replace("_", " ", GetPlayerNameEx(playerid)));
				ActionMessager(playerid, 25, message);
				Vehicles[vehicleid][LightS] = 0;
				SetVehicleParamsEx(vehicleid, Vehicles[vehicleid][EngineS], Vehicles[vehicleid][LightS], 0, Vehicles[vehicleid][DoorLS], Vehicles[vehicleid][HoodS], Vehicles[vehicleid][TrunkS], 0);
			} else if(Vehicles[vehicleid][LightS] == 0){
				format(message, sizeof(message), "{C2A2DA}* %s turns the vehicle's lights on", str_replace("_", " ", GetPlayerNameEx(playerid)));
				ActionMessager(playerid, 25, message);
				Vehicles[vehicleid][LightS] = 1;
				SetVehicleParamsEx(vehicleid, Vehicles[vehicleid][EngineS], Vehicles[vehicleid][LightS], 0, Vehicles[vehicleid][DoorLS], Vehicles[vehicleid][HoodS], Vehicles[vehicleid][TrunkS], 0);
			}
			message[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 2, "* You're not in any vehicle! *");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:fix(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Job] != 0) {
			if(PlayerInfo[playerid][Job] == 1){
				if(IsPlayerInAnyVehicle(playerid)){
					if(PlayerInfo[playerid][JobItems][1] >= 1) {
						new message[144], vehicleid, Float:vehhp;
						new largequery[144];
						vehicleid = GetPlayerVehicleID(playerid);
						GetVehicleHealth(vehicleid, vehhp);
						RemovePlayerFromVehicle(playerid);
						PlayerInfo[playerid][JobItems][1] = (PlayerInfo[playerid][JobItems][1] - 1);
						format(message, sizeof(message), "{C2A2DA}* %s opens up the hood, and walk towards the engine compartment fixing it *", str_replace("_", " ", GetPlayerNameEx(playerid)));
						ActionMessager(playerid, 25, message);
						if(vehhp <= 450.0) {
							SetVehicleHealth(vehicleid, 450.0);
						} else if(vehhp >= 451.0 && vehhp <= 650.0) {
							SetVehicleHealth(vehicleid, 650.0);
						} else if(vehhp >= 651.0 && vehhp <= 850.0) {
							SetVehicleHealth(vehicleid, 850.0);
						} else if(vehhp >= 851.0 && vehhp <= 1000.0) {
							if(Vehicles[vehicleid][Health] >= 1001.0){
								SetVehicleHealth(vehicleid, Vehicles[vehicleid][Health]);
							} else {
								SetVehicleHealth(vehicleid, 1000.0);
							}
						}
						
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_inventory` SET `itemvalues` = %i WHERE `playerid` = %i AND `itemname` = 'ToolKits' LIMIT 1;", PlayerInfo[playerid][JobItems][1], PlayerInfo[playerid][DBID]);
						mysql_query(MySQL, largequery);
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_jobs` SET `jobitem` = %i WHERE `playerid` = %i AND `jobid` = %i", PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]], PlayerInfo[playerid][DBID], PlayerInfo[playerid][Job]);
						mysql_query(MySQL, largequery);
						
						Vehicles[vehicleid][HoodS] = 1;
						SetVehicleParamsEx(vehicleid, 1, Vehicles[vehicleid][LightS], 0, Vehicles[vehicleid][DoorLS], 1, Vehicles[vehicleid][TrunkS], 0);
						largequery[0] = '\0';
						message[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 2, "* You do not own any tools to repair this vehicle. Go buy some from 24/7! *");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 2, "* You're not in any vehicle! *");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 2, "* You are currently not a mechanic! *");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 2, "* You don't have any job! *");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
	if(Vehicles[vehicleid][Temp] == 2 && Vehicles[vehicleid][VDBID] == 0){
		SetVehiclePos(vehicleid, Vehicles[vehicleid][VehX], Vehicles[vehicleid][VehY], Vehicles[vehicleid][VehZ]);
		SetVehicleZAngle(vehicleid, Vehicles[vehicleid][VehA]);
		Vehicles[vehicleid][EngineS] = 0;
		Vehicles[vehicleid][LightS] = 0;
		Vehicles[vehicleid][HoodS] = 0;
		Vehicles[vehicleid][TrunkS] = 0;
		SetVehicleParamsEx(vehicleid, 0, 0, 0, Vehicles[vehicleid][DoorLS], 0, 0, 0);
	}
	if(Vehicles[vehicleid][Temp] == 0){
		SetVehicleHealth(vehicleid, Vehicles[vehicleid][Health]);
		SetVehiclePos(vehicleid, Vehicles[vehicleid][VehX], Vehicles[vehicleid][VehY], Vehicles[vehicleid][VehZ]);
		SetVehicleZAngle(vehicleid, Vehicles[vehicleid][VehA]);
		Vehicles[vehicleid][EngineS] = 0;
		Vehicles[vehicleid][LightS] = 0;
		Vehicles[vehicleid][DoorLS] = 0;
		Vehicles[vehicleid][HoodS] = 0;
		Vehicles[vehicleid][TrunkS] = 0;
		SetVehicleParamsEx(vehicleid, 0, 0, 0, 0, 0, 0, 0);
	}
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{

	printf("- - - - - - - - - - - - - - - - - - - -");
	printf("Vehicle ClaimID: %i", vehicleid);
	printf("Vehicle DatabaseID: %i", Vehicles[vehicleid][VDBID]);
	printf("Vehicle Temp: %i", Vehicles[vehicleid][Temp]);
	printf("Vehicle ModelID: %i", Vehicles[vehicleid][Vehicle]);

	if(Vehicles[vehicleid][Temp] == 1 && Vehicles[vehicleid][VDBID] == 0){
		if(LastVehicleID[vehicleid] == 1){
			print("TEMP VEHICLE DIED");
			LastVehicleID[vehicleid] = 0;
			DestroyVehicle(vehicleid);
			Vehicles[vehicleid][VDBID] = 0;
			Vehicles[vehicleid][VehX] = 0;
			Vehicles[vehicleid][VehY] = 0;
			Vehicles[vehicleid][VehZ] = 0;
			Vehicles[vehicleid][VehA] = 0;
			Vehicles[vehicleid][VehPX] = 0;
			Vehicles[vehicleid][VehPY] = 0;
			Vehicles[vehicleid][VehPZ] = 0;
			Vehicles[vehicleid][VehPA] = 0;
			Vehicles[vehicleid][Vehicle] = 0;
			Vehicles[vehicleid][Faction] = 0;
			Vehicles[vehicleid][Health] = 0;
			Vehicles[vehicleid][EngineS] = 0;
			Vehicles[vehicleid][LightS] = 0;
			Vehicles[vehicleid][DoorLS] = 0;
			Vehicles[vehicleid][HoodS] = 0;
			Vehicles[vehicleid][TrunkS] = 0;
			Vehicles[vehicleid][Temp] = 0;
			Vehicles[vehicleid][Color1] = 0;
			Vehicles[vehicleid][Color2] = 0;
		}
	} else {
		print("PERMA VEHICLE DIED");
	}
	printf("- - - - - - - - - - - - - - - - - - - -");
	return 1;
}

COMMAND:buyproducts(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][Job] == 4) {
			new amount;
			if (!sscanf(params, "i", amount)) {
				new message[144];
				for(new a = 0; a < sizeof(JobInfo); a++) {
					if(IsPlayerInRangeOfPoint(playerid,1.5,JobInfo[a][JobX],JobInfo[a][JobY],JobInfo[a][JobZ])) {
						if(JobInfo[a][JobType] == 4) {
							if(amount <= 250 && ((PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]]+amount) <= 250)){
								if((PlayerInfo[playerid][Money] - amount*GameSettings[95][GameSetting]) >= 0){
									new largequery[144];
									TaxMoney = (TaxMoney + TaxMoneyCountBiz(amount*GameSettings[95][GameSetting]));
									PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - (amount*GameSettings[95][GameSetting]));
									PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]] = (amount+PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]]);
									ResetPlayerMoney(playerid);
									GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
									format(message, sizeof(message), "* You have bought %i products for %i! *", amount, (amount*GameSettings[95][GameSetting]));
									ClientMessenger(playerid, "FFFF00", 3, message);
									format(message, sizeof(message), "{C2A2DA}* %s has bought some products *", str_replace("_", " ", GetPlayerNameEx(playerid)));
									ActionMessager(playerid, 25, message);
									mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = %i WHERE `id` = %i", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
									mysql_query(MySQL, largequery);
									mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_jobs` SET `jobitem` = %i WHERE `playerid` = %i AND `jobid` = %i", PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]], PlayerInfo[playerid][DBID], PlayerInfo[playerid][Job]);
									mysql_query(MySQL, largequery);
									largequery[0] = '\0';
								} else {
									ClientMessenger(playerid, "FF0000", 2, "* You do not have enough money for that! *");
								}
							} else {
								ClientMessenger(playerid, "FF0000", 2, "* You can only hold 250 products! *");
							}
						}
					}
				}
				message[0] = '\0';
			} else {
				ClientMessenger(playerid, "FF0000", 5, "/buyproducts <amount (maximum)>");
			}
		} else {
			ClientMessenger(playerid, "FFFF00", 2, "* You don't have the business saleman job! *");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:sellproducts(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1){
		if(PlayerInfo[playerid][Job] == 4){
			if(PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]] != 0){
				new targetid, amount;
				if (!sscanf(params, "ui", targetid, amount)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1){
							if(PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]] >= amount && amount != 0){
								if(PlayerInfo[targetid][Biz] != 0){
									if(playerid != targetid){
										new message[144], largequery[144];
										mysql_format(MySQL, largequery, sizeof(largequery), "SELECT `Stocks` FROM `businesses` WHERE `Owner`='%e' LIMIT 1", PlayerInfo[targetid][RealName]);
										mysql_query(MySQL, largequery);
										if((amount+(cache_get_field_content_int(0, "Stocks"))) <= 500){
											PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]] = (PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]] - amount);
											format(message, sizeof(message), "* You have sold %i products to %s *", amount, str_replace("_", " ", GetPlayerNameEx(targetid)));
											ClientMessenger(playerid, "FFFF00", 3, message);
											format(message, sizeof(message), "* You have bought %i products from %s *", amount, str_replace("_", " ", GetPlayerNameEx(playerid)));
											ClientMessenger(targetid, "FFFF00", 3, message);
											format(message, sizeof(message), "{C2A2DA}* %s has given %s some products *", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)));
											ActionMessager(playerid, 25, message);
											mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_jobs` SET `jobitem` = %i WHERE `playerid` = %i AND `jobid` = %i", PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]], PlayerInfo[playerid][DBID], PlayerInfo[playerid][Job]);
											mysql_query(MySQL, largequery);
											mysql_format(MySQL, largequery, sizeof(largequery), "SELECT `Stocks` FROM `businesses` WHERE `Owner`='%e' LIMIT 1", PlayerInfo[targetid][RealName]);
											mysql_query(MySQL, largequery);
											amount = (amount+(cache_get_field_content_int(0, "Stocks")));
											Businesses[PlayerInfo[targetid][Biz]][BizStock] = amount;
											mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `businesses` SET `Stock` = %i WHERE `Owner` = '%e'", amount, PlayerInfo[targetid][RealName]);
											mysql_query(MySQL, largequery);
											largequery[0] = '\0';
											message[0] = '\0';
										} else {
											ClientMessenger(playerid, "FF0000", 2, "* You can't sell that many products to this person, try a lower number! *");
										}
										message[0] = '\0';
										largequery[0] = '\0';
									} else {
										ClientMessenger(playerid, "FF0000", 2, "* You can't sell products to yourself. *");
									}
								} else {
									ClientMessenger(playerid, "FF0000", 2, "* That person does not own a business, so you can't sell products to him *");
								}
							} else if(amount <= 0 || amount == 0) {
								ClientMessenger(playerid, "FF0000", 2, "* You can't sell products that are zero or below! *");
							} else {
								ClientMessenger(playerid, "FF0000", 2, "* You have less products then what you're trying to sell *");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player hasn't spawned yet!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/sellproducts <playername/playerid> <amount>");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 2, "* You got no products to sell *");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 2, "* You are not a business salesman! *");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:defend(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Job] == 2){
			new targetid;
			if (!sscanf(params, "u", targetid)) {
				if(targetid != 65535){
					if(PlayerInfo[targetid][Online] == 1){
						if(PlayerInfo[targetid][Warrants] >= 1){
							if(playerid != targetid){
								new largequery[128], message[144];
								if(PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]] == 0){
									if(PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]] <= PlayerInfo[targetid][Warrants]){
										format(message, sizeof(message), "* You have defended %s for %i warrant(s) *", str_replace("_", " ", GetPlayerNameEx(targetid)), PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]]);
										ClientMessenger(playerid, "357EC7", 3, message);
										format(message, sizeof(message), "* %s has defended you for %i warrant(s) *", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[targetid][Warrants]);
										ClientMessenger(targetid, "00FFFF", 3, message);
										PlayerInfo[targetid][Warrants] = (PlayerInfo[targetid][Warrants]-PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]]);
									} else {
										format(message, sizeof(message), "* You have defended %s for %i warrant(s) *", str_replace("_", " ", GetPlayerNameEx(targetid)), PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]]);
										ClientMessenger(playerid, "357EC7", 3, message);
										format(message, sizeof(message), "* %s has defended you for %i warrant(s) *", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[targetid][Warrants]);
										ClientMessenger(targetid, "00FFFF", 3, message);
										PlayerInfo[targetid][Warrants] = 0;
									}
									PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]] = (300);
									//PlayerInfo[playerid][TempInfo][22] = SetTimerEx("LawyerDefendAbility", 1000, true, "i", playerid);
									PlayerInfo[playerid][TempInfo][22] = 1;
									if(PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]] != 6){
										PlayerInfo[playerid][JobLevelsP][PlayerInfo[playerid][Job]] = (PlayerInfo[playerid][JobLevelsP][PlayerInfo[playerid][Job]]+1);
										if(PlayerInfo[playerid][JobLevelsP][PlayerInfo[playerid][Job]] < (PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]]*50)){
											mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_jobs` SET `jobpoints` = %i, `jobitem` = %i WHERE `playerid` = %i AND `jobid` = %i", PlayerInfo[playerid][JobLevelsP][PlayerInfo[playerid][Job]], PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]], PlayerInfo[playerid][DBID], PlayerInfo[playerid][Job]);
											mysql_query(MySQL, largequery);
											mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = %i WHERE `id` = %i", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
											mysql_query(MySQL, largequery);
										} else {
											PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]] = (PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]]+1);
											PlayerInfo[playerid][JobLevelsP][PlayerInfo[playerid][Job]] = 0;
											if(PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]] == 6){
												format(message, sizeof(message), "* Congratulations, you've become a level %i in %s job, which is max *", PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]], JobNames(PlayerInfo[playerid][Job]));
												ClientMessenger(playerid, "00FFFF", 3, message);
											} else {
												format(message, sizeof(message), "* Congratulations, you've become a level %i in %s job *", PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]], JobNames(PlayerInfo[playerid][Job]));
												ClientMessenger(playerid, "00FFFF", 3, message);
											}
											mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_jobs` SET `joblevel` = %i, `jobpoints` = %i, `jobitem` = %i WHERE `playerid` = %i AND `jobid` = %i", PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]], PlayerInfo[playerid][JobLevelsP][PlayerInfo[playerid][Job]], PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]], PlayerInfo[playerid][DBID], PlayerInfo[playerid][Job]);
											mysql_query(MySQL, largequery);
											mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = %i WHERE `id` = %i", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
											mysql_query(MySQL, largequery);
										}
									}
									SetPlayerWantedLevel(targetid, PlayerInfo[targetid][Warrants]);
									mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `warrants` = %i WHERE `id` = %i", PlayerInfo[targetid][Warrants], PlayerInfo[targetid][DBID]);
									mysql_query(MySQL, largequery);
									format(message, sizeof(message), "{C2A2DA}* %s hands %s some official paperwork, having him sign it *", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)));
									ActionMessager(playerid, 25, message);
								} else {
									format(message, sizeof(message), "* You can't defend anyone for another %i seconds *", PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]]);
									ClientMessenger(playerid, "00FFFF", 2, message);
								}
								largequery[0] = '\0';
								message[0] = '\0';
							} else {
								ClientMessenger(playerid, "FFFFFF", 3, "* You can not defend yourself. You need to find someone who will defend you *");
							}
						} else {
							ClientMessenger(playerid, "FFFFFF", 3, "* This person does not have any warrants on him *");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 5, "/defend <playername/playerid>");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 2, "* You do not have the lawyer job! *");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:families(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(TotalFactions > 0){
			new count = 0;
			for (new a = 0; a < TotalFactions; a++) {
				if(FactionInfo[a+1][FactionPermissions][11] == 1){
					 count = (count+1);
				}
			}
			format(message, sizeof(message), "There are currently %i families!\n", count);
			strcat(ReadAllMessages[playerid], message);
			for (new a = 0; a < TotalFactions; a++) {
				if(FactionInfo[a+1][FactionPermissions][11] == 1){
					new factionlname[41], factionsname[11], factioncolor[7];
					format(factionlname, sizeof(factionlname), "%s", FactionInfo[a+1][FactionLongName]);
					format(factionsname, sizeof(factionsname), "%s", FactionInfo[a+1][FactionShortName]);
					format(factioncolor, sizeof(factioncolor), "%s", FactionInfo[a+1][FactionColor]);
					new playercount = 0;
					for (new b = 0; b < MAX_PLAYERS; b++) {
						if(PlayerInfo[b][Online] == 1) {
							if(PlayerInfo[b][Faction] == (a+1)) {
								playercount = (playercount + 1);
							}
						}
					}
					format(message, sizeof(message), "{FFFFFF}%i. {%s}%s{FFFFFF} [{%s}%s{FFFFFF}] (%i)\n",a+1, factioncolor, factionlname, factioncolor, factionsname, playercount);
					strcat(ReadAllMessages[playerid], message);
				}
			}
			ShowPlayerDialog(playerid, 100, DIALOG_STYLE_MSGBOX, "All Families", ReadAllMessages[playerid], "Close", "");
		} else {
			ClientMessenger(playerid, "FF0000", 1, "There are no families!");
		}
		message[0] = '\0';
		ReadAllMessages[playerid][0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:factions(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(TotalFactions > 0){
			new count = 0;
			for (new a = 0; a < TotalFactions; a++) {
				if(FactionInfo[a+1][FactionPermissions][11] == 1){
					 count = (count+1);
				}
			}
			format(message, sizeof(message), "There are currently %i factions!\n", count);
			strcat(ReadAllMessages[playerid], message);
			for (new a = 0; a < TotalFactions; a++) {
				if(FactionInfo[a+1][FactionPermissions][11] == 0){
					if(FactionInfo[a+1][FactionPermissions][3] == 0) {
						new factionlname[41], factionsname[11], factioncolor[7];
						format(factionlname, sizeof(factionlname), "%s", FactionInfo[a+1][FactionLongName]);
						format(factionsname, sizeof(factionsname), "%s", FactionInfo[a+1][FactionShortName]);
						format(factioncolor, sizeof(factioncolor), "%s", FactionInfo[a+1][FactionColor]);
						new playercount = 0;
						for (new b = 0; b < MAX_PLAYERS; b++) {
							if(PlayerInfo[b][Online] == 1) {
								if(PlayerInfo[b][Faction] == (a+1) || PlayerInfo[b][FakeFaction] == (a+1)) {
									playercount = (playercount + 1);
								}
							}
						}
						format(message, sizeof(message), "{FFFFFF}%i. {%s}%s{FFFFFF} [{%s}%s{FFFFFF}] (%i)\n",a+1, factioncolor, factionlname, factioncolor, factionsname, playercount);
						strcat(ReadAllMessages[playerid], message);
					}
				}
			}
			ShowPlayerDialog(playerid, 100, DIALOG_STYLE_MSGBOX, "All Factions", ReadAllMessages[playerid], "Close", "");
		} else {
			ClientMessenger(playerid, "FF0000", 1, "There are no factions!");
		}
		message[0] = '\0';
		ReadAllMessages[playerid][0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:listfactions(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 2) {
				if(TotalFactions > 0){
					new count = 0;
					for (new a = 0; a < TotalFactions; a++) {
						if(FactionInfo[a+1][FactionPermissions][11] == 1){
							 count = (count+1);
						}
					}
					format(message, sizeof(message), "There are currently %i factions!\n", count);
					strcat(ReadAllMessages[playerid], message);
					for (new a = 0; a < TotalFactions; a++) {
						if(FactionInfo[a+1][FactionPermissions][11] == 0){
							new factionlname[41], factionsname[11], factioncolor[7];
							format(factionlname, sizeof(factionlname), "%s", FactionInfo[a+1][FactionLongName]);
							format(factionsname, sizeof(factionsname), "%s", FactionInfo[a+1][FactionShortName]);
							format(factioncolor, sizeof(factioncolor), "%s", FactionInfo[a+1][FactionColor]);
							new playercount = 0;
							for (new b = 0; b < MAX_PLAYERS; b++) {
								if(PlayerInfo[b][Online] == 1) {
									if(PlayerInfo[b][Faction] == (a+1) || PlayerInfo[b][FakeFaction] == (a+1)) {
										playercount = (playercount + 1);
									}
								}
							}
							format(message, sizeof(message), "{FFFFFF}%i. {%s}%s{FFFFFF} [{%s}%s{FFFFFF}] (%i)\n",a+1, factioncolor, factionlname, factioncolor, factionsname, playercount);
							strcat(ReadAllMessages[playerid], message);
						}
					}
					ShowPlayerDialog(playerid, 100, DIALOG_STYLE_MSGBOX, "All Factions [Admin]", ReadAllMessages[playerid], "Close", "");
				} else {
					ClientMessenger(playerid, "FF0000", 1, "There are no factions!");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(2), GetAdminRanks(2));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
		ReadAllMessages[playerid][0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:killcp(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		
		ClientMessenger(playerid, "FF0000", 2, "You have destroyed all checkpoints!");
		
		// If tracking car
		if(PlayerInfo[playerid][TempInfo][14] != 0) {
			PlayerInfo[playerid][TempInfo][14] = 0;
		}
		
		// If taking DMV Test
		if(PlayerInfo[playerid][TempInfo][8] != 0) {
			GameTextForPlayer(playerid, "Test Failed!", 1500, 1);
			PlayerTextDrawDestroy(playerid, PlayerInfo[playerid][GameText]);
			KillTimer(PlayerInfo[playerid][TempInfo][3]);
			PlayerInfo[playerid][GameText] = CreatePlayerTextDraw(playerid, 160, 380, "~r~You canceled the test by destroying the CP!");
			PlayerTextDrawShow(playerid, PlayerInfo[playerid][GameText]);
			PlayerInfo[playerid][TempInfo][3] = SetTimerEx("RemovePlayerText", 3000, false, "i", playerid);
			PlayerInfo[playerid][AllEditingOptions] = 0;
			PlayerInfo[playerid][AllEditingOptions2] = 0;
			DestroyVehicle(PlayerInfo[playerid][AllEditingOptions3][0]);
			LastVehicleID[PlayerInfo[playerid][AllEditingOptions3][0]] = 0;
			PlayerInfo[playerid][AllEditingOptions3][0] = 0;
			PlayerInfo[playerid][TempInfo][8] = 0;
		}
		
		DestroyDynamicCP(PlayerInfo[playerid][CPLoc]);
		PlayerInfo[playerid][CPLoc] = 0;
		message[0] = '\0';
	}
	return 1;
}

COMMAND:bk(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) {
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][10] == 1) {
				if(AllFactionRanksPermissions[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]][10] == 1) {
					if(PlayerInfo[playerid][TempInfo][21] == 0) {
						PlayerInfo[playerid][TempInfo][21] = 1;
						ClientMessenger(playerid, "FFFF00", 3, "* You have requested backup from your department! *");
						new message[144];
						foreach(Player, i)
						{
							if (PlayerInfo[i][Online] == 1) {
								if (PlayerInfo[i][Faction] == PlayerInfo[playerid][Faction]) {
									SetPlayerMarkerForPlayer( i, playerid, 0xFF0000FF );
									if (playerid != i){
									
										new uppername[30], newname[30], upperrank[51], newrank[51];
										newname = GetPlayerNameEx(playerid);
										for(new bb = 0; bb < sizeof(newname); bb++)
										{
											uppername[bb] = toupper(newname[bb]);
										}
										newrank = AllFactionRanks[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]];
										for(new cc = 0; cc < sizeof(newrank); cc++)
										{
											upperrank[cc] = toupper(newrank[cc]);
										}
										
										format(message, sizeof(message), "* [%s] %s; %s HAS REQUESTED BACKUP! REFER TO YOUR GPS! *", FactionInfo[PlayerInfo[playerid][Faction]][FactionShortName], upperrank, str_replace("_", " ", uppername));
										ClientMessenger(i, "8D8DFF", 3, message);
										
										uppername[0] = '\0';
										upperrank[0] = '\0';
										newname[0] = '\0';
										newrank[0] = '\0';
									}
								}
							}
						}
						message[0] = '\0';
					} else {
						ClientMessenger(playerid, "FFFF00", 3, "* You already have an active backup beacon! Type /bkc to clear up any active beacons! *");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can't do this at your rank!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:bkd(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { // Player Online
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) { // Player in faction
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][10] == 1) { // Does faction have /bk permissions
				if(AllFactionRanksPermissions[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]][10] == 1) { // Does faction rank have /bk permissions
					new factionsname[11], message[144];
					if (!sscanf(params, "s[10]", factionsname)) { // Insert faction name
						for (new b = 1; b <= TotalFactions; b++) {
							if(!strcmp(factionsname, FactionInfo[b][FactionShortName], true)) { // Was the faction name said
								if(FactionInfo[b][FactionPermissions][0] == FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][0]) { // Was the faction in same queue
									if(PlayerInfo[playerid][TempInfo][20] == 0) {
										PlayerInfo[playerid][TempInfo][20] = 1;
										format(message, sizeof(message), "* You have requested backup from %s! *", FactionInfo[b][FactionLongName]);
										ClientMessenger(playerid, "FFFF00", 3, message);
										foreach(Player, i)
										{
											if (PlayerInfo[i][Online] == 1) {
												SetPlayerMarkerForPlayer( i, playerid, 0xFF0000FF );
												if (playerid != i){
												
													new uppername[30], newname[30], upperrank[51], newrank[51];
													newname = GetPlayerNameEx(playerid);
													for(new bb = 0; bb < sizeof(newname); bb++)
													{
														uppername[bb] = toupper(newname[bb]);
													}
													newrank = AllFactionRanks[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]];
													for(new cc = 0; cc < sizeof(newrank); cc++)
													{
														upperrank[cc] = toupper(newrank[cc]);
													}
													
													format(message, sizeof(message), "* [%s] %s; %s HAS REQUESTED BACKUP! REFER TO YOUR GPS! *", FactionInfo[b][FactionShortName], upperrank, str_replace("_", " ", uppername));
													ClientMessenger(i, "8D8DFF", 3, message);
													
													uppername[0] = '\0';
													upperrank[0] = '\0';
													newname[0] = '\0';
													newrank[0] = '\0';
												}
											}
										}
										message[0] = '\0';
										break;
									} else {
										ClientMessenger(playerid, "FFFF00", 3, "* You already have an active backup beacon! Type /bkc to clear up any active beacons! *");
									}
								}
							}
						}
					} else {
						format(message, sizeof(message), "/bkd <");
						strcat(ReadAllMessages[playerid], message);
						for (new b = 1; b <= TotalFactions; b++) {
							if(FactionInfo[b][FactionPermissions][0] == FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][0]) {
								format(message, sizeof(message), "%s/", FactionInfo[b][FactionShortName]);
								strcat(ReadAllMessages[playerid], message);
							}
						}
						format(message, sizeof(message), ">");
						strcat(ReadAllMessages[playerid], message);
						ClientMessenger(playerid, "FFFFFF", 5, ReadAllMessages[playerid]);
						ReadAllMessages[playerid][0] = '\0';
					}
					factionsname[0] = '\0';
					message[0] = '\0';
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can't do this at your rank!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:bkc(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) {
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][10] == 1) {
				if(AllFactionRanksPermissions[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]][10] == 1) {
					if(PlayerInfo[playerid][TempInfo][21] == 1 || PlayerInfo[playerid][TempInfo][20] == 1) {
						ClientMessenger(playerid, "FFFF00", 3, "* You have canceled your active backup beacon! *");
						SetPlayerFactionColor(playerid);
						new message[144];
						foreach(Player, i)
						{
							if (PlayerInfo[i][Online] == 1) {
								if (PlayerInfo[i][Faction] == PlayerInfo[playerid][Faction]) {
									if (playerid != i){
									
										new uppername[30], newname[30], upperrank[51], newrank[51];
										newname = GetPlayerNameEx(playerid);
										for(new bb = 0; bb < sizeof(newname); bb++)
										{
											uppername[bb] = toupper(newname[bb]);
										}
										newrank = AllFactionRanks[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]];
										for(new cc = 0; cc < sizeof(newrank); cc++)
										{
											upperrank[cc] = toupper(newrank[cc]);
										}
										
										if(PlayerInfo[playerid][TempInfo][21] == 1) {
											if (PlayerInfo[playerid][Gender] == 1) {
												format(message, sizeof(message), "* [%s] %s; %s HAS CANCELED HIS BACKUP REQUEST! *", FactionInfo[PlayerInfo[playerid][Faction]][FactionShortName], upperrank, str_replace("_", " ", uppername));
											} else {
												format(message, sizeof(message), "* [%s] %s; %s HAS CANCELED HER BACKUP REQUEST! *", FactionInfo[PlayerInfo[playerid][Faction]][FactionShortName], upperrank, str_replace("_", " ", uppername));
											}
											ClientMessenger(i, "8D8DFF", 3, message);
										}
										if(PlayerInfo[playerid][TempInfo][20] == 1) {
											if (PlayerInfo[playerid][Gender] == 1) {
												format(message, sizeof(message), "* [%s] %s; %s HAS CANCELED HIS BACKUP REQUEST! *", FactionInfo[PlayerInfo[playerid][Faction]][FactionShortName], upperrank, str_replace("_", " ", uppername));
											} else {
												format(message, sizeof(message), "* [%s] %s; %s HAS CANCELED HER BACKUP REQUEST! *", FactionInfo[PlayerInfo[playerid][Faction]][FactionShortName], upperrank, str_replace("_", " ", uppername));
											}
											ClientMessenger(i, "8D8DFF", 3, message);
										}
										uppername[0] = '\0';
										upperrank[0] = '\0';
										newname[0] = '\0';
										newrank[0] = '\0';
									}
								}
							}
						}
						PlayerInfo[playerid][TempInfo][20] = 0;
						PlayerInfo[playerid][TempInfo][21] = 0;
						message[0] = '\0';
					} else {
						ClientMessenger(playerid, "FFFF00", 3, "* You currently do not have an active backup beacon. Type /bk to make a beacon! *");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can't do this at your rank!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

public OnPlayerEnterCheckpoint(playerid) //Test
{
	if(PlayerInfo[playerid][Online]==1){
		new message[144], largequery[144];
		if(PlayerInfo[playerid][TempInfo][22] == 1 && PlayerInfo[playerid][Job] == 3){
			for(new a = 1; a < sizeof(JobInfo); a++) {
				if(JobInfo[a][JobType] == 3){ // Pizza Job
					if(IsPlayerInDynamicCP(playerid, PlayerInfo[playerid][CPLoc])){
						DestroyDynamicCP(PlayerInfo[playerid][CPLoc]);
						if(PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]] != 0){
							format(message, sizeof(message), "{C2A2DA}* %s has dropped the pizzas off at the house *", str_replace("_", " ", GetPlayerNameEx(playerid)));
							ActionMessager(playerid, 25, message);
							format(message, sizeof(message), "** You have delivered your pizzas, you've been given $%i dollars. **", (PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]]*GameSettings[6][GameSetting]));
							ClientMessenger(playerid, "FFFF00", 3, message);
							ClientMessenger(playerid, "FF0000", 3, "* Type /deliverpizzas to find another pizza place! *");
							PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] + (PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]]*GameSettings[6][GameSetting]));
							PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]] = 0;
							PlayerPlaySound(playerid, 3200, 0, 0, 0);
							ResetPlayerMoney(playerid);
							GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
							PlayerInfo[playerid][JobLevelsP][PlayerInfo[playerid][Job]] = (PlayerInfo[playerid][JobLevelsP][PlayerInfo[playerid][Job]]+1);
							
							// If job points are lower then job points * 50
							if(PlayerInfo[playerid][JobLevelsP][PlayerInfo[playerid][Job]] < (PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]]*50)){
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = %i WHERE `id` = %i", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
								mysql_query(MySQL, largequery);
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_jobs` SET `jobpoints` = %i, `jobitem` = 0 WHERE `playerid` = %i AND `jobid` = %i", PlayerInfo[playerid][JobLevelsP][PlayerInfo[playerid][Job]], PlayerInfo[playerid][DBID], PlayerInfo[playerid][Job]);
								mysql_query(MySQL, largequery);
							} else {
								PlayerInfo[playerid][JobLevelsP][PlayerInfo[playerid][Job]] = 0;
								PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]] = (PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]]+1);
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = %i WHERE `id` = %i", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
								mysql_query(MySQL, largequery);
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_jobs` SET `joblevel` = %i, `jobpoints` = 0, `jobitem` = 0 WHERE `playerid` = %i AND `jobid` = %i", PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]], PlayerInfo[playerid][DBID], PlayerInfo[playerid][Job]);
								mysql_query(MySQL, largequery);
								format(message, sizeof(message), "* Congratulations, you've become a level %i in %s job *", PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]], JobNames(PlayerInfo[playerid][Job]));
								ClientMessenger(playerid, "00FFFF", 3, message);
							}
							
							PlayAudioStreamForPlayer(playerid, "https://raw.githubusercontent.com/chaos12135/sarp_forum/master/_files/complete.mp3");
							mysql_query(MySQL, largequery);
						} else if(PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]] == 0){
							if((PlayerInfo[playerid][Money] - (PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]]*GameSettings[5][GameSetting])) >= 0){
								PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]] = (PlayerInfo[playerid][JobLevels][PlayerInfo[playerid][Job]]);
								PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - (PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]]*GameSettings[5][GameSetting]));
								ResetPlayerMoney(playerid);
								GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
								format(message, sizeof(message), "{C2A2DA}* %s goes inside the pizza place, and grabs the pizzas *", str_replace("_", " ", GetPlayerNameEx(playerid)));
								ActionMessager(playerid, 25, message);
								format(message, sizeof(message), "** You've been given %i pizzas to deliver, which have costed you $%i dollars. **", PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]], (PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]]*GameSettings[5][GameSetting]));
								ClientMessenger(playerid, "FFFF00", 3, message);
								ClientMessenger(playerid, "FFFF00", 3, "* Type /deliverpizzas again to find a place to deliver these pizzas! *");
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = %i WHERE `id` = %i", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
								mysql_query(MySQL, largequery);
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_jobs` SET `jobitem` = 0 WHERE `playerid` = %i AND `jobid` = %i", PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]], PlayerInfo[playerid][DBID], PlayerInfo[playerid][Job]);
								mysql_query(MySQL, largequery);
							} else {
								format(message, sizeof(message), "* You do not have enough money to buy pizzas. You need %i on hand! *", GameSettings[5][GameSetting]);
								ClientMessenger(playerid, "FF0000", 2, message);
							}
						}
						PlayerInfo[playerid][CPLoc] = 0;
						PlayerInfo[playerid][TempInfo][22] = 0;
					}
				} else if(JobInfo[a][JobType] == 1){ // Mechanic Job
				
				}
			}
		}

		// A vehicle tracker system
		if(PlayerInfo[playerid][TempInfo][14] != 0){
			PlayerInfo[playerid][TempInfo][14] = 0;
			DestroyDynamicCP(PlayerInfo[playerid][CPLoc]);
			PlayerInfo[playerid][CPLoc] = 0;
		}
		
		// DMV TEST
		if(PlayerInfo[playerid][TempInfo][8] != 0){
			if(IsPlayerInDynamicCP(playerid, PlayerInfo[playerid][CPLoc])){
				DestroyDynamicCP(PlayerInfo[playerid][CPLoc]);
				PlayerInfo[playerid][AllEditingOptions] = (PlayerInfo[playerid][AllEditingOptions] + 1);
				mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `dmv_test` WHERE `dmv_id` = %i AND `part` = %i LIMIT 1", PlayerInfo[playerid][AllEditingOptions2], PlayerInfo[playerid][AllEditingOptions]);
				mysql_query(MySQL, largequery);
				if(cache_num_rows() == 1){
					PlayerInfo[playerid][CPLoc] = CreateDynamicCP(cache_get_field_content_float(0, "x"), cache_get_field_content_float(0, "y"), cache_get_field_content_float(0, "z"), 8, -1, -1, playerid, 999999);
				} else {
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `vehicle_licence`=1 WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][DBID]);
					PlayerInfo[playerid][Licenses][1] = 1;
					mysql_query(MySQL, largequery);
					GameTextForPlayer(playerid, "Test Passed!", 1500, 1);
					PlayerTextDrawDestroy(playerid, PlayerInfo[playerid][GameText]);
					KillTimer(PlayerInfo[playerid][TempInfo][3]);
					PlayerInfo[playerid][GameText] = CreatePlayerTextDraw(playerid, 160, 380, "~g~You now have your license! /licenses");
					PlayerTextDrawShow(playerid, PlayerInfo[playerid][GameText]);
					PlayerInfo[playerid][TempInfo][3] = SetTimerEx("RemovePlayerText", 3000, false, "playerid", playerid);
					PlayerInfo[playerid][TempInfo][8] = 0;
					PlayerInfo[playerid][AllEditingOptions] = 0;
					PlayerInfo[playerid][AllEditingOptions2] = 0;
					DestroyVehicle(PlayerInfo[playerid][AllEditingOptions3][0]);
					LastVehicleID[PlayerInfo[playerid][AllEditingOptions3][0]] = 0;
					PlayerInfo[playerid][AllEditingOptions3][0] = 0;
					PlayAudioStreamForPlayer(playerid, "https://raw.githubusercontent.com/chaos12135/sarp_forum/master/_files/complete.mp3");
				}
			}
		}
		message[0] = '\0';
		largequery[0] = '\0';
	}
		
	return 1;
}

COMMAND:deliverpizzas(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Job] == 3){
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 448) {
				newpizzarandomjob:
				new houseid = 0;
				for(new a = 1; a < sizeof(HouseInfo); a++) {
					if(LastHouseID[a] == 1){
						houseid = (houseid+1);
					}
				}
				// ignore this comment
				houseid = random(houseid);
				if(LastHouseID[houseid] == 1){
					if(PlayerInfo[playerid][JobItems][PlayerInfo[playerid][Job]] != 0){
						if(PlayerInfo[playerid][TempInfo][22] == 0){
							PlayerInfo[playerid][CPLoc] = CreateDynamicCP(HouseInfo[houseid][HouseX], HouseInfo[houseid][HouseY], HouseInfo[houseid][HouseZ], 3, -1, -1, playerid, 999999);
							PlayerInfo[playerid][TempInfo][22] = 1;
							//PlayerInfo[playerid][TempInfo][22] = SetTimerEx("DeliverPizzasC", 1000, true, "i", playerid);
							SendClientMessage(playerid, -1, "{FFFF00}** The location to which you need to drop the pizzas off at has been marked on your map **");
						} else {
							DestroyDynamicCP(PlayerInfo[playerid][CPLoc]);
							PlayerInfo[playerid][CPLoc] = 0;
							PlayerInfo[playerid][TempInfo][22] = 0;
							ClientMessenger(playerid, "FF0000", 2, "* You have canceled your previous job request! *");
						}
					} else {
						if(PlayerInfo[playerid][TempInfo][22] == 0){
							for(new d = 1; d < sizeof(JobInfo); d++) {
								if(JobInfo[d][JobType] == 3){
									PlayerInfo[playerid][CPLoc] = CreateDynamicCP(JobInfo[d][JobX], JobInfo[d][JobY], JobInfo[d][JobZ], 3, -1, -1, playerid, 999999);
									//PlayerInfo[playerid][TempInfo][22] = SetTimerEx("DeliverPizzasC", 1000, true, "i", playerid);
									PlayerInfo[playerid][TempInfo][22] = 1;
								//  SetPlayerMapIcon(playerid, d, JobInfo[d][JobX], JobInfo[d][JobY], JobInfo[d][JobZ], 29, 0, MAPICON_LOCAL_CHECKPOINT);
								}
							}
							ClientMessenger(playerid, "FFFF00", 3, "* The closet pizza job has been located near you! *");
						} else {
							DestroyDynamicCP(PlayerInfo[playerid][CPLoc]);
							PlayerInfo[playerid][CPLoc] = 0;
							PlayerInfo[playerid][TempInfo][22] = 0;
							ClientMessenger(playerid, "FF0000", 2, "* You have canceled your previous job request! *");
						}
					}
				} else {
					goto newpizzarandomjob;
				}
			} else {
				ClientMessenger(playerid, "FF0000", 2, "* You are not on the Pizza bike! *");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 2, "* You do not have the pizza job! *");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:buylevel(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][RespectPoints] >= ((PlayerInfo[playerid][Level]*4)+4)) {
			new message[144];
			if((PlayerInfo[playerid][Money] - ((PlayerInfo[playerid][Level]*25000))) >= 0) {
				new largequery[256];
				PlayerInfo[playerid][Money] = PlayerInfo[playerid][Money] - ((PlayerInfo[playerid][Level]*25000));
				ResetPlayerMoney(playerid);
				GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
				PlayerInfo[playerid][Level] = (PlayerInfo[playerid][Level]+1);
				SetPlayerScore(playerid, PlayerInfo[playerid][Level]);
				PlayerInfo[playerid][RespectPoints] = (PlayerInfo[playerid][RespectPoints]-(PlayerInfo[playerid][Level]*4));
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `level` = %i, `respectpoints` = %i, `money` = %i WHERE `id` = %i", PlayerInfo[playerid][Level], PlayerInfo[playerid][RespectPoints], PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
				mysql_query(MySQL, largequery);
				format(message, sizeof(message), "* You have leveled up to: %i *", PlayerInfo[playerid][Level]);
				ClientMessenger(playerid, "FFFF00", 3,message);
				PlayAudioStreamForPlayer(playerid, "https://raw.githubusercontent.com/chaos12135/sarp_forum/master/_files/complete.mp3");
				largequery[0] = '\0';
				message[0] = '\0';
			} else {
				format(message, sizeof(message), "* You need %i to be able to buy level! *", (PlayerInfo[playerid][Level]*25000));
				ClientMessenger(playerid, "FF0000", 2, message);
			}
			message[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 2, "* You do not have enough respect points to level up! *");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:signcheck(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][TempInfo][18] != 0){
			if(PlayerInfo[playerid][Minutes][2] >= 20){
				new signcheckpar;
				if (!sscanf(params, "i", signcheckpar)) {
					if(PlayerInfo[playerid][TempInfo][18] == signcheckpar){
						new message[144], largequery[144];
						PlayerInfo[playerid][RespectPoints] = (PlayerInfo[playerid][RespectPoints] + 1);
						SendClientMessage(playerid, -1, "{FFFF00}* You have signed your check! *");
						SendClientMessage(playerid, -1, "- - - - - - - - - - - - - - - -");
						format(message, sizeof(message), "- Level: %i -", PlayerInfo[playerid][Level]);
						SendClientMessage(playerid, -1, message);
						format(message, sizeof(message), "- Respect Points: %i/%i -", PlayerInfo[playerid][RespectPoints], ((PlayerInfo[playerid][Level]*4)+4));
						SendClientMessage(playerid, -1, message);
						SendClientMessage(playerid, -1, "- - - - - - - - - - - - - - - -");
						PlayerInfo[playerid][TempInfo][18] = 0;
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `respectpoints` = %i, `tminutes` = 0 WHERE `id` = %i", PlayerInfo[playerid][RespectPoints], PlayerInfo[playerid][DBID]);
						mysql_query(MySQL, largequery);
						PlayerInfo[playerid][Minutes][2] = 0;
						message[0] = '\0';
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 2, "* Invalid check number! *");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 2, "* You didn't enter a checknumber to sign! *");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 2, "* You haven't played long enough to signcheck! *");
				PlayerInfo[playerid][TempInfo][18] = 0;
			}
		} else {
			ClientMessenger(playerid, "FF0000", 2, "* You don't have a check to sign! *");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:buyhouse(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new onemessage = 0, onemessage2 = 0;
		for(new a = 0; a < sizeof(HouseInfo); a++) {
			if(IsPlayerInRangeOfPoint(playerid,1.0,HouseInfo[a][HouseX],HouseInfo[a][HouseY],HouseInfo[a][HouseZ])) {
				onemessage = 1;
				if(PlayerInfo[playerid][House] == 0) {
					if(HouseInfo[a][HouseOwner] == 0) {
						new message[144], buyhouseid, houseconfirm[8], largequery[144];
						if (!sscanf(params, "is[8]", buyhouseid, houseconfirm)) {
							if(buyhouseid == a) {
								if(!strcmp(houseconfirm, "confirm")) {
									if(0 <= (PlayerInfo[playerid][Money] - HouseInfo[a][HousePrice])){
										onemessage2 = 1;
										DestroyDynamic3DTextLabel(HouseInfo[a][HouseText]);
										DestroyDynamicPickup(HouseInfo[a][HouseIcon]);
										HouseInfo[a][HouseOwner] = PlayerInfo[playerid][DBID];
										
										TaxMoney = (TaxMoney + TaxMoneyCountBiz(HouseInfo[a][HousePrice]));
										PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - HouseInfo[a][HousePrice]);
										
										ResetPlayerMoney(playerid);
										GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = %i, `house` = %i WHERE `id` = %i", PlayerInfo[playerid][Money], a, PlayerInfo[playerid][DBID]);
										mysql_query(MySQL, largequery);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `houses` SET `ownerid` = %i, `tag` = '/sethousetag' WHERE `id` = '%i'", PlayerInfo[playerid][DBID], a);
										mysql_query(MySQL, largequery);
										PlayerInfo[playerid][House] = a;
										
										HouseInfo[a][HouseIcon] = CreateDynamicPickup(1272, 23, HouseInfo[a][HouseX], HouseInfo[a][HouseY], HouseInfo[a][HouseZ], HouseInfo[a][HouseStartWorld], HouseInfo[a][HouseStartInt], -1);
										SetTimerEx("findplayerhouse", 1500, false, "i", playerid);
										format(HouseInfo[a][HouseTempText], 128, "{FFFF00}%s's House{FFFFFF} (ID: %i)\n/sethousetag", str_replace("_", " ", GetPlayerNameEx(playerid)), a);
										HouseInfo[a][HouseText] = CreateDynamic3DTextLabel(HouseInfo[a][HouseTempText], -1, HouseInfo[a][HouseX], HouseInfo[a][HouseY], HouseInfo[a][HouseZ], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, HouseInfo[a][HouseStartWorld], HouseInfo[a][HouseStartInt], -1);
										format(message, sizeof(message), "* You just bought a house for ${FF0000}%i{FFFFFF}! *", HouseInfo[a][HousePrice]);
										ClientMessenger(playerid, "FFFF00", 3, message);
										PlayAudioStreamForPlayer(playerid, "https://raw.githubusercontent.com/chaos12135/sarp_forum/master/_files/complete.mp3");
									} else {
										ClientMessenger(playerid, "FF0000", 2, "* You do not have enough money to buy this house! *");
										onemessage2 = 1;
									}
								} else {
									ClientMessenger(playerid, "FF0000", 1, "You did not type confirm correctly!");
									onemessage2 = 1;
								}
							} else {
								ClientMessenger(playerid, "FF0000", 1, "You did not select the correct house ID!");
								onemessage2 = 1;
							}
						}
						if(onemessage2 == 0) {
							format(message, sizeof(message), "* Are sure you want to buy this house for ${FF0000}%i{FFFFFF}, type /buyhouse %i confirm *", HouseInfo[a][HousePrice], a);
							ClientMessenger(playerid, "FF0000", 3, message);
						}
						houseconfirm[0] = '\0';
						message[0] = '\0';
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "This house is not for sale!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You already own a house. You can not own two!");
				}
			}
		}
		if(onemessage == 0) {
			ClientMessenger(playerid, "FF0000", 5, "/buyhouse <houseid>");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:moveint(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new interiorid;
				if (!sscanf(params, "i", interiorid)) {
					if(LastInteriorID[interiorid] != 0) {
						new largequery[256];
						format(message, sizeof(message), "%s has moved interior(%i) to his location ", str_replace("_", " ", GetPlayerNameEx(playerid)), interiorid);
						ClientMessenger(playerid, "FF0000", 1, message);
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
						PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
						InteriorInfo[interiorid][IntX] = PlayerInfo[playerid][PosX];
						InteriorInfo[interiorid][IntY] = PlayerInfo[playerid][PosY];
						InteriorInfo[interiorid][IntZ] = PlayerInfo[playerid][PosZ];
						InteriorInfo[interiorid][IntStartInt] = PlayerInfo[playerid][InteriorID];
						InteriorInfo[interiorid][IntStartWorld] = PlayerInfo[playerid][WorldID];
						
						if(InteriorInfo[interiorid][IntMapIconID] != 0){
							DestroyDynamicMapIcon(InteriorInfo[interiorid][IntMapIcon]);
						}
						
						if(InteriorInfo[interiorid][IntMapIconID] != 0){
							InteriorInfo[interiorid][IntMapIcon] = CreateDynamicMapIcon(InteriorInfo[interiorid][IntX], InteriorInfo[interiorid][IntY], InteriorInfo[interiorid][IntZ], InteriorInfo[interiorid][IntMapIconID], -1, InteriorInfo[interiorid][IntStartWorld], InteriorInfo[interiorid][IntStartInt], -1, 500, MAPICON_GLOBAL);
						}
						
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `interiors` SET `x`='%f', `y`='%f', `z`='%f', `startworld`=%i, `startint`=%i WHERE `id` = %i", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], interiorid);
						mysql_query(MySQL, largequery);
						DestroyDynamicPickup(InteriorInfo[interiorid][IntIcon]);
						DestroyDynamic3DTextLabel(InteriorInfo[interiorid][IntText]);
						InteriorInfo[interiorid][IntIcon] = CreateDynamicPickup(1239, 23, InteriorInfo[interiorid][IntX], InteriorInfo[interiorid][IntY], InteriorInfo[interiorid][IntZ], InteriorInfo[interiorid][IntStartWorld], InteriorInfo[interiorid][IntStartInt], -1);
						format(InteriorInfo[interiorid][IntTempText], 300, "%s (%i){FFFFFF}\n(/enter)", InteriorInfo[interiorid][IntName], interiorid);
						InteriorInfo[interiorid][IntText] = CreateDynamic3DTextLabel(InteriorInfo[interiorid][IntTempText], -1, InteriorInfo[interiorid][IntX], InteriorInfo[interiorid][IntY], InteriorInfo[interiorid][IntZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, InteriorInfo[interiorid][IntStartWorld], InteriorInfo[interiorid][IntStartInt], -1);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid interior id");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/moveint <interiorid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:moveintintpos(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new interiorid;
				if (!sscanf(params, "i", interiorid)) {
					if(LastInteriorID[interiorid] != 0) {
						new largequery[256];
						format(message, sizeof(message), "%s has moved interior int(%i) to their location ", str_replace("_", " ", GetPlayerNameEx(playerid)), interiorid);
						ClientMessenger(playerid, "FF0000", 1, message);
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
						PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
						InteriorInfo[interiorid][IntIntX] = PlayerInfo[playerid][PosX];
						InteriorInfo[interiorid][IntIntY] = PlayerInfo[playerid][PosY];
						InteriorInfo[interiorid][IntIntZ] = PlayerInfo[playerid][PosZ];
						InteriorInfo[interiorid][IntEndWorld] = PlayerInfo[playerid][WorldID];
						InteriorInfo[interiorid][IntEndInt] = PlayerInfo[playerid][InteriorID];
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `interiors` SET `intx`='%f', `inty`='%f', `intz`='%f', `endworld`=%i, `endint`=%i WHERE `id` = %i", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], interiorid);
						mysql_query(MySQL, largequery);
						DestroyDynamicPickup(InteriorInfo[interiorid][IntIntIcon]);
						DestroyDynamic3DTextLabel(InteriorInfo[interiorid][IntIntText]);
						InteriorInfo[interiorid][IntIntIcon] = CreateDynamicPickup(1239, 23, InteriorInfo[interiorid][IntIntX], InteriorInfo[interiorid][IntIntY], InteriorInfo[interiorid][IntIntZ], InteriorInfo[interiorid][IntEndWorld], InteriorInfo[interiorid][IntEndInt], -1);
						InteriorInfo[interiorid][IntIntText] = CreateDynamic3DTextLabel("/exit", -1, InteriorInfo[interiorid][IntIntX], InteriorInfo[interiorid][IntIntY], InteriorInfo[interiorid][IntIntZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, InteriorInfo[interiorid][IntEndWorld], InteriorInfo[interiorid][IntEndInt], -1);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid interior id");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/moveintintpos <interiorid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:movehouseintpos(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new houseid;
				if (!sscanf(params, "i", houseid)) {
					if(LastHouseID[houseid] != 0) {
						new largequery[256];
						format(message, sizeof(message), "%s has moved house int(%i) to their location ", str_replace("_", " ", GetPlayerNameEx(playerid)), houseid);
						ClientMessenger(playerid, "FF0000", 1, message);
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
						PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
						HouseInfo[houseid][HouseIntX] = PlayerInfo[playerid][PosX];
						HouseInfo[houseid][HouseIntY] = PlayerInfo[playerid][PosY];
						HouseInfo[houseid][HouseIntZ] = PlayerInfo[playerid][PosZ];
						HouseInfo[houseid][HouseEndWorld] = PlayerInfo[playerid][WorldID];
						HouseInfo[houseid][HouseEndInt] = PlayerInfo[playerid][InteriorID];
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `houses` SET `intx`='%f', `inty`='%f', `intz`='%f', `endworld`=%i, `endint`=%i WHERE `id` = %i", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], HouseInfo[houseid][HouseEndWorld], HouseInfo[houseid][HouseEndInt], houseid);
						mysql_query(MySQL, largequery);
						DestroyDynamicPickup(HouseInfo[houseid][HouseIntIcon]);
						DestroyDynamic3DTextLabel(HouseInfo[houseid][HouseIntText]);
						HouseInfo[houseid][HouseIntIcon] = CreateDynamicPickup(1239, 23, HouseInfo[houseid][HouseIntX], HouseInfo[houseid][HouseIntY], HouseInfo[houseid][HouseIntZ], HouseInfo[houseid][HouseEndWorld], HouseInfo[houseid][HouseEndInt], -1);
						HouseInfo[houseid][HouseIntText] = CreateDynamic3DTextLabel("/exit", -1, HouseInfo[houseid][HouseIntX], HouseInfo[houseid][HouseIntY], HouseInfo[houseid][HouseIntZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, HouseInfo[houseid][HouseEndWorld], HouseInfo[houseid][HouseEndInt], -1);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid house id");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/movehouseintpos <houseid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
	
COMMAND:setpos(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 2) { 
				new targetid, x, y, z;
				if (!sscanf(params, "uiii", targetid, x, y, z)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1){
							format(message, sizeof(message), "%s has set %s position to x:%i, y:%i, z:%i", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)), x, y, z);
							ClientMessenger(playerid, "FFFFFF", 4, message);
							SetPlayerPos(targetid, x, y, z);
							PlayerInfo[targetid][PosX] = x;
							PlayerInfo[targetid][PosY] = y;
							PlayerInfo[targetid][PosZ] = z;
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/setpos <playername/playerid> <x> <y> <z>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(2), GetAdminRanks(2));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}   

COMMAND:setvw(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 2) { 
				new targetid, worldid;
				if (!sscanf(params, "ui", targetid, worldid)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1){
							format(message, sizeof(message), "%s has set %s world to %i", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)), worldid);
							ClientMessenger(playerid, "FFFFFF", 4, message);
							SetPlayerVirtualWorld(targetid, worldid);
							PlayerInfo[targetid][WorldID] = worldid;
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/setvw <playername/playerid> <worldid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(2), GetAdminRanks(2));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
	
COMMAND:atm(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		for(new a = 1; a < sizeof(ATMs); a++){
			if(IsPlayerInRangeOfPoint(playerid, 3,ATMs[a][ATMX], ATMs[a][ATMY], ATMs[a][ATMZ]) && ATMs[a][ATMWorld] == GetPlayerVirtualWorld(playerid) && ATMs[a][ATMInt] == GetPlayerInterior(playerid)){
				if(LastATMsID[a] == 1){
					new message[256];
					format(message, sizeof(message), "{FFFFFF}The account number: {FF0000}%i{FFFFFF} belonging to: {00FFFF}%s{FFFFFF} has {008000}%i{FFFFFF} dollars!\nPlease select your options!", PlayerInfo[playerid][DBID], str_replace("_", " ", PlayerInfo[playerid][RealName]), PlayerInfo[playerid][BankMoney]);
					ShowPlayerDialog(playerid, 47, DIALOG_STYLE_MSGBOX, "Automatic Teller Machine", message, "Withdraw", "Exit");
					message[0]='\0';
				}
			}
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
	
COMMAND:deleteint(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1){
			if(PlayerInfo[playerid][Admin] >= 4 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new intid, intconfirm[8];
				if (!sscanf(params, "is[8]", intid, intconfirm)) {
					if(!strcmp(intconfirm, "confirm")){
						if(LastInteriorID[intid] != 0){
							new largequery[144];
							mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `interiors` WHERE `id`=%i", intid);
							mysql_query(MySQL, largequery);
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", InteriorInfo[intid][IntOwner]);
							mysql_query(MySQL, largequery);
							if(cache_num_rows() == 1){
								new getname[MAX_PLAYER_NAME+1];
								cache_get_field_content(0, "name", getname);
								format(message, sizeof(message), "%s has deleted interior %i owned by %s", str_replace("_", " ", GetPlayerNameEx(playerid)), intid, getname);
							} else {
								format(message, sizeof(message), "%s has deleted interior %i owned by no one", str_replace("_", " ", GetPlayerNameEx(playerid)), intid);
							}
							ClientMessenger(playerid, "FFFFFF", 4, message);
							
							LastInteriorID[intid] = 0;
							
							if(InteriorInfo[intid][IntMapIconID] != 0){
								DestroyDynamicMapIcon(InteriorInfo[intid][IntMapIcon]);
							}
							
							InteriorInfo[intid][IntX] = 0;
							InteriorInfo[intid][IntY] = 0;
							InteriorInfo[intid][IntZ] = 0;
							InteriorInfo[intid][IntIntX] = 0;
							InteriorInfo[intid][IntIntY] = 0;
							InteriorInfo[intid][IntIntZ] = 0;
							InteriorInfo[intid][IntMapIcon] = 0;
							InteriorInfo[intid][IntIntZ] = 0;
							InteriorInfo[intid][IntStartWorld] = -1;
							InteriorInfo[intid][IntStartInt] = -1;
							InteriorInfo[intid][IntEndWorld] = -1;
							InteriorInfo[intid][IntEndInt] = -1;
							DestroyDynamicPickup(InteriorInfo[intid][IntIntIcon]);
							DestroyDynamic3DTextLabel(InteriorInfo[intid][IntIntText]);
							DestroyDynamicPickup(InteriorInfo[intid][IntIcon]);
							DestroyDynamic3DTextLabel(InteriorInfo[intid][IntText]);
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FFFFFF", 1, "Not a valid interior!");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "You did not type confirm correctly!!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/deleteint <intid> confirm");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FFFFFF", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
	
COMMAND:deleteatm(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new atmid, atmconfirm[8];
				if (!sscanf(params, "is[8]", atmid, atmconfirm)) {
					if(!strcmp(atmconfirm, "confirm")){
						if(LastATMsID[atmid] != 0){
							new largequery[144];
							mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `atms` WHERE `id`=%i", atmid);
							mysql_query(MySQL, largequery);
							format(message, sizeof(message), "%s has deleted an atm(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), atmid);
							ClientMessenger(playerid, "FFFFFF", 4, message);
							
							LastATMsID[atmid] = 0;
							ATMs[atmid][ATMX] = 0;
							ATMs[atmid][ATMY] = 0;
							ATMs[atmid][ATMZ] = 0;
							ATMs[atmid][ATMA] = 0;
							ATMs[atmid][ATMWorld] = -1;
							ATMs[atmid][ATMInt] = -1;
							
							DestroyDynamicObject(ATMs[atmid][ATMIcon]);
							DestroyDynamic3DTextLabel(ATMs[atmid][ATMText]);
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FFFFFF", 1, "Not a valid atm!");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "You did not type confirm correctly!!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/deleteatm <atmid> confirm");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FFFFFF", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
	
	
COMMAND:dealership(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Licenses][1] == 1) {
			for(new a = 1; a < sizeof(Dealerships); a++){
				if(IsPlayerInRangeOfPoint(playerid, 3,Dealerships[a][DealerX], Dealerships[a][DealerY], Dealerships[a][DealerZ]) && Dealerships[a][DealerWorld] != -1){
					new message[256];
					format(message, sizeof(message), "{FFFFFF}Welcome to the {00FFFF}%s{FFFFFF} dealership!", Dealerships[a][DealerName]);
					ShowPlayerDialog(playerid, 49, DIALOG_STYLE_MSGBOX, Dealerships[a][DealerName], message, "Select Car", "Exit");
					PlayerInfo[playerid][AllEditingOptions] = a;
					message[0]='\0';
				}
			}
		} else {
			ClientMessenger(playerid, "FF0000", 2, "You do not have your drivers license, so you will be unable to buy a vehicle! until then");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:checkdealervehs(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6) {
				new dealerid;
				if (!sscanf(params, "i", dealerid)) {
					if(LastDealershipID[dealerid] != 0){
						new largequery[256];
						mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `dealership_vehicles` WHERE `dealershipid`=%i", dealerid);
						mysql_query(MySQL, largequery);
						if(cache_num_rows() >= 1) {
							for(new a = 0; a < cache_num_rows(); a++){
								format(message, sizeof(message), "%i] %s(%i) $%i\n", (a+1), GetVehicleInformation(cache_get_field_content_int(a, "vehicleid")), cache_get_field_content_int(a, "vehicleid"), cache_get_field_content_int(a, "price"));
								strcat(ReadAllMessages[playerid], message);
							}
							ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, Dealerships[dealerid][DealerName], ReadAllMessages[playerid], "Done", "");
							ReadAllMessages[playerid][0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "Dealership does not have this vehicle!");
						}
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Invalid dealership!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "/checkdealervehs <dealerid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:deletedealerveh(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6) {
				new dealerid, vehicleid;
				if (!sscanf(params, "ii", dealerid, vehicleid)) {
					if(vehicleid >= 400 && vehicleid <= 611 || vehicleid == 0) {
						if(LastDealershipID[dealerid] != 0){
							new largequery[256];
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT `id` FROM `dealership_vehicles` WHERE `vehicleid`=%i AND `dealershipid`=%i LIMIT 1", vehicleid, dealerid);
							mysql_query(MySQL, largequery);
							if(cache_num_rows() == 1) {
								format(message, sizeof(message), "%s has removed vehicle %s(%i) from %s(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), GetVehicleInformation(vehicleid), vehicleid, Dealerships[dealerid][DealerName], dealerid);
								ClientMessenger(playerid, "FF0000", 4, message);
								mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `dealership_vehicles` WHERE `id`=%i", cache_get_field_content_int(0, "id"));
								mysql_query(MySQL, largequery);
							} else {
								ClientMessenger(playerid, "FF0000", 1, "Dealership does not have this vehicle!");
							}
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "Invalid dealership!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Invalid vehicle model id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "/deletedealerveh <dealerid> <vehicleid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:adddealerveh(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6) {
				new dealerid, vehicleid, price;
				if (!sscanf(params, "iii", dealerid, vehicleid, price)) {
					if(vehicleid >= 400 && vehicleid <= 611 || vehicleid == 0) {
						if(price >= 1){
							if(LastDealershipID[dealerid] != 0){
								new largequery[256];
								mysql_format(MySQL, largequery, sizeof(largequery), "SELECT `id` FROM `dealership_vehicles` WHERE `vehicleid`=%i AND `dealershipid`=%i LIMIT 1", vehicleid, dealerid);
								mysql_query(MySQL, largequery);
								if(cache_num_rows() == 0) {
									format(message, sizeof(message), "%s has given %s(%i) vehicle %s(%i) for $%i", str_replace("_", " ", GetPlayerNameEx(playerid)), Dealerships[dealerid][DealerName], dealerid, GetVehicleInformation(vehicleid), vehicleid, price);
									ClientMessenger(playerid, "FF0000", 4, message);
									mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `dealership_vehicles` (`vehicleid`,`dealershipid`, `price`) VALUES ('%i', '%i', '%i')", vehicleid, dealerid, price);
									mysql_query(MySQL, largequery);
								} else {
									ClientMessenger(playerid, "FF0000", 1, "Dealership already has this vehicle!");
								}
								largequery[0] = '\0';
							} else {
								ClientMessenger(playerid, "FF0000", 1, "Invalid dealership!");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "You can't add a vehicle for less then a dollar!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Invalid vehicle model id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "/adddealerveh <dealerid> <vehicleid> <price>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:movedealer(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6) {
				new dealerid;
				if (!sscanf(params, "i", dealerid)) {
					if(LastDealershipID[dealerid] != 0){
						format(message, sizeof(message), "%s changed dealership %s(%i) location", str_replace("_", " ", GetPlayerNameEx(playerid)), Dealerships[dealerid][DealerName], dealerid);
						ClientMessenger(playerid, "FF0000", 4, message);
						DestroyDynamicPickup(Dealerships[dealerid][DealerIcon]);
						DestroyDynamic3DTextLabel(Dealerships[dealerid][DealerText]);
						DestroyDynamicMapIcon(Dealerships[dealerid][DealerMapIcon]);
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						Dealerships[dealerid][DealerX] = PlayerInfo[playerid][PosX];
						Dealerships[dealerid][DealerY] = PlayerInfo[playerid][PosY];
						Dealerships[dealerid][DealerZ] = PlayerInfo[playerid][PosZ];
						Dealerships[dealerid][DealerMapIcon] = CreateDynamicMapIcon(Dealerships[dealerid][DealerX], Dealerships[dealerid][DealerY], Dealerships[dealerid][DealerZ], 55, -1, Dealerships[dealerid][DealerWorld], Dealerships[dealerid][DealerInt], -1, 250, MAPICON_GLOBAL);
						Dealerships[dealerid][DealerIcon] = CreateDynamicPickup(1239, 23, Dealerships[dealerid][DealerX], Dealerships[dealerid][DealerY], Dealerships[dealerid][DealerZ], Dealerships[dealerid][DealerWorld], Dealerships[dealerid][DealerInt], -1);
						format(Dealerships[dealerid][DealerTempText], 50, "{800080}%s{FFFFFF} (%i)\n/dealership", Dealerships[dealerid][DealerName], dealerid);
						Dealerships[dealerid][DealerText] = CreateDynamic3DTextLabel(Dealerships[dealerid][DealerTempText], -1, Dealerships[dealerid][DealerX], Dealerships[dealerid][DealerY], Dealerships[dealerid][DealerZ], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, Dealerships[dealerid][DealerWorld], Dealerships[dealerid][DealerInt], -1);
						new largequery[150];
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `dealerships` SET `x`='%f', `y`='%f', `z`='%f' WHERE `id`=%i", Dealerships[dealerid][DealerX], Dealerships[dealerid][DealerY], Dealerships[dealerid][DealerZ], dealerid);
						mysql_query(MySQL, largequery);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Invalid dealership!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "/movedealer <dealerid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:editdealer(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6) {
				new dealerid, sdealername[51];
				if (!sscanf(params, "is[51]", dealerid, sdealername)) {
					if(strlen(sdealername) >= 1 && strlen(sdealername) <= 25) {
						if(LastDealershipID[dealerid] != 0){
							format(message, sizeof(message), "%s changed dealership %s(%i) name %s", str_replace("_", " ", GetPlayerNameEx(playerid)), Dealerships[dealerid][DealerName], dealerid, sdealername);
							ClientMessenger(playerid, "FF0000", 4, message);
							format(Dealerships[dealerid][DealerName], sizeof(sdealername), "%s", sdealername);
							DestroyDynamicPickup(Dealerships[dealerid][DealerIcon]);
							DestroyDynamic3DTextLabel(Dealerships[dealerid][DealerText]);
							
							Dealerships[dealerid][DealerIcon] = CreateDynamicPickup(1239, 23, Dealerships[dealerid][DealerX], Dealerships[dealerid][DealerY], Dealerships[dealerid][DealerZ], Dealerships[dealerid][DealerWorld], Dealerships[dealerid][DealerInt], -1);
							format(Dealerships[dealerid][DealerTempText], sizeof(sdealername), "{800080}%s{FFFFFF} (%i)\n/dealership", sdealername, dealerid);
							Dealerships[dealerid][DealerText] = CreateDynamic3DTextLabel(Dealerships[dealerid][DealerTempText], -1, Dealerships[dealerid][DealerX], Dealerships[dealerid][DealerY], Dealerships[dealerid][DealerZ], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, Dealerships[dealerid][DealerWorld], Dealerships[dealerid][DealerInt], -1);
							new largequery[150];
							mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `dealerships` SET `dname`='%e' WHERE `id`=%i", sdealername, dealerid);
							mysql_query(MySQL, largequery);
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "Invalid dealership!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Name can't be less then one character, or more then 25 characters!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "/editdealer <dealerid> <newname>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:deletedealer(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6) {
				new dealerid, dealerconfirm[8];
				if (!sscanf(params, "is[8]", dealerid, dealerconfirm)) {
					if(!strcmp(dealerconfirm, "confirm")){
						if(LastDealershipID[dealerid] != 0){
							new largequery[250];
							mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `dealerships` WHERE `id`=%i", dealerid);
							mysql_query(MySQL, largequery);
							format(message, sizeof(message), "%s has deleted dealership(%i): %s", str_replace("_", " ", GetPlayerNameEx(playerid)), dealerid, Dealerships[dealerid][DealerName]);
							ClientMessenger(playerid, "FFFFFF", 4, message);
							mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `dealership_vehicles` WHERE `dealershipid`=%i", dealerid);
							mysql_query(MySQL, largequery);
							
							DestroyDynamicPickup(Dealerships[dealerid][DealerIcon]);
							DestroyDynamic3DTextLabel(Dealerships[dealerid][DealerText]);
							DestroyDynamicMapIcon(Dealerships[dealerid][DealerMapIcon]);
							LastDealershipID[dealerid] = 0;
							Dealerships[dealerid][DealerX] = 0;
							Dealerships[dealerid][DealerY] = 0;
							Dealerships[dealerid][DealerZ] = 0;
							Dealerships[dealerid][DealerName][0] = '\0';
							Dealerships[dealerid][DealerWorld] = -1;
							Dealerships[dealerid][DealerInt] = -1;
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FFFFFF", 1, "Not a valid dealership!");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "You did not type confirm correctly!!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/deletedealer <dealerid> confirm");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				ClientMessenger(playerid, "FFFFFF", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:makedealer(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6) {
				new sdealername[51];
				if (!sscanf(params, "s[51]", sdealername)) {
					if(strlen(sdealername) >= 1 && strlen(sdealername) <= 25) {
						new getall = sizeof(LastDealershipID);
						for(new x = 1; x < sizeof(LastDealershipID); x++){
							if(LastDealershipID[x] == 0){
								getall = getall-1;
							}
						}
						if(getall != sizeof(LastDealershipID)){
							for(new w = 1; w <= sizeof(LastDealershipID); w++){
								if(LastDealershipID[w] == 0){
									format(message, sizeof(message), "%s has made a dealership(%i), with name %s", str_replace("_", " ", GetPlayerNameEx(playerid)), w, sdealername);
									ClientMessenger(playerid, "FF0000", 4, message);
									GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
									GetPlayerFacingAngle(playerid, PlayerInfo[playerid][FacingAngle]);
									LastDealershipID[w] = 1;
									Dealerships[w][DealerX] = PlayerInfo[playerid][PosX];
									Dealerships[w][DealerY] = PlayerInfo[playerid][PosY];
									Dealerships[w][DealerZ] = (PlayerInfo[playerid][PosZ]);
									format(Dealerships[w][DealerName], sizeof(sdealername), "%s", sdealername);
									Dealerships[w][DealerWorld] = GetPlayerVirtualWorld(playerid);
									Dealerships[w][DealerInt] = GetPlayerInterior(playerid);
									Dealerships[w][DealerMapIcon] = CreateDynamicMapIcon(Dealerships[w][DealerX], Dealerships[w][DealerY], Dealerships[w][DealerZ], 55, -1, Dealerships[w][DealerWorld], Dealerships[w][DealerInt], -1, 250, MAPICON_GLOBAL);
									Dealerships[w][DealerIcon] = CreateDynamicPickup(1239, 23, Dealerships[w][DealerX], Dealerships[w][DealerY], Dealerships[w][DealerZ], Dealerships[w][DealerWorld], Dealerships[w][DealerInt], -1);
									format(Dealerships[w][DealerTempText], sizeof(sdealername), "{800080}%s{FFFFFF} (%i)\n/dealership", sdealername, w);
									Dealerships[w][DealerText] = CreateDynamic3DTextLabel(Dealerships[w][DealerTempText], -1, Dealerships[w][DealerX], Dealerships[w][DealerY], Dealerships[w][DealerZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, Dealerships[w][DealerWorld], Dealerships[w][DealerInt], -1);
									new largequery[256];
									mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `dealerships` (`id`,`x`,`y`,`z`,`dname`,`world`,`worldint`) VALUES ('%i', '%f', '%f', '%f', '%e', '%i', '%i')", w, Dealerships[w][DealerX], Dealerships[w][DealerY], Dealerships[w][DealerZ], sdealername, Dealerships[w][DealerWorld], Dealerships[w][DealerInt]);
									mysql_query(MySQL, largequery);
									largequery[0] = '\0';
									break;
								}
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "Sorry, the dealership limit(10) has been reached!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Name can't be less then one character, or more then 25 characters!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "/makedealer <name>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

factionlocker(playerid)
{
	ShowPlayerDialog(playerid, 64, DIALOG_STYLE_LIST, FactionInfo[PlayerInfo[playerid][Faction]][FactionLongName], "Duty\nArmory\nUniform", "Select", "Cancel");
}

COMMAND:locker(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) {
			new message[144];
			for(new a = 1; a <= MAX_FACTIONS_LOCKERS; a++){
				if(IsPlayerInRangeOfPoint(playerid, 3, FactionLockerInfo[a][FLX], FactionLockerInfo[a][FLY], FactionLockerInfo[a][FLZ]) && FactionLockerInfo[a][FLWorld] == GetPlayerVirtualWorld(playerid)){
					if(FactionLockerInfo[a][FLFaction] == PlayerInfo[playerid][Faction]){
						factionlocker(playerid);
						break;
					}
				}
			}
			message[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:deletelockeritem(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][FactionModerator] >= 2) {
				new factionid, weaponid;
				if (!sscanf(params, "ii", factionid, weaponid)) {
					if(LastFactionID[factionid] == 1){
						if(weaponid >= 0 && weaponid <= 46 && weaponid != 19 && weaponid != 20 && weaponid != 21 && weaponid != 40 && weaponid != 46){
							new largequery[300];
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `factions_locker_items` WHERE `faction_id` = %i AND `item` = %i",factionid, weaponid);
							mysql_query(MySQL, largequery);
							if(cache_num_rows() == 1){
								for(new w = 1; w <= MAX_FACTIONS_LOCKERS_ITEMS; w++){
									if(LastFactionLockerItemsID[factionid][cache_get_field_content_int(0, "rank_id")][w] == weaponid){
										format(message, sizeof(message), "%s has removed item %s(%i) from %s(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), GetWeaponNameInfo(weaponid), weaponid, FactionInfo[factionid][FactionShortName], factionid);
										ClientMessenger(playerid, "FF0000", 4, message);
										LastFactionLockerItemsID[factionid][cache_get_field_content_int(0, "rank_id")][w] = 0;
										mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `factions_locker_items` WHERE `faction_id` = %i AND `item` = %i",factionid, weaponid);
										mysql_query(MySQL, largequery);
									}
								}
							} else {
								format(message, sizeof(message), "The faction %s does not have that weapon!", FactionInfo[factionid][FactionShortName]);
								ClientMessenger(playerid, "FF0000", 1, message);
							}
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That weapon does not exist!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That faction does not exist!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/deletelockeritem <factionid> <weaponid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Moderator{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1,message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:addlockeritem(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][FactionModerator] >= 2) {
				new factionid, weaponid, rankid, price;
				if (!sscanf(params, "iiii", factionid, weaponid, rankid, price)) {
					if(LastFactionID[factionid] == 1){
						if(weaponid >= 1 && weaponid <= 45 && weaponid != 19 && weaponid != 20 && weaponid != 21 && weaponid != 40 && weaponid != 46 && weaponid != 0){
							if(rankid <= MAX_FACTIONS_RANKS && rankid != 0){
								if(price >= 0){
									new largequery[300];
									mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `factions_locker_items` WHERE `faction_id` = %i AND `item` = %i",factionid, weaponid);
									mysql_query(MySQL, largequery);
									if(cache_num_rows() == 0){
										for(new w = 1; w < MAX_FACTIONS_LOCKERS_ITEMS; w++){
											if(LastFactionLockerItemsID[factionid][rankid][w] == 0){
												LastFactionLockerItemsID[factionid][rankid][w] = weaponid;
												format(message, sizeof(message), "%s has given %s(%i) - %s(%i) locker a %s(%i) for $%i", str_replace("_", " ", GetPlayerNameEx(playerid)), AllFactionRanks[factionid][rankid], rankid, FactionInfo[factionid][FactionShortName], factionid, GetWeaponNameInfo(weaponid), weaponid, price);
												ClientMessenger(playerid, "FF0000", 4, message);
												mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `factions_locker_items` (`faction_id`, `rank_id`, `item`, `price`) VALUES ('%i', '%i', '%i', '%i')",factionid, rankid, weaponid, price);
												mysql_query(MySQL, largequery);
												break;
											}
										}
									} else {
										format(message, sizeof(message), "The faction %s(%i) already has item %s(%i) for rank %s(%i) at %i", FactionInfo[factionid][FactionShortName], factionid, GetWeaponNameInfo(weaponid), weaponid, AllFactionRanks[factionid][cache_get_field_content_int(0, "rank_id")], cache_get_field_content_int(0, "rank_id"), cache_get_field_content_int(0, "price"));
										ClientMessenger(playerid, "FF0000", 1, message);
									}
									largequery[0] = '\0';
								} else {
									ClientMessenger(playerid, "FF0000", 1, "You can not go below 1!");
								}
							} else {
								ClientMessenger(playerid, "FF0000", 1, "That rank does not exist!");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That weapon does not exist!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That faction does nto exist!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/addlockeritem <factionid> <weaponid> <rankid> <price>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Moderator{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1,message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:getfactionlocker(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144], onemessage = 1;
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][FactionModerator] <= 1) {
				for(new a = 1; a < sizeof(FactionLockerInfo); a++){
					if(IsPlayerInRangeOfPoint(playerid, 3, FactionLockerInfo[a][FLX], FactionLockerInfo[a][FLY], FactionLockerInfo[a][FLZ]) && FactionLockerInfo[a][FLWorld] == GetPlayerVirtualWorld(playerid) && FactionLockerInfo[a][FLInt] == GetPlayerInterior(playerid)){
						format(message, sizeof(message), "{FFFFFF}LockerID: %i - {%s}%s{FFFFFF}(%i)\n", a, FactionInfo[FactionLockerInfo[a][FLFaction]][FactionColor], FactionInfo[FactionLockerInfo[a][FLFaction]][FactionLongName], FactionLockerInfo[a][FLFaction]);
						onemessage = 0;
						ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, "Locker Information", message, "Done", "");
						break;
					}
				}
				if(onemessage == 1){
					format(message, sizeof(message), "{FFFF00}You are not near any faction lockers!");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Moderator{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:movefactionlocker(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][FactionModerator] <= 2) {
				new lockerid;
				if (!sscanf(params, "i", lockerid)) {
					if(LastFactionLockerID[lockerid] == 1){
						format(message, sizeof(message), "%s has moved locker(%i) for {%s}%s", str_replace("_", " ", GetPlayerNameEx(playerid)), lockerid, FactionInfo[FactionLockerInfo[lockerid][FLFaction]][FactionColor], FactionInfo[FactionLockerInfo[lockerid][FLFaction]][FactionShortName]);
						ClientMessenger(playerid, "FF0000", 4, message);
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						FactionLockerInfo[lockerid][FLX] = PlayerInfo[playerid][PosX];
						FactionLockerInfo[lockerid][FLY] = PlayerInfo[playerid][PosY];
						FactionLockerInfo[lockerid][FLZ] = (PlayerInfo[playerid][PosZ]);
						FactionLockerInfo[lockerid][FLWorld] = GetPlayerVirtualWorld(playerid);
						FactionLockerInfo[lockerid][FLInt] = GetPlayerInterior(playerid);
						
						DestroyDynamicPickup(FactionLockerInfo[lockerid][FLIcon]);
						DestroyDynamic3DTextLabel(FactionLockerInfo[lockerid][FLText]);
						
						FactionLockerInfo[lockerid][FLIcon] = CreateDynamicPickup(1242, 23, FactionLockerInfo[lockerid][FLX], FactionLockerInfo[lockerid][FLY], FactionLockerInfo[lockerid][FLZ], FactionLockerInfo[lockerid][FLWorld], FactionLockerInfo[lockerid][FLInt], -1);
						FactionLockerInfo[lockerid][FLText] = CreateDynamic3DTextLabel("{FFFF00}/locker{FFFFFF}", -1, FactionLockerInfo[lockerid][FLX], FactionLockerInfo[lockerid][FLY], FactionLockerInfo[lockerid][FLZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, FactionLockerInfo[lockerid][FLWorld], FactionLockerInfo[lockerid][FLInt], -1);
						new largequery[256];
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `factions_locker` SET `x` = '%f', `y` = '%f', `z` = '%f', `world` = %i, `interior` = %i WHERE `id` = %i", FactionLockerInfo[lockerid][FLX], FactionLockerInfo[lockerid][FLY], FactionLockerInfo[lockerid][FLZ], FactionLockerInfo[lockerid][FLWorld], FactionLockerInfo[lockerid][FLInt], lockerid);
						mysql_query(MySQL, largequery);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That locker id does not exist!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/movefactionlocker <lockerid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Moderator{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:deletefactionlocker(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][FactionModerator] >= 2){
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][FactionModerator] >= 2) {
				new lockerid, lockerconfirm[8];
				if (!sscanf(params, "is[8]", lockerid, lockerconfirm)) {
					if(lockerid != 0 && lockerid <= 50) {
						if(!strcmp(lockerconfirm, "confirm")){
							if(LastFactionLockerID[lockerid] != 0){
								new largequery[144];
								mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `factions_locker` WHERE `id`=%i", lockerid);
								mysql_query(MySQL, largequery);
								format(message, sizeof(message), "%s has deleted faction locker %i owned by %s", str_replace("_", " ", GetPlayerNameEx(playerid)), lockerid, FactionInfo[lockerid][FactionLongName]);
								ClientMessenger(playerid, "FFFFFF", 4, message);
								
								LastFactionLockerID[lockerid] = 0;
								FactionLockerInfo[lockerid][FLX] = 0;
								FactionLockerInfo[lockerid][FLY] = 0;
								FactionLockerInfo[lockerid][FLZ] = 0;
								FactionLockerInfo[lockerid][FLFaction] = 0;
								FactionLockerInfo[lockerid][FLWorld] = -1;
								FactionLockerInfo[lockerid][FLInt] = -1;
								DestroyDynamicPickup(FactionLockerInfo[lockerid][FLIcon]);
								DestroyDynamic3DTextLabel(FactionLockerInfo[lockerid][FLText]);
								largequery[0] = '\0';
							} else {
								ClientMessenger(playerid, "FFFFFF", 1, "Not a valid lockerid!");
							}
						} else {
							ClientMessenger(playerid, "FFFFFF", 1, "You did not type confirm correctly!");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid lockerid!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/deletefactionlocker <lockerid> confirm");
				}
				lockerconfirm[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Moderator{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:makefactionlocker(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][FactionModerator] <= 2) {
				new factionid;
				if (!sscanf(params, "i", factionid)) {
					if(LastFactionID[factionid] == 1) {
						new getall = sizeof(LastFactionLockerID);
						for(new x = 1; x < sizeof(LastFactionLockerID); x++){
							if(LastFactionLockerID[x] == 0){
								getall = getall-1;
							}
						}
						if(getall != sizeof(LastFactionLockerID)){
							for(new w = 1; w <= sizeof(LastFactionLockerID); w++){
								if(LastFactionLockerID[w] == 0){
									format(message, sizeof(message), "%s has made a faction locker(%i) for {%s}%s", str_replace("_", " ", GetPlayerNameEx(playerid)), w, FactionInfo[factionid][FactionColor], FactionInfo[factionid][FactionShortName]);
									ClientMessenger(playerid, "FF0000", 4, message);
									GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
									LastFactionLockerID[w] = 1;
									FactionLockerInfo[w][FLX] = PlayerInfo[playerid][PosX];
									FactionLockerInfo[w][FLY] = PlayerInfo[playerid][PosY];
									FactionLockerInfo[w][FLZ] = (PlayerInfo[playerid][PosZ]);
									FactionLockerInfo[w][FLFaction] = (factionid);
									FactionLockerInfo[w][FLWorld] = GetPlayerVirtualWorld(playerid);
									FactionLockerInfo[w][FLInt] = GetPlayerInterior(playerid);
									
									FactionLockerInfo[w][FLIcon] = CreateDynamicPickup(1242, 23, FactionLockerInfo[w][FLX], FactionLockerInfo[w][FLY], FactionLockerInfo[w][FLZ], FactionLockerInfo[w][FLWorld], FactionLockerInfo[w][FLInt], -1);
									FactionLockerInfo[w][FLText] = CreateDynamic3DTextLabel("{FFFF00}/locker{FFFFFF}", -1, FactionLockerInfo[w][FLX], FactionLockerInfo[w][FLY], FactionLockerInfo[w][FLZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, FactionLockerInfo[w][FLWorld], FactionLockerInfo[w][FLInt], -1);
									new largequery[256];
									mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `factions_locker` (`id`,`x`,`y`,`z`,`world`,`interior`,`faction_id`) VALUES ('%i', '%f', '%f', '%f', '%i', '%i', '%i')", w, FactionLockerInfo[w][FLX], FactionLockerInfo[w][FLY], FactionLockerInfo[w][FLZ], FactionLockerInfo[w][FLWorld], FactionLockerInfo[w][FLInt], factionid);
									mysql_query(MySQL, largequery);
									largequery[0] = '\0';
									break;
								}
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "Sorry, the locker limit has been reached!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Faction does not exist!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/makefactionlocker <factionid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Moderator{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
	
COMMAND:giveweapon(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 3) {
				new targetid, weaponid;
				if (!sscanf(params, "ui", targetid, weaponid)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1){
							if(weaponid >= 1 && weaponid <= 45 && weaponid != 19 && weaponid != 20 && weaponid != 21 && weaponid != 40 && weaponid != 46 && weaponid != 0){
								format(message, sizeof(message), "%s has given %s a %s", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)), GetWeaponNameInfo(weaponid));
								ClientMessenger(playerid, "FF0000", 4, message);
								new largequery[200];
								new slotid;
								PlayerInfo[targetid][TempInfo][13] = 1;
								if(weaponid == 1){ // slot 0
									slotid = 0;
								} else if(weaponid >= 2 && weaponid <= 9){ // slot 1
									slotid = 1;
								} else if(weaponid >= 22 && weaponid <= 24){ // slot 2
									slotid = 2;
								} else if(weaponid >= 25 && weaponid <= 27){ // slot 3
									slotid = 3;
								} else if(weaponid >= 28 && weaponid <= 29 || weaponid == 32 ){ // slot 4
									slotid = 4;
								} else if(weaponid == 30 || weaponid == 31){ // slot 5
									slotid = 5;
								} else if(weaponid == 33 || weaponid == 34){ // slot 6
									slotid = 6;
								} else if(weaponid >= 35 && weaponid <= 38){ // slot 7
									slotid = 7;
								} else if(weaponid >= 16 && weaponid <= 18 || weaponid == 39){ // slot 8
									slotid = 8;
								} else if(weaponid >= 41 && weaponid <= 43){ // slot 9
									slotid = 9;
								} else if(weaponid >= 10 && weaponid <= 15){ // slot 10
									slotid = 10;
								} else if(weaponid == 44 || weaponid == 45){ // slot 11
									slotid = 11;
								}
								
								for(new a = 1; a <= MAX_SETTINGS; a++){
									format(message, 144, "Weapon_%i_Ammo", weaponid);
									if(!strcmp(GameSettings[a][GameSettingName], message)){
										PlayerInfo[targetid][WeaponsAmmo][slotid] = (PlayerInfo[targetid][WeaponsAmmo][slotid]+GameSettings[a][GameSetting]);
										PlayerInfo[targetid][Weapons][slotid] = weaponid;
										GivePlayerWeapon(targetid, weaponid, 1);
										SetPlayerAmmo(playerid, weaponid, PlayerInfo[targetid][WeaponsAmmo][slotid]);
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_weapons` SET `weapon`=%i, `weapon_ammo` = %i WHERE `slot` = %i AND `playerid` = %i LIMIT 1", weaponid, PlayerInfo[targetid][WeaponsAmmo][slotid], slotid, PlayerInfo[targetid][DBID]);
										break;
									}
								}
								mysql_query(MySQL, largequery);
								PlayerInfo[targetid][TempInfo][13] = 0;
								largequery[0] = '\0';
								//ResetPlayerWeapons(targetid);
								//for(new h = 0; h < 13; h++){
								//  GivePlayerWeapon(targetid, PlayerInfo[playerid][Weapons][h], TotalAmmo);
								//}
							} else {
								ClientMessenger(playerid, "FF0000", 1, "Invalid Weapon ID!");
								ClientMessenger(playerid, "FF0000", 5, "/giveweapon <playername/playerid> <weaponid>");
								ClientMessenger(playerid, "FFFFFF", 3, "List of weapon IDs");
								ClientMessenger(playerid, "FFFFFF", 3, "SLOT 0: Brass Knuckles:[1]");
								ClientMessenger(playerid, "FFFFFF", 3, "SLOT 1: Club:[2],  Batton:[3],  Knife:[4],  Bat:[5],  Shovel:[6],  Cue:[7],  Katana:[8],  Chainsaw:[9]");
								ClientMessenger(playerid, "FFFFFF", 3, "SLOT 2: Colt45:[22],  SDPistol:[23],  Deagle:[24]");
								ClientMessenger(playerid, "FFFFFF", 3, "SLOT 3: Shotgun:[25],  SawedOff Shotgun:[26],  SPAS-12:[27]");
								ClientMessenger(playerid, "FFFFFF", 3, "SLOT 4: UZI:[28],  MP5:[29],  TEC9:[32]");
								ClientMessenger(playerid, "FFFFFF", 3, "SLOT 5: AK-47:[30],  M4:[31]");
								ClientMessenger(playerid, "FFFFFF", 3, "SLOT 6: Rifle:[33],  Sniper:[34]");
								ClientMessenger(playerid, "FFFFFF", 3, "SLOT 7: Rocket Launcher:[35],  Heatseeking Rocket Launcher:[36],  Flamethrower:[37],  Minigun:[38]");
								ClientMessenger(playerid, "FFFFFF", 3, "SLOT 8: Grenades:[16],  Teargas:[17],  Cocktail:[18],  Satchel Charge:[39]");
								ClientMessenger(playerid, "FFFFFF", 3, "SLOT 9: Spraycan:[41],  Fire Extinguisher:[42],  Camera:[43]");
								ClientMessenger(playerid, "FFFFFF", 3, "SLOT 10: PurpleDildo:[10],  Dildo:[11],  Vibrator:[12],  Silver Vibrator:[13],  Flowers:[14],  Cane:[15]");
								ClientMessenger(playerid, "FFFFFF", 3, "SLOT 11: Nightvision Goggles:[44],  Thermal Goggles:[45]");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/giveweapon <playername/playerid> <weaponid>");
					ClientMessenger(playerid, "FFFFFF", 3, "List of weapon IDs");
					ClientMessenger(playerid, "FFFFFF", 3, "SLOT 0: Brass Knuckles:[1]");
					ClientMessenger(playerid, "FFFFFF", 3, "SLOT 1: Club:[2],  Batton:[3],  Knife:[4],  Bat:[5],  Shovel:[6],  Cue:[7],  Katana:[8],  Chainsaw:[9]");
					ClientMessenger(playerid, "FFFFFF", 3, "SLOT 2: Colt45:[22],  SDPistol:[23],  Deagle:[24]");
					ClientMessenger(playerid, "FFFFFF", 3, "SLOT 3: Shotgun:[25],  SawedOff Shotgun:[26],  SPAS-12:[27]");
					ClientMessenger(playerid, "FFFFFF", 3, "SLOT 4: UZI:[28],  MP5:[29],  TEC9:[32]");
					ClientMessenger(playerid, "FFFFFF", 3, "SLOT 5: AK-47:[30],  M4:[31]");
					ClientMessenger(playerid, "FFFFFF", 3, "SLOT 6: Rifle:[33],  Sniper:[34]");
					ClientMessenger(playerid, "FFFFFF", 3, "SLOT 7: Rocket Launcher:[35],  Heatseeking Rocket Launcher:[36],  Flamethrower:[37],  Minigun:[38]");
					ClientMessenger(playerid, "FFFFFF", 3, "SLOT 8: Grenades:[16],  Teargas:[17],  Cocktail:[18],  Satchel Charge:[39]");
					ClientMessenger(playerid, "FFFFFF", 3, "SLOT 9: Spraycan:[41],  Fire Extinguisher:[42],  Camera:[43]");
					ClientMessenger(playerid, "FFFFFF", 3, "SLOT 10: PurpleDildo:[10],  Dildo:[11],  Vibrator:[12],  Silver Vibrator:[13],  Flowers:[14],  Cane:[15]");
					ClientMessenger(playerid, "FFFFFF", 3, "SLOT 11: Nightvision Goggles:[44],  Thermal Goggles:[45]");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(3), GetAdminRanks(3));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:moveatm(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new atmid;
				if (!sscanf(params, "i", atmid)) {
					if(atmid != 0 && atmid <= sizeof(LastATMsID)) {
						if(LastATMsID[atmid] != 0) {
							new largequery[144];
							GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
							GetPlayerFacingAngle(playerid, PlayerInfo[playerid][FacingAngle]);
							PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
							PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
							mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `atms` SET `x` = '%f', `y` = '%f', `z` = '%f', `a` = '%f',`world`=%i,`interior`=%i WHERE `id` = %i", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]-1, PlayerInfo[playerid][FacingAngle], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], atmid);
							mysql_query(MySQL, largequery);
							ATMs[atmid][ATMX] = PlayerInfo[playerid][PosX];
							ATMs[atmid][ATMY] = PlayerInfo[playerid][PosY];
							ATMs[atmid][ATMZ] = (PlayerInfo[playerid][PosZ]-1);
							ATMs[atmid][ATMA] = PlayerInfo[playerid][FacingAngle];
							ATMs[atmid][ATMWorld] = PlayerInfo[playerid][WorldID];
							ATMs[atmid][ATMInt] = PlayerInfo[playerid][InteriorID];
							DestroyDynamicObject(ATMs[atmid][ATMIcon]);
							DestroyDynamic3DTextLabel(ATMs[atmid][ATMText]);
							format(message, sizeof(message), "%s has moved an ATM(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), atmid);
							ClientMessenger(playerid, "FFFFFF", 4, message);
							ATMs[atmid][ATMIcon] = CreateDynamicObject(19526, ATMs[atmid][ATMX], ATMs[atmid][ATMY], (ATMs[atmid][ATMZ]), 0, 0, ATMs[atmid][ATMA], ATMs[atmid][ATMWorld], ATMs[atmid][ATMInt], -1, 150);
							format(message, sizeof(message), "{00FFFF}/atm{FFFFFF}\nSerial #%i", atmid);
							ATMs[atmid][ATMText] = CreateDynamic3DTextLabel(message, -1, ATMs[atmid][ATMX], ATMs[atmid][ATMY], (ATMs[atmid][ATMZ]+1), GlobalExitRadius+10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, ATMs[atmid][ATMWorld], ATMs[atmid][ATMInt], -1);   
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FFFFFF", 1, "Not a valid ATM!");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid ATM!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/moveatm <atmid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FFFFFF", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

EditFaction(playerid, factionid)
{
	new message[500];
	format(message, 750, "Information\tValues\nLong Name\t%s\nShort Name\t%s\nColor\t%s\nDepartment Radio\t%s\nRoadblock\t%s\nFake Badges\t%s\nMDC\t%s\nWarrant Players\t%s\n",FactionInfo[factionid][FactionLongName], FactionInfo[factionid][FactionShortName], FactionInfo[factionid][FactionColor], GetFactionPerm(factionid, 1), GetFactionPerm(factionid, 2), GetFactionPerm(factionid, 3), GetFactionPerm(factionid, 4), GetFactionPerm(factionid, 5));
	strcat(ReadAllMessages[playerid], message);
	format(message, 750, "PSA (/psa)\t%s\nArrests\t%s\nState Tressury\t%s\nSet Taxes\t%s\nCall Backup\t%s\nQueue\t%i\nIs Family\t%s",GetFactionPerm(factionid, 6),GetFactionPerm(factionid, 7),GetFactionPerm(factionid, 8),GetFactionPerm(factionid, 9),GetFactionPerm(factionid, 10),FactionInfo[factionid][FactionPermissions][0], GetFactionPerm(factionid, 11));
	strcat(ReadAllMessages[playerid], message);
	PlayerInfo[playerid][AllEditingOptions] = factionid;
	format(message, sizeof(message), "{%s}%s", FactionInfo[factionid][FactionColor], FactionInfo[factionid][FactionLongName]);
	ShowPlayerDialog(playerid, 7, DIALOG_STYLE_TABLIST_HEADERS, message, ReadAllMessages[playerid], "Select", "Cancel");
	ReadAllMessages[playerid][0] = '\0';
	message[0] = '\0';
}

COMMAND:editfaction(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6 || PlayerInfo[playerid][FactionModerator] >= 2) {
				new factionid;
				if (!sscanf(params, "i", factionid)) {
					if(factionid != 0) {
						if(LastFactionID[factionid] == 1){
							EditFaction(playerid, factionid);
						} else {
							ClientMessenger(playerid, "FF0000", 1, "Not a valid faction!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid faction!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/editfaction <factionid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Director{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

EditFactionRanks(playerid, factionid)
{
	new message[144];
	strcat(ReadAllMessages[playerid], "Rank Name\tRank ID\n");
	for(new a = 1; a <= MAX_FACTIONS_RANKS; a++)
	{
		format(message, sizeof(message), "%s\t%i\n", AllFactionRanks[factionid][a], a);
		strcat(ReadAllMessages[playerid], message);
	}
	PlayerInfo[playerid][AllEditingOptions] = factionid;
	format(message, sizeof(message), "{%s}%s", FactionInfo[factionid][FactionColor], FactionInfo[factionid][FactionLongName]);
	ShowPlayerDialog(playerid, 3, DIALOG_STYLE_TABLIST_HEADERS, message, ReadAllMessages[playerid], "Edit", "Cancel");
	ReadAllMessages[playerid][0] = '\0';
	message[0] = '\0';
}

COMMAND:editfactionranks(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][FactionModerator] >= 2) {
			if(PlayerInfo[playerid][Admin] >= 6 || PlayerInfo[playerid][FactionModerator] >= 2) {
				new factionid;
				if (!sscanf(params, "i", factionid)) {
					if(LastFactionID[factionid] == 1){
						EditFactionRanks(playerid, factionid);
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That faction does not exist!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/editfactionranks <factionid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:fakebadge(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) {
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][3] != 0) {
				if(AllFactionRanksPermissions[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]][3] != 0) {
					new factionsname[11], message[144], ffactionlevel;
					if (!sscanf(params, "s[10]", factionsname)) {
						if(strcmp(factionsname, "none", true)){
							if (!sscanf(params, "s[10]i", factionsname, ffactionlevel)) {
								if(ffactionlevel > 0 && ffactionlevel < MAX_FACTIONS_RANKS) {
									for (new b = 1; b <= TotalFactions; b++) {
										if(!strcmp(factionsname, FactionInfo[b][FactionShortName], true) && strcmp(factionsname, "none", true)){
											if(FactionInfo[b][FactionPermissions][3] == 0 && FactionInfo[b][FactionPermissions][11] == 0) {
												if(strcmp(AllFactionRanks[b][ffactionlevel], "nil")){
													format(message, sizeof(message), "* You have gone undercover as a %s in faction {%s}%s *", AllFactionRanks[b][ffactionlevel], FactionInfo[b][FactionColor], FactionInfo[b][FactionLongName]);
													PlayerInfo[playerid][FakeFaction] = (b);
													PlayerInfo[playerid][FakeFactionLevel] = ffactionlevel;
													ClientMessenger(playerid, "FFFFFF", 3, message);
												} else {
													ClientMessenger(playerid, "FFFFFF", 1, "That rank does not exist in that faction!");
												}
											} else {
												ClientMessenger(playerid, "FFFFFF", 1, "Sorry, you can not go undercover in that faction!");
											}
										}
									}
								} else {
									format(message, sizeof(message), "You can't be below or above the rank level of 1 or %i", MAX_FACTIONS_RANKS);
									ClientMessenger(playerid, "FFFFFF", 1, message);
								}
							} else {
								format(message, sizeof(message), "/fakebadge <");
								strcat(ReadAllMessages[playerid], message);
								for (new b = 1; b <= TotalFactions; b++) {
									if(FactionInfo[b][FactionPermissions][3] == 0 && FactionInfo[b][FactionPermissions][11] == 0) {
										format(message, sizeof(message), "%s/", FactionInfo[b][FactionShortName]);
										strcat(ReadAllMessages[playerid], message);
									}
								}
								format(message, sizeof(message), "NONE> <rank level>");
								strcat(ReadAllMessages[playerid], message);
								ClientMessenger(playerid, "FFFFFF", 5, ReadAllMessages[playerid]);
								ReadAllMessages[playerid][0] = '\0';
							}
						} else {
							ClientMessenger(playerid, "FFFFFF", 3, "* You have gone out from undercover! *");
							PlayerInfo[playerid][FakeFaction] = 0;
							PlayerInfo[playerid][FakeFactionLevel] = 0;
						}
					} else {
						format(message, sizeof(message), "/fakebadge <");
						strcat(ReadAllMessages[playerid], message);
						for (new b = 1; b <= TotalFactions; b++) {
							if(FactionInfo[b][FactionPermissions][3] == 0 && FactionInfo[b][FactionPermissions][11] == 0) {
								format(message, sizeof(message), "%s/", FactionInfo[b][FactionShortName]);
								strcat(ReadAllMessages[playerid], message);
							}
						}
						format(message, sizeof(message), "NONE> <rank level>");
						strcat(ReadAllMessages[playerid], message);
						ClientMessenger(playerid, "FFFFFF", 5, ReadAllMessages[playerid]);
						ReadAllMessages[playerid][0] = '\0';
					}
					factionsname[0] = '\0';
					message[0] = '\0';
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can't do this at your rank!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:for(playerid, params[]){
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) {
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][3] == 1){
				if(PlayerInfo[playerid][FakeFaction] != 0) {
					new message[145];
					new text[145];
					if (!sscanf(params, "s[145]", text)) {
						format(message, sizeof(message), "* (( %s )) *", text);
						SetPlayerChatBubble(playerid, message, 0x8D8DFFFF, 10, 7000);
						format(message, sizeof(message), "* %s %s: (( %s )) *", AllFactionRanks[PlayerInfo[playerid][FakeFaction]][PlayerInfo[playerid][FakeFactionLevel]], str_replace("_", " ", GetPlayerNameEx(playerid)), text);
						foreach(Player, i)
						{
							if(PlayerInfo[playerid][FakeFaction] == PlayerInfo[i][Faction] || PlayerInfo[playerid][FakeFaction] == PlayerInfo[i][FakeFaction]) {
								if(PlayerInfo[i][Online] == 1) {
									SendClientMessage(i, 0x8D8DFFFF, message);
								}
							}
						}
					} else {
						ClientMessenger(playerid, "FF0000", 5, "/fr <message>");
					}
					message[0] = '\0';
					text[0] = '\0';
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You are not faking faction!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:fr(playerid, params[]){
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) {
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][3] == 1){
				if(PlayerInfo[playerid][FakeFaction] != 0) {
					new message[145];
					new text[145];
					if (!sscanf(params, "s[145]", text)) {
						format(message, sizeof(message), "* %s *", text);
						SetPlayerChatBubble(playerid, message, 0x8D8DFFFF, 10, 7000);
						format(message, sizeof(message), "* %s %s: %s *", AllFactionRanks[PlayerInfo[playerid][FakeFaction]][PlayerInfo[playerid][FakeFactionLevel]], str_replace("_", " ", GetPlayerNameEx(playerid)), text);
						foreach(Player, i)
						{
							if(PlayerInfo[playerid][FakeFaction] == PlayerInfo[i][Faction] || PlayerInfo[playerid][FakeFaction] == PlayerInfo[i][FakeFaction]) {
								if(PlayerInfo[i][Online] == 1) {
									SendClientMessage(i, 0x8D8DFFFF, message);
								}
							}
						}
					} else {
						ClientMessenger(playerid, "FF0000", 5, "/fr <message>");
					}
					text[0] = '\0';
					message[0] = '\0';
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You are not faking faction!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:fmembers(playerid, params[]) 
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) {
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][3] == 1){
				if(PlayerInfo[playerid][FakeFaction] != 0) {
					new message[144];
					format(message, sizeof(message), "{FFFFFF}~ ~ {%s}%s Members{FFFFFF} ~ ~", FactionInfo[PlayerInfo[playerid][FakeFaction]][FactionColor], FactionInfo[PlayerInfo[playerid][FakeFaction]][FactionShortName]);
					SendClientMessage(playerid, -1, message);
					foreach(Player, i)
					{
						if(PlayerInfo[i][Faction] == PlayerInfo[playerid][FakeFaction] || PlayerInfo[i][FakeFaction] == PlayerInfo[playerid][FakeFaction]){
							if(PlayerInfo[i][FactionLeader] == 1 && PlayerInfo[i][Faction] == PlayerInfo[playerid][FakeFaction]){
								format(message, sizeof(message), "- {%s}%s{FFFFFF} %s [LF]", FactionInfo[PlayerInfo[i][FakeFaction]][FactionColor], AllFactionRanks[PlayerInfo[i][FakeFaction]][PlayerInfo[i][FactionLevel]], str_replace("_", " ", GetPlayerNameEx(i)));
								SendClientMessage(playerid, -1, message);
							} else if(PlayerInfo[i][FactionLeader] == 0 && PlayerInfo[i][Faction] == PlayerInfo[playerid][FakeFaction]){
								format(message, sizeof(message), "- {%s}%s{FFFFFF} %s", FactionInfo[PlayerInfo[i][FakeFaction]][FactionColor], AllFactionRanks[PlayerInfo[i][FakeFaction]][PlayerInfo[i][FactionLevel]], str_replace("_", " ", GetPlayerNameEx(i)));
								SendClientMessage(playerid, -1, message);
							}
							
							if(PlayerInfo[i][FakeFaction] == PlayerInfo[playerid][FakeFaction]){
								format(message, sizeof(message), "- {%s}%s{FFFFFF} %s", FactionInfo[PlayerInfo[i][FakeFaction]][FactionColor], AllFactionRanks[PlayerInfo[i][FakeFaction]][PlayerInfo[i][FakeFactionLevel]], str_replace("_", " ", GetPlayerNameEx(i)));
								SendClientMessage(playerid, -1, message);
							}
						}
					}
					message[0] = '\0';
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You are not faking faction!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:members(playerid, params[]) 
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][Faction] != 0) {
			new message[144];
			format(message, sizeof(message), "{FFFFFF}~ ~ {%s}%s Members{FFFFFF} ~ ~", FactionInfo[PlayerInfo[playerid][Faction]][FactionColor], FactionInfo[PlayerInfo[playerid][Faction]][FactionShortName]);
			SendClientMessage(playerid, -1, message);
			foreach(Player, i)
			{
				if(PlayerInfo[i][Faction] == PlayerInfo[playerid][Faction] || PlayerInfo[i][FakeFaction] == PlayerInfo[playerid][Faction]){
					if(PlayerInfo[i][FactionLeader] == 1 && PlayerInfo[i][Faction] == PlayerInfo[playerid][Faction]){
						format(message, sizeof(message), "- {%s}%s{FFFFFF} %s [LF]", FactionInfo[PlayerInfo[i][Faction]][FactionColor], AllFactionRanks[PlayerInfo[i][Faction]][PlayerInfo[i][FactionLevel]], str_replace("_", " ", GetPlayerNameEx(i)));
						SendClientMessage(playerid, -1, message);
					} else if(PlayerInfo[i][FactionLeader] == 0 && PlayerInfo[i][Faction] == PlayerInfo[playerid][Faction]){
						format(message, sizeof(message), "- {%s}%s{FFFFFF} %s", FactionInfo[PlayerInfo[i][Faction]][FactionColor], AllFactionRanks[PlayerInfo[i][Faction]][PlayerInfo[i][FactionLevel]], str_replace("_", " ", GetPlayerNameEx(i)));
						SendClientMessage(playerid, -1, message);
					}
					
					if(PlayerInfo[i][FakeFaction] == PlayerInfo[playerid][Faction]){
						format(message, sizeof(message), "- {%s}%s{FFFFFF} %s", FactionInfo[PlayerInfo[i][FakeFaction]][FactionColor], AllFactionRanks[PlayerInfo[i][FakeFaction]][PlayerInfo[i][FakeFactionLevel]], str_replace("_", " ", GetPlayerNameEx(i)));
						SendClientMessage(playerid, -1, message);
					}
				}
			}
			message[0] = '\0';
			printf("GlitchTest: %s", message);
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:fd(playerid, params[]){
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) {
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][3] == 1){
				if(PlayerInfo[playerid][FakeFaction] != 0) {
					if(FactionInfo[PlayerInfo[playerid][FakeFaction]][FactionPermissions][1] != 0) {
						if(AllFactionRanksPermissions[PlayerInfo[playerid][FakeFaction]][PlayerInfo[playerid][FakeFactionLevel]][1] != 0) {
							new message[145];
							new text[145];
							if (!sscanf(params, "s[145]", text)) {
								format(message, sizeof(message), "* %s *", text);
								SetPlayerChatBubble(playerid, message, 0xF0CC00FF, 10, 7000);
								format(message, sizeof(message), "* [%s] %s %s: %s *", FactionInfo[PlayerInfo[playerid][FakeFaction]][FactionShortName], AllFactionRanks[PlayerInfo[playerid][FakeFaction]][PlayerInfo[playerid][FakeFactionLevel]], str_replace("_", " ", GetPlayerNameEx(playerid)), text);
								foreach(Player, i)
								{
								
									if(PlayerInfo[i][Online] == 1) {
										if(FactionInfo[PlayerInfo[playerid][FakeFaction]][FactionPermissions][1] == 1){ // Does faction being faked have department radio
											// Is player fake faction same as player faction
											if(FactionInfo[PlayerInfo[playerid][FakeFaction]][FactionPermissions][0] == FactionInfo[PlayerInfo[i][Faction]][FactionPermissions][0]) {
												SendClientMessage(i, 0xF0CC00FF, message);
											}
											// Is player fake faction same as other faking player faction
											if(FactionInfo[PlayerInfo[playerid][FakeFaction]][FactionPermissions][0] == FactionInfo[PlayerInfo[i][FakeFaction]][FactionPermissions][0]) {
												SendClientMessage(i, 0xF0CC00FF, message);
											}
										}
									}
									
									
									/*
									if(PlayerInfo[i][Online] == 1) {
										if(PlayerInfo[playerid][FakeFaction] == PlayerInfo[i][Faction] || PlayerInfo[playerid][FakeFaction] == PlayerInfo[i][FakeFaction]) {
											if(FactionInfo[PlayerInfo[i][FakeFaction]][FactionPermissions][1] == 1){
												SendClientMessage(i, 0xF0CC00FF, message);
											}
										}
									}
									*/
								}
							} else {
								ClientMessenger(playerid, "FF0000", 5, "/fd <message>");
							}
							message[0] = '\0';
							text[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "You can't do this at your rank fake!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Your fake faction can not do this!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You are not faking faction!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:d(playerid, params[]){
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) {
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][1] != 0) {
				if(AllFactionRanksPermissions[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]][1] != 0) {
					new message[144], text[144];
					if (!sscanf(params, "s[144]", text)) {
						format(message, sizeof(message), "* %s *", text);
						SetPlayerChatBubble(playerid, message, 0xF0CC00FF, 10, 7000);
						format(message, sizeof(message), "* [%s] %s %s: %s *", FactionInfo[PlayerInfo[playerid][Faction]][FactionShortName], AllFactionRanks[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]], str_replace("_", " ", GetPlayerNameEx(playerid)), text);
						foreach(Player, i)
						{
							if(PlayerInfo[i][Online] == 1) { // Player Online
								//if(PlayerInfo[playerid][Faction] == PlayerInfo[i][Faction] || PlayerInfo[playerid][Faction] == PlayerInfo[i][FakeFaction]) { // Player in same faction
									if(FactionInfo[PlayerInfo[i][Faction]][FactionPermissions][1] == 1 || FactionInfo[PlayerInfo[i][FakeFaction]][FactionPermissions][1] == 1){ // Player has department permissions
										
										if(FactionInfo[PlayerInfo[i][Faction]][FactionPermissions][0] == FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][0]){ // 
											SendClientMessage(i, 0xF0CC00FF, message);
										}
										
										
										if(PlayerInfo[i][FakeFaction] != 0){
											// Is player faction the same as random fake faction
											if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][0] == FactionInfo[PlayerInfo[i][FakeFaction]][FactionPermissions][0]){
												SendClientMessage(i, 0xF0CC00FF, message);
											}
										}
										
									}
								//}
							}
						}
					} else {
						ClientMessenger(playerid, "FF0000", 5, "/d <message>");
					}
					message[0] = '\0';
					text[0] = '\0';
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can't do this at your rank!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:or(playerid, params[]){
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) {
			new message[144], text[144];
			if (!sscanf(params, "s[144]", text)) {
				format(message, sizeof(message), "* (( %s )) *", text);
				SetPlayerChatBubble(playerid, message, 0x8D8DFFFF, 10, 7000);
				format(message, sizeof(message), "* %s %s: (( %s )) *", AllFactionRanks[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]], str_replace("_", " ", GetPlayerNameEx(playerid)), text);
				foreach(Player, i)
				{
					if(PlayerInfo[playerid][Faction] == PlayerInfo[i][Faction] || PlayerInfo[playerid][Faction] == PlayerInfo[i][FakeFaction]) {
						if(PlayerInfo[i][Online] == 1) {
							SendClientMessage(i, 0x8D8DFFFF, message);
						}
					}
				}
			} else {
				ClientMessenger(playerid, "FF0000", 5, "/or <message>");
			}
			message[0] = '\0';
			text[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:r(playerid, params[]){
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) {
			new message[144], text[144];
			if (!sscanf(params, "s[144]", text)) {
				format(message, sizeof(message), "* %s *", text);
				SetPlayerChatBubble(playerid, message, 0x8D8DFFFF, 10, 7000);
				format(message, sizeof(message), "* %s %s: %s *", AllFactionRanks[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]], str_replace("_", " ", GetPlayerNameEx(playerid)), text);
				foreach(Player, i)
				{
					if(PlayerInfo[playerid][Faction] == PlayerInfo[i][Faction] || PlayerInfo[playerid][Faction] == PlayerInfo[i][FakeFaction]) {
						if(PlayerInfo[i][Online] == 1) {
							SendClientMessage(i, 0x8D8DFFFF, message);
						}
					}
				}
			} else {
				ClientMessenger(playerid, "FF0000", 5, "/r <message>");
			}
			message[0] = '\0';
			text[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:f(playerid, params[]){
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 1) {
			new message[145];
			new text[145];
			if (!sscanf(params, "s[145]", text)) {
				format(message, sizeof(message), "* %s *", text);
				SetPlayerChatBubble(playerid, message, 0x48C9B0FF, 10, 7000);
				format(message, sizeof(message), "* %s %s: %s *", AllFactionRanks[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]], str_replace("_", " ", GetPlayerNameEx(playerid)), text);
				foreach(Player, i)
				{
					if(PlayerInfo[playerid][Faction] == PlayerInfo[i][Faction]) {
						if(PlayerInfo[i][Online] == 1) {
							SendClientMessage(i, 0x48C9B0FF, message);
						}
					}
				}
			} else {
				ClientMessenger(playerid, "FF0000", 5, "/f <message>");
			}
			message[0] = '\0';
			text[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a family!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:giverank(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Faction] != 0) {
			if(PlayerInfo[playerid][FactionLeader] != 0) {
				new targetid, rankid;
				if (!sscanf(params, "ui", targetid, rankid)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1){
							if(PlayerInfo[targetid][Faction] != 0){
								if(PlayerInfo[targetid][Faction] == PlayerInfo[playerid][Faction]){
									if(rankid <= MAX_FACTIONS_RANKS){
										if(strcmp(AllFactionRanks[PlayerInfo[targetid][Faction]][rankid], "nil")){
											new largequery[200], message[144];
											if(PlayerInfo[targetid][FactionLevel] < rankid){
												format(message, sizeof(message), "** You have {00FF00}promoted{FFFFFF} %s to %s **",  str_replace("_", " ", GetPlayerNameEx(targetid)), AllFactionRanks[PlayerInfo[playerid][Faction]][rankid]);
												ClientMessenger(playerid, "FFFFFF", 3, message);
												format(message, sizeof(message), "** You have been {00FF00}promoted{FFFFFF} to %s by %s **", AllFactionRanks[PlayerInfo[playerid][Faction]][rankid], str_replace("_", " ", GetPlayerNameEx(playerid)));
												ClientMessenger(playerid, "FFFFFF", 3, message);
											} else if(PlayerInfo[targetid][FactionLevel] > rankid) {
												format(message, sizeof(message), "** You have {FF0000}demoted{FFFFFF} %s to %s **", str_replace("_", " ", GetPlayerNameEx(targetid)), AllFactionRanks[PlayerInfo[playerid][Faction]][rankid]);
												ClientMessenger(playerid, "FFFFFF", 3, message);
												format(message, sizeof(message), "** You have been {FF0000}demoted{FFFFFF} to %s by %s **", AllFactionRanks[PlayerInfo[playerid][Faction]][rankid], str_replace("_", " ", GetPlayerNameEx(playerid)));
												ClientMessenger(playerid, "FFFFFF", 3, message);
											} else {
												ClientMessenger(playerid, "FF0000", 1, "This person is already at that rank, no changes happened.");
											}
											PlayerInfo[targetid][FactionLevel] = rankid;
											mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `faction_level` = %i WHERE `id` = %i", rankid, PlayerInfo[targetid][DBID]);
											mysql_query(MySQL, largequery);
											largequery[0] = '\0';
											message[0] = '\0';
										} else {
											ClientMessenger(playerid, "FF0000", 1, "That rank doesn't exist!");
										}
									} else {
										ClientMessenger(playerid, "FF0000", 1, "That rank doesn't exist!");
									}
								} else {
									ClientMessenger(playerid, "FF0000", 1, "That person isn't in your faction!");
								}
							} else {
								ClientMessenger(playerid, "FF0000", 1, "That player isn't in any faction!");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/giverank <playername/playerid> <rankid>");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "You are not a faction leader");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


forward PlaySecondCrime(playerid, warrant);
forward PlayThirdCrime(playerid, warrant);
forward PlayFourthCrime(playerid, warrant);
forward PlayFifthCrime(playerid, warrant);
forward PlaySixthCrime(playerid, warrant);
public PlaySixthCrime(playerid, warrant)
{
	PlayerPlaySound(playerid, 3001, 0,0,0); // 4 DOOR
}
public PlayFifthCrime(playerid, warrant)
{
	PlayerPlaySound(playerid, 2205, 0,0,0); // CUSTOMIZED
	SetTimerEx("PlaySixthCrime", 600, false, "ii", playerid, warrant);
}
public PlayFourthCrime(playerid, warrant)
{
	if(GetPlayerState(playerid) == 2 || GetPlayerState(playerid) == 3) {
		PlayerPlaySound(playerid, 2601, 0,0,0); // IN A
		SetTimerEx("PlayFifthCrime", 300, false, "ii", playerid, warrant);
	} else if(GetPlayerState(playerid) == 1 ) {
		PlayerPlaySound(playerid, 2604, 0,0,0); // ON FOOT
	}
	
}
public PlayThirdCrime(playerid, warrant)
{
	PlayerPlaySound(playerid, 2400, 0,0,0); // CENTRAL
	SetTimerEx("PlayFourthCrime", 500, false, "ii", playerid, warrant);
}
public PlaySecondCrime(playerid, warrant)
{
	if(warrant == 1){
		PlayerPlaySound(playerid, 2800, 0,0,0); // 17 IN
	} else if(warrant == 2){
		PlayerPlaySound(playerid, 2801, 0,0,0); // 21 IN
	} else if(warrant == 3){
		PlayerPlaySound(playerid, 2802, 0,0,0); // 24 IN
	} else if(warrant == 4){
		PlayerPlaySound(playerid, 2803, 0,0,0); // 28 IN
	} else if(warrant == 5){
		PlayerPlaySound(playerid, 2804, 0,0,0); // 34 IN
	} else if(warrant == 6){
		PlayerPlaySound(playerid, 2805, 0,0,0); // 37 IN
	}
	SetTimerEx("PlayThirdCrime", 500, false, "ii", playerid, warrant);
}


SaidWarrants(playerid)
{
	if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][5] == 1){
		new message[64], b = 0;
		PlayerInfo[playerid][AllEditingOptions3][0] = '\0';
		strcat(ReadAllMessages[playerid], "Name\tWarrants\n");
		foreach(Player, i)
		{
			if(PlayerInfo[i][Online] == 1) {
				if(PlayerInfo[i][Warrants] >= 1){
					PlayerInfo[playerid][AllEditingOptions3][b] = PlayerInfo[i][DBID];
					format(message, sizeof(message), "%s\t%i\n", str_replace("_", " ", GetPlayerNameEx(i)), PlayerInfo[i][Warrants]);
					strcat(ReadAllMessages[playerid], message);
					b = (b+1);
				}
			}
		}
		ShowPlayerDialog(playerid, 25, DIALOG_STYLE_TABLIST_HEADERS, "Warrants", ReadAllMessages[playerid], "Select", "Cancel");
		message[0] = '\0';
		ReadAllMessages[playerid][0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
	}
}

COMMAND:warrants(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) {
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][5] == 1){
				if(AllFactionRanksPermissions[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]][5] == 1) {
					if(IsPlayerInAnyVehicle(playerid) == 1){
						if(FactionInfo[Vehicles[GetPlayerVehicleID(playerid)][Faction]][FactionPermissions][5] == 1){
							SaidWarrants(playerid);
						} else {
							ClientMessenger(playerid, "FFFFFF", 2, "* You are not in a vehicle that can view warrants! *");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 2, "* You are not in a vehicle that can view warrants! *");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can not do this at your rank!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:handtazer(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new reason[144];
		if(PlayerInfo[playerid][Faction] != 0) {
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][5] == 1){
				if(AllFactionRanksPermissions[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]][5] == 1) {
					if(PlayerInfo[playerid][TempInfo][16] == 0){
						PlayerInfo[playerid][TempInfo][16] = 1;
						RemovePlayerAttachedObject(playerid, 9);
						SetPlayerAttachedObject(playerid, 9, 18642, 6, 0.042999, 0.014999, 0.043999, 177.200027, 0.000000, -18.699996, 1.000000, 1.000000, 1.000000);
						format(reason, sizeof(reason), "{C2A2DA}* %s unholsters %s hand tazer", str_replace("_", " ", GetPlayerNameEx(playerid)), GenderIdentification3(PlayerInfo[playerid][Gender]));
						ActionMessager(playerid, 25, reason);
					} else if(PlayerInfo[playerid][TempInfo][16] == 1) {
						PlayerInfo[playerid][TempInfo][16] = 0;
						RemovePlayerAttachedObject(playerid, 9);
						format(reason, sizeof(reason), "{C2A2DA}* %s holsters %s hand tazer", str_replace("_", " ", GetPlayerNameEx(playerid)), GenderIdentification3(PlayerInfo[playerid][Gender]));
						ActionMessager(playerid, 25, reason);
					} else if(PlayerInfo[playerid][TempInfo][16] == 2) {
						ClientMessenger(playerid, "FF0000", 2, "You currently have your SD Tazer out right now. You need to holster that first!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can not do this at your rank!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
		reason[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

/*
public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
	printf("%f %f %f %f %f %f %f %f %f",fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
	return 1;
}
*/


GiveWarrant(playerid, targetid, reason[])
{
	if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][5] == 1){
		new largequery[350], message[144];
		new Year, Month, Day, Hour, Minute, Second;
		PlayerInfo[targetid][Warrants] = (PlayerInfo[targetid][Warrants]+1);
		PlayerInfo[targetid][CrimesCommitted] = (PlayerInfo[targetid][CrimesCommitted]+1);
		PlayerPlaySound(targetid, 2608, 0,0,0); // WE GOT A 10-
		SetTimerEx("PlaySecondCrime", 700, false, "ii", targetid, PlayerInfo[targetid][Warrants]);
		SetPlayerWantedLevel(targetid, PlayerInfo[targetid][Warrants]);
		mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `warrants` = %i, `crimes_committed` = %i WHERE `id` = %i", PlayerInfo[targetid][Warrants], PlayerInfo[targetid][CrimesCommitted], PlayerInfo[targetid][DBID]);
		mysql_query(MySQL, largequery);
		format(message, sizeof(message), "* You have placed a warrant on %s for %s *", str_replace("_", " ", GetPlayerNameEx(targetid)), reason);
		ClientMessenger(playerid, "357EC7", 3, message);
		format(message, sizeof(message), "* There has been a warrant placed on you for %s *", reason);
		ClientMessenger(targetid, "FF0000", 3, message);
		format(message, sizeof(message), "{C2A2DA}* %s opens the mdc, adding %s to the warrant list", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)));
		ActionMessager(playerid, 25, message);
		gettime(Hour, Minute, Second);
		getdate(Year, Month, Day);
		mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `warrants` (`reason`, `date`, `copid`, `suspectid`) VALUES ('%e', '%i/%i/%i - %02i:%02i:%02i', '%i', '%i')",  reason, Month, Day, Year, Hour, Minute, Second, PlayerInfo[playerid][DBID], PlayerInfo[targetid][DBID]);
		mysql_query(MySQL, largequery);
		largequery[0] = '\0';
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
	}
}
COMMAND:warrant(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new targetid, reason[65];
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) {
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][5] == 1){
				if(AllFactionRanksPermissions[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]][5] == 1) {
					if (!sscanf(params, "us[65]", targetid, reason)) {
						if(targetid != 65535){
							if(PlayerInfo[targetid][Online] == 1){
								if(PlayerInfo[targetid][Warrants] != 6){
									if(PlayerInfo[targetid][Faction] != 0){
										if(FactionInfo[PlayerInfo[targetid][Faction]][FactionPermissions][0] == FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][0]){
											ClientMessenger(playerid, "FFFFFF", 3, "* This person is apart of a LEO faction. You can not warrant him! *");
										} else if(PlayerInfo[targetid][FakeFaction] != 0) {
											if(FactionInfo[PlayerInfo[targetid][FakeFaction]][FactionPermissions][0] == FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][0]){
												ClientMessenger(playerid, "FFFFFF", 3, "* This person is apart of a LEO faction. You can not warrant him! *");
											} else {
												GiveWarrant(playerid, targetid, reason);
											}
										} else {
											GiveWarrant(playerid, targetid, reason);
										}
									} else {
										GiveWarrant(playerid, targetid, reason);
									}
								} else {
									ClientMessenger(playerid, "FFFFFF", 2, "* Player is already at the highest warrant level! *");
								}
							} else {
								ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 5, "/warrant <playerid/playername> <reason>");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can not do this at your rank!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
		reason[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:deletefactionskin(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][FactionModerator] >= 2) {
				new factionid, skinid;
				if (!sscanf(params, "ii", factionid, skinid)) {
					if(factionid != 0){
						if(skinid <= 311 && skinid > 0){
							if(LastFactionID[factionid] == 1){
								new largequery[144];
								mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `factions_skins` WHERE `faction_id` = %i AND `skin_id` = %i LIMIT 1", factionid, skinid);
								mysql_query(MySQL, largequery);
								if(cache_num_rows() == 1){
									format(message, sizeof(message), "%s has removed skin(%i) from {%s}%s(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), skinid, FactionInfo[factionid][FactionColor], FactionInfo[factionid][FactionShortName], factionid);
									ClientMessenger(playerid, "FF0000", 4, message);
									mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `factions_skins` WHERE `faction_id` = %i AND `skin_id` = %i", factionid, skinid);
									mysql_query(MySQL, largequery);
								} else {
									ClientMessenger(playerid, "FF0000", 1, "This faction does not have that skin either at all, or on that specific rank");
								}
								largequery[0] = '\0';
							} else {
								ClientMessenger(playerid, "FF0000", 1, "Not a valid faction!");
							}
						} else {
							format(message, sizeof(message), "Skin ID 1 through 311 are the only avilable skin id!");
							ClientMessenger(playerid, "FF0000", 1, message);
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid faction!");
					}   
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/deletefactionskin <factionid> <skinid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Director{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:checkfactionskins(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][FactionModerator] >= 2) {
				new factionid;
				if (!sscanf(params, "i", factionid)) {
					if(factionid != 0){
						if(LastFactionID[factionid] == 1){
							new largequery[144];
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `factions_skins` WHERE `faction_id` = %i", factionid);
							mysql_query(MySQL, largequery);
							format(message, sizeof(message), "{%s}%s{FFFFFF}(%i) has %i skins!", FactionInfo[factionid][FactionColor], FactionInfo[factionid][FactionLongName], factionid, cache_num_rows());
							ClientMessenger(playerid, "FF0000", 1, message);
							if(cache_num_rows() != 0){
								for (new a = 1; a <= cache_num_rows(); a++) {
									if(a != cache_num_rows()) {
										format(message, sizeof(message), "[%i]%i - %s(%i)\n", a, cache_get_field_content_int(a-1, "skin_id"), AllFactionRanks[cache_get_field_content_int(a-1, "faction_id")][cache_get_field_content_int(a-1, "rank_id")], cache_get_field_content_int(a-1, "rank_id"));
										strcat(ReadAllMessages[playerid], message);
									} else if(a == cache_num_rows()) {
										format(message, sizeof(message), "[%i]%i - %s(%i)", a, cache_get_field_content_int(a-1, "skin_id"), AllFactionRanks[cache_get_field_content_int(a-1, "faction_id")][cache_get_field_content_int(a-1, "rank_id")], cache_get_field_content_int(a-1, "rank_id"));
										strcat(ReadAllMessages[playerid], message);
									}
								}
								ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, FactionInfo[factionid][FactionLongName], ReadAllMessages[playerid], "Done", "");
								ReadAllMessages[playerid][0] = '\0';
							} else {
								ClientMessenger(playerid, "FF0000", 1, "This faction has no skins! (Which is an issue!)");
							}
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "Not a valid faction!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid faction!");
					}   
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/checkfactionskins <factionid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Director{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:addfactionskin(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][FactionModerator] >= 2) {
				new factionid, rankid, skinid;
				if (!sscanf(params, "iii", factionid, rankid, skinid)) {
					if(factionid != 0){
						if(rankid <= MAX_FACTIONS_RANKS && rankid > 0){
							if(skinid <= 311 && skinid > 0){
								if(LastFactionID[factionid] == 1){
									new largequery[200];
									mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `factions_skins` WHERE `skin_id` = %i AND `faction_id` = %i LIMIT 1", skinid, factionid);
									mysql_query(MySQL, largequery);
									if(cache_num_rows() != 1){
										mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `factions_skins` ( `skin_id`, `rank_id`, `faction_id`) VALUES ('%i', '%i', '%i')", skinid, rankid, factionid);
										mysql_query(MySQL, largequery);
										format(message, sizeof(message), "%s has added a new skin(%i) for %s to {%s}%s(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), skinid, AllFactionRanks[factionid][rankid], FactionInfo[factionid][FactionColor], FactionInfo[factionid][FactionShortName], factionid);
										ClientMessenger(playerid, "FF0000", 4, message);
									} else {
										ClientMessenger(playerid, "FF0000", 1, "Skin already exists for this faction!");
									}
									largequery[0] = '\0';
								} else {
									ClientMessenger(playerid, "FF0000", 1, "Not a valid faction!");
								}
							} else {
								format(message, sizeof(message), "Skin ID 1 through 311 are the only avilable skin id!");
								ClientMessenger(playerid, "FF0000", 1, message);
							}
						} else {
							format(message, sizeof(message), "There are only 1 - %i ranks available!", MAX_FACTIONS_RANKS);
							ClientMessenger(playerid, "FF0000", 1, message);
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid faction!");
					}   
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/addfactionskin <factionid> <rankid> <skinid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Director{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:setweather(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4) {
				new weatherid, targetid;
				if (!sscanf(params, "iu", weatherid, targetid)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1){
							format(message, sizeof(message), "%s has set the weather for %s to %i", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)), weatherid);
							ClientMessenger(playerid, "FF0000", 4, message);
							format(message, sizeof(message), "%s has set your weather to %i", str_replace("_", " ", GetPlayerNameEx(playerid)), weatherid);
							ClientMessenger(targetid, "FFFF00", 3, message);
							SetPlayerWeather(targetid, weatherid);
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else if (!sscanf(params, "i", weatherid)) {
					format(message, sizeof(message), "%s has set the weather for everyone to %i", str_replace("_", " ", GetPlayerNameEx(playerid)), weatherid);
					ClientMessenger(playerid, "FF0000", 4, message);
					format(message, sizeof(message), "%s has set everyones weather to %i", str_replace("_", " ", GetPlayerNameEx(playerid)), weatherid);
					foreach(Player, i)
					{
						ClientMessenger(i, "FFFF00", 3, message);
					}
					SetWeather(weatherid);
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/setweather <weatherid> <player(optional)");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:makeleader(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][FactionModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][FactionModerator] >= 1) {
				new factionid, targetid;
				if (!sscanf(params, "ui", targetid, factionid)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1){
							new largequery[300];
							if(LastFactionID[factionid] == 1){
								mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `factions_ranks` WHERE `faction_id` = %i ORDER BY `rank_id`", factionid);
								mysql_query(MySQL, largequery);
								new count = 0;
								new getrankname[50];
								for(new a = 0; a < cache_num_rows(); a++)
								{
									cache_get_field_content(a, "rank_name", getrankname);
									if(strcmp(getrankname, "nil")){
										count = (count + 1);
									}
									getrankname[0] = '\0';
								}
								if(count != 0){
									format(message, sizeof(message), "%s has made %s leader of {%s}%s{FFFFFF}", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)), FactionInfo[factionid][FactionColor], FactionInfo[factionid][FactionShortName]);
									ClientMessenger(playerid, "FF0000", 4, message);
									PlayerInfo[targetid][Faction] = factionid;
									PlayerInfo[targetid][FactionLevel] = count;
									PlayerInfo[targetid][FactionLeader] = 1;
									PlayerInfo[targetid][TempInfo][23] = 0;
									format(message, sizeof(message), "You have been given leader(%s) of {%s}%s{FFFFFF} by %s", AllFactionRanks[factionid][count], FactionInfo[factionid][FactionColor], FactionInfo[factionid][FactionShortName], str_replace("_", " ", GetPlayerNameEx(playerid)));
									ClientMessenger(targetid, "FFFFFF", 3, message);
									mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `faction` = %i, `faction_level` = %i, `faction_leader` = 1 WHERE `id` = %i", factionid, count, PlayerInfo[targetid][DBID]);
									mysql_query(MySQL, largequery);
									SetPlayerFactionColor(playerid);
								} else {
									ClientMessenger(playerid, "FF0000", 1, "That faction does not have any ranks.");
								}
							} else if(factionid == 0){
								if(PlayerInfo[targetid][Faction] != 0){
									format(message, sizeof(message), "%s has removed leadership from %s of {%s}%s{FFFFFF}", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)), FactionInfo[PlayerInfo[targetid][Faction]][FactionColor], FactionInfo[PlayerInfo[targetid][Faction]][FactionShortName]);
									ClientMessenger(playerid, "FF0000", 4, message);
									format(message, sizeof(message), "You have been been removed from {%s}%s{FFFFFF} by %s", FactionInfo[PlayerInfo[targetid][Faction]][FactionColor], FactionInfo[PlayerInfo[targetid][Faction]][FactionShortName], str_replace("_", " ", GetPlayerNameEx(playerid)));
									ClientMessenger(targetid, "FFFFFF", 3, message);
									PlayerInfo[targetid][Faction] = 0;
									PlayerInfo[targetid][FactionLevel] = 0;
									PlayerInfo[targetid][FactionLeader] = 0;
									PlayerInfo[targetid][TempInfo][23] = 0;
									PlayerInfo[targetid][Skin] = 299;
									SetPlayerSkin(targetid, 299);
									mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `faction` = 0, `faction_level` = 0, `faction_leader` = 0, `faction_duty` = 0, `skin` = 299 WHERE `id` = %i", PlayerInfo[targetid][DBID]);
									mysql_query(MySQL, largequery);
									SetPlayerFactionColor(playerid);
								} else {
									ClientMessenger(playerid, "FF0000", 1, "This person isn't part of a faction to remove from.");
								}
							} else {
								ClientMessenger(playerid, "FF0000", 1, "That faction does not exist!");
							}
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/makeleader <playername/playerid> <factionid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Moderator{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

SaidMDC(playerid)
{
	new message[144];
	format(message, sizeof(message), "{%s}%s MDC", FactionInfo[PlayerInfo[playerid][Faction]][FactionColor],FactionInfo[PlayerInfo[playerid][Faction]][FactionLongName]);
	ShowPlayerDialog(playerid, 40, DIALOG_STYLE_TABLIST_HEADERS, message, "Information\nCriminal Database Search\nWarrants\nIdentifcation Searcher\nLicenceplate Searcher\nStreet Camera View\nDepartments", "Select", "Cancel");
	message[0] = '\0';
}

COMMAND:psa(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) {
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][6] == 1) {
				if(AllFactionRanksPermissions[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]][6] == 1) {
					new psamessage[200];
					if (!sscanf(params, "s[144]", psamessage)) {
						new message[144];
						foreach(Player, i)
						{
							if(PlayerInfo[i][Online] == 1){
								format(message, sizeof(message), "{%s}~~ [%s] Public Service Announcements ~~", FactionInfo[PlayerInfo[playerid][Faction]][FactionColor], FactionInfo[PlayerInfo[playerid][Faction]][FactionShortName]);
								ClientMessenger(i, "FFFFFF", 3, message);
								format(message, sizeof(message), "{%s} %s %s: %s", FactionInfo[PlayerInfo[playerid][Faction]][FactionColor], AllFactionRanks[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]], str_replace("_", " ", GetPlayerNameEx(playerid)), psamessage);
								ClientMessenger(i, "FFFFFF", 3, message);
							}
						}
						message[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 5, "/psa <message>");
					}
					psamessage[0] = '\0';
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can't do this at your rank!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:mdc(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) {
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][4] == 1) {
				if(AllFactionRanksPermissions[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]][4] != 0) {
					if(IsPlayerInAnyVehicle(playerid) == 1 || GetPlayerInterior(playerid) != 0){
						new fixmdc = 0;
						for(new a = 0; a < sizeof(InteriorInfo); a++) {
							if(GetPlayerVirtualWorld(playerid) == InteriorInfo[a][IntEndWorld] && GetPlayerInterior(playerid) == InteriorInfo[a][IntEndInt]){
								new pfid = PlayerInfo[playerid][Faction];
								new fid1 = InteriorInfo[a][IntFaction];
								new fid2 = InteriorInfo[a][IntFaction2];
								new fid3 = InteriorInfo[a][IntFaction3];
								if(pfid == fid1 && FactionInfo[pfid][FactionPermissions][4] == 1 && fid1 != 0 || pfid == fid2 && FactionInfo[pfid][FactionPermissions][4] == 1 && fid2 != 0 || pfid == fid3 && FactionInfo[pfid][FactionPermissions][4] == 1 && fid3 != 0) {
									SaidMDC(playerid);
									new message[144];
									format(message, sizeof(message), "{C2A2DA}* %s logs into their mdc", str_replace("_", " ", GetPlayerNameEx(playerid)));
									ActionMessager(playerid, 25, message);
									message[0] = '\0';
									fixmdc = 1;
									break;
								}
							}
						}
						if(fixmdc == 0) {
							if(FactionInfo[Vehicles[GetPlayerVehicleID(playerid)][Faction]][FactionPermissions][4] == 1){
								if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][4] == 1){
									SaidMDC(playerid);
									new message[144];
									format(message, sizeof(message), "{C2A2DA}* %s logs into their mdc", str_replace("_", " ", GetPlayerNameEx(playerid)));
									ActionMessager(playerid, 25, message);
									message[0] = '\0';
								}
							} else {
								ClientMessenger(playerid, "FFFFFF", 2, "* You are not in a vehicle or interior that can view the mdc! *");
							}
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 2, "* You are not in a vehicle or interior that can view the mdc! *");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can't do this at your rank!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:statetressury(playerid, params[]) 
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) {
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][8] == 1) {
				if(AllFactionRanksPermissions[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]][8] != 0) {
					new widrpamt;
					new message[144];
					if (!sscanf(params, "i", widrpamt)) {
						if((TaxMoney - widrpamt) >= 0){
							if(widrpamt >= 1){
								if(IsPlayerInRangeOfPoint(playerid, 7, 2144, 1635, 993) && GetPlayerVirtualWorld(playerid) == 15464 && GetPlayerInterior(playerid) == 1) {
									new largequery[250];
									TaxMoney = (TaxMoney - widrpamt);
									format(message, sizeof(message), "You have withdrew $%i from the state tressury. The remaining tressury total is: $%i", widrpamt, TaxMoney);
									ClientMessenger(playerid, "FFFFFF", 3, message);
									
									ResetPlayerMoney(playerid);
									PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] + widrpamt);
									GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
									
									foreach(Player, i)
									{
										if(PlayerInfo[i][Faction] == PlayerInfo[playerid][Faction]){
											format(message, sizeof(message), "%s %s has taken out %i from the tressury. Only %i remains in the tressury!", AllFactionRanks[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]], str_replace("_", " ", GetPlayerNameEx(playerid)), widrpamt, TaxMoney);
											ClientMessenger(i, "FFFF00", 3, message);
										}
									}
									
									mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
									mysql_query(MySQL, largequery);
									mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `tax_percentage` SET `treassury`=%i WHERE `id` = 1 LIMIT 1", TaxMoney);
									mysql_query(MySQL, largequery);
									largequery[0] = '\0';
								} else {
									ClientMessenger(playerid, "FF0000", 1, "You're are either not in the vault, or not in the correct location!");
								}
							} else {
								ClientMessenger(playerid, "FF0000", 2, "You need to withdraw at least one dollar or more!");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 2, "You can not withdraw more money then the tressury has!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 5, "/statetressury <money>");
						format(message, sizeof(message), "Currently, the tressury has: $%i", TaxMoney);
						ClientMessenger(playerid, "FFFF00", 3, message);
						ClientMessenger(playerid, "FF0000", 2, "Once you take money out of the tressury, you can not put it back in!");
						message[0] = '\0';
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can't do this at your rank!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


// BEGINNING OF BANK

/*
stock AddingBankFeatures()
{
	new LSBank, LSBankQuestion, Text3D:LSBankInfo;
	
	LSBank = CreateDynamicMapIcon(1459.0, -1010.0, 26.0, 52, -1, 0, 0, -1, 250.0, MAPICON_GLOBAL, -1);
	LSBankQuestion = CreateDynamicPickup(1239, 23, 2316.0, -7.0, 26.0, 67776, 0, -1, 20, -1);
	LSBankInfo = CreateDynamic3DTextLabel("/withdraw\n/deposit", -1, 2316.0, -7.0, 26.0, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 67776, 0, -1, -1, -1);
}

AddingBankFeatures;
*/

COMMAND:withdraw(playerid, params[]) 
{
	if(PlayerInfo[playerid][Online] == 1) {
		new widrpamt;
		if (!sscanf(params, "i", widrpamt)) {
			if((PlayerInfo[playerid][BankMoney] - widrpamt) >= 0){
				if(widrpamt >= 1){
					if(IsPlayerInRangeOfPoint(playerid, 2.5, 2316, -7, 26) && GetPlayerVirtualWorld(playerid) == 67776 && GetPlayerInterior(playerid) == 0) {
						new message[144], largequery[250];
						ResetPlayerMoney(playerid);
						PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] + widrpamt);
						GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
						PlayerInfo[playerid][BankMoney] = (PlayerInfo[playerid][BankMoney] - widrpamt);
						format(message, sizeof(message), "You have withdrew $%i from your bank. Your new bank total is: $%i", widrpamt, PlayerInfo[playerid][BankMoney]);
						ClientMessenger(playerid, "FFFFFF", 3, message);
						
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `bank`=%i, `money`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][BankMoney], PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
						mysql_query(MySQL, largequery);
						largequery[0] = '\0';
						message[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "You're either not in a bank, or not in the correct location to withdraw your money!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 2, "You need to withdraw at least one dollar or more!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 2, "You can not withdraw more money then you have!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 5, "/withdraw <money>");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:deposit(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new despamt;
		if (!sscanf(params, "i", despamt)) {
			if((PlayerInfo[playerid][Money] - despamt) >= 0){
				if(despamt >= 1){
					if(IsPlayerInRangeOfPoint(playerid, 2.5, 2316, -7, 26) && GetPlayerVirtualWorld(playerid) == 67776 && GetPlayerInterior(playerid) == 0) {
						new message[144], largequery[250];
						ResetPlayerMoney(playerid);
						PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - despamt);
						GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
						PlayerInfo[playerid][BankMoney] = (PlayerInfo[playerid][BankMoney] + despamt);
						format(message, sizeof(message), "You have deposited $%i into your bank. Your new bank total is: $%i", despamt, PlayerInfo[playerid][BankMoney]);
						ClientMessenger(playerid, "FFFFFF", 3, message);
						
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `bank`=%i, `money`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][BankMoney], PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
						mysql_query(MySQL, largequery);
						largequery[0] = '\0';
						message[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "You're either not in a bank, or not in the correct location to deposit your money!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 2, "You need to deposit at least one dollar or more!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 2, "You can not deposit more money then you have!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 5, "/deposit <money>");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
// END BEGINNING OF BANK


COMMAND:settaxpercentage(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) {
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][9] != 0) {
				if(AllFactionRanksPermissions[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]][9] != 0) {
					new Float:taxpercent;
					if (!sscanf(params, "f", taxpercent)) {
						if(taxpercent <= (0.9) && taxpercent >= (0.01)){
							new message[144], largequery[144];
							foreach(Player, i)
							{
								format(message, sizeof(message), "[NEWS] %s has changed the state tax percentage from %f to %f!", str_replace("_", " ", GetPlayerNameEx(playerid)), TaxPercentage, taxpercent);
								ClientMessenger(i, "FFFFFF", 3, message);
							}
							
							TaxPercentage = taxpercent;
							mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `tax_percentage` SET `percentage`='%f' WHERE `id` = 1 LIMIT 1", taxpercent);
							mysql_query(MySQL, largequery);
							largequery[0] = '\0';
							message[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 2, "It must be under 0.9 percent, and above 0.01 percent!");
						}
					} else {
					ClientMessenger(playerid, "FF0000", 5, "/settaxpercentage <0.9 - 0.1>");
				}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can't do this at your rank!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:deployroadspike(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][Faction] != 0) {
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][2] != 0) {
				if(AllFactionRanksPermissions[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]][2] != 0) {
					if(!IsPlayerInAnyVehicle(playerid)) {
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						GetPlayerFacingAngle(playerid, PlayerInfo[playerid][FacingAngle]);
						PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
						PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
						new getall = sizeof(LastRoadBlockID);
						for(new x = 1; x < sizeof(LastRoadBlockID); x++){
							if(LastRoadBlockID[x] == 0){
								getall = getall-1;
							}
						}
						if(getall != sizeof(LastRoadBlockID)){
							for(new w = 1; w < sizeof(LastRoadBlockID); w++){
								if(LastRoadBlockID[w] == 0){
									new message[144];
									format(message, sizeof(message), "* You have made a roadspide %i out of %i *", getall, (sizeof(LastRoadBlockID)-1));
									ClientMessenger(playerid, "FFFFFF", 3, message);
									LastRoadBlockID[w] = 1;
									RoadBlocks[w][RBX] = PlayerInfo[playerid][PosX];
									RoadBlocks[w][RBY] = PlayerInfo[playerid][PosY];
									RoadBlocks[w][RBZ] = PlayerInfo[playerid][PosZ];
									RoadBlocks[w][RBA] = PlayerInfo[playerid][FacingAngle];
									RoadBlocks[w][RBWorld] = PlayerInfo[playerid][WorldID];
									RoadBlocks[w][RBInt] = PlayerInfo[playerid][InteriorID];
									ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 1, 0, 0, 0, 0, 2000, 1);
									ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 1, 0, 0, 0, 0, 2000, 1);
									format(RoadBlocks[w][RBTempText], 75, "{00FFFF}%s Barricade{FFFFFF}", FactionInfo[PlayerInfo[playerid][Faction]][FactionLongName]);
									RoadBlocks[w][RBText] = CreateDynamic3DTextLabel(RoadBlocks[w][RBTempText], -1, RoadBlocks[w][RBX], RoadBlocks[w][RBY], (RoadBlocks[w][RBZ]-0.5), 4.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, RoadBlocks[w][RBWorld], RoadBlocks[w][RBInt], -1);
									RoadBlocks[w][RBIcon] = CreateDynamicPickup(2892, 14, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], (RoadBlocks[w][RBZ]-0.5), PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], -1);
									message[0] = '\0';
									break;
								}
							}
						} else {
							ClientMessenger(playerid, "FFFFFF", 1, "You can't deploy a roadblock while in a vehicle!");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 2, "* The road block limit has been reached! *");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can't do this at your rank!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
				
COMMAND:deployroadblock(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) {
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][2] != 0) {
				if(AllFactionRanksPermissions[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]][2] != 0) {
					if(!IsPlayerInAnyVehicle(playerid)) {
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						GetPlayerFacingAngle(playerid, PlayerInfo[playerid][FacingAngle]);
						PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
						PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
						new getall = sizeof(LastRoadBlockID);
						for(new x = 1; x < sizeof(LastRoadBlockID); x++){
							if(LastRoadBlockID[x] == 0){
								getall = getall-1;
							}
						}
						if(getall != sizeof(LastRoadBlockID)){
							for(new w = 1; w < sizeof(LastRoadBlockID); w++){
								if(LastRoadBlockID[w] == 0){
									new message[144];
									format(message, sizeof(message), "* You have made roadblock %i out of %i *", getall, (sizeof(LastRoadBlockID)-1));
									ClientMessenger(playerid, "FFFFFF", 3, message);
									LastRoadBlockID[w] = 1;
									RoadBlocks[w][RBX] = PlayerInfo[playerid][PosX];
									RoadBlocks[w][RBY] = PlayerInfo[playerid][PosY];
									RoadBlocks[w][RBZ] = PlayerInfo[playerid][PosZ];
									RoadBlocks[w][RBA] = PlayerInfo[playerid][FacingAngle];
									RoadBlocks[w][RBWorld] = PlayerInfo[playerid][WorldID];
									RoadBlocks[w][RBInt] = PlayerInfo[playerid][InteriorID];
									ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 1, 0, 0, 0, 0, 2000, 1);
									ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 1, 0, 0, 0, 0, 2000, 1);
									format(RoadBlocks[w][RBTempText], 75, "{00FFFF}%s Barricade{FFFFFF}", FactionInfo[PlayerInfo[playerid][Faction]][FactionLongName]);
									RoadBlocks[w][RBText] = CreateDynamic3DTextLabel(RoadBlocks[w][RBTempText], -1, RoadBlocks[w][RBX], RoadBlocks[w][RBY], (RoadBlocks[w][RBZ]-0.5), 4.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, RoadBlocks[w][RBWorld], RoadBlocks[w][RBInt], -1);
									RoadBlocks[w][RBIcon] = CreateDynamicObject(3578, RoadBlocks[w][RBX], RoadBlocks[w][RBY], (RoadBlocks[w][RBZ]-0.5), 0, 0, RoadBlocks[w][RBA], RoadBlocks[w][RBWorld], RoadBlocks[w][RBInt], -1, 150);
									message[0] = '\0';
									break;
								}
							}
						} else {
							ClientMessenger(playerid, "FFFFFF", 1, "You can't deploy a roadblock while in a vehicle!");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 2, "* The road block limit has been reached! *");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can't do this at your rank!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:deleteroadblock(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][Faction] != 0) {
			if(FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][2] != 0) {
				if(AllFactionRanksPermissions[PlayerInfo[playerid][Faction]][PlayerInfo[playerid][FactionLevel]][2] != 0) {
					new message[144], listed = 0;
					for(new a = 1; a < sizeof(RoadBlocks); a++){
						if(IsPlayerInRangeOfPoint(playerid, 1, RoadBlocks[a][RBX], RoadBlocks[a][RBY], RoadBlocks[a][RBZ]) && RoadBlocks[a][RBWorld] == GetPlayerVirtualWorld(playerid)){
							LastRoadBlockID[a] = 0;
							RoadBlocks[a][RBX] = 0;
							RoadBlocks[a][RBY] = 0;
							RoadBlocks[a][RBZ] = 0;
							RoadBlocks[a][RBA] = 0;
							RoadBlocks[a][RBWorld] = -1;
							RoadBlocks[a][RBInt] = 0;
							ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 1, 0, 0, 0, 0, 2000, 1);
							DestroyDynamicObject(RoadBlocks[a][RBIcon]);
							DestroyDynamic3DTextLabel(RoadBlocks[a][RBText]);
							
							new getall = sizeof(LastRoadBlockID);
							for(new x = 1; x < sizeof(LastRoadBlockID); x++){
								if(LastRoadBlockID[x] == 0){
									getall = getall-1;
								}
							}
							format(message, sizeof(message), "* You have deleted roadblock %i out of %i *", getall, (sizeof(LastRoadBlockID)-1));
							ClientMessenger(playerid, "FFFFFF", 3, message);
							listed = 1;
						}
					}
					if(listed == 0) {
						ClientMessenger(playerid, "FFFFFF", 2, "You currently are not near any roadblocks!");
					}
					message[0] = '\0';
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can't do this at your rank!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Your faction can not do this!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:quitfaction(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new message[144], largequery[256];
		if(PlayerInfo[playerid][Faction] != 0 && FactionInfo[PlayerInfo[playerid][Faction]][FactionPermissions][11] == 0) {
			new quitfconfirm[8];
			if (!sscanf(params, "s[8]", quitfconfirm)) {
				if(!strcmp(quitfconfirm, "confirm")){
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `faction` = 0, `faction_level` = 0, `faction_leader` = 0, `faction_duty` = 0, `skin` = 299 WHERE `id` = %i", PlayerInfo[playerid][DBID]);
					mysql_query(MySQL, largequery);
					format(message, sizeof(message), "** You have quit the {%s}%s{FFFFFF} **", FactionInfo[PlayerInfo[playerid][Faction]][FactionColor], FactionInfo[PlayerInfo[playerid][Faction]][FactionShortName]);
					ClientMessenger(playerid, "FFFFFF", 3, message);
					
					PlayerInfo[playerid][Faction] = 0;
					PlayerInfo[playerid][FakeFaction] = 0;
					PlayerInfo[playerid][FakeFactionLevel] = 0;
					PlayerInfo[playerid][FactionLeader] = 0;
					PlayerInfo[playerid][TempInfo][23] = 0;
					PlayerInfo[playerid][FactionLevel] = 0;
					PlayerInfo[playerid][Skin] = 299;
					SetPlayerSkin(playerid, 299);
					SetPlayerFactionColor(playerid);
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You did not type confirm correctly!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 5, "/quitfaction confirm");
			}
			quitfconfirm[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
		message[0] = '\0';
		largequery[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:uninvite(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new targetid, message[144], largequery[256];
		if(PlayerInfo[playerid][Faction] != 0) {
			if(PlayerInfo[playerid][FactionLeader] == 1) {
				if (!sscanf(params, "u", targetid)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1) {
							if(targetid != playerid) {
								if(PlayerInfo[targetid][Faction] == PlayerInfo[playerid][Faction]) {
									if(PlayerInfo[targetid][FactionLeader] != 1) {
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `faction` = 0, `faction_level` = 0, `faction_leader` = 0, `faction_duty` = 0, `skin` = 299 WHERE `id` = %i", PlayerInfo[targetid][DBID]);
										mysql_query(MySQL, largequery);
										if(PlayerInfo[targetid][Faction] != 0){
											format(message, sizeof(message), "** You have uninvited %s from {%s}%s{FFFFFF} **", str_replace("_", " ", GetPlayerNameEx(targetid)), FactionInfo[PlayerInfo[targetid][Faction]][FactionColor], FactionInfo[PlayerInfo[targetid][Faction]][FactionShortName]);
											ClientMessenger(playerid, "FFFFFF", 3, message);
											format(message, sizeof(message), "** You have been uninvited from {%s}%s{FFFFFF} by %s **", FactionInfo[PlayerInfo[targetid][Faction]][FactionColor], FactionInfo[PlayerInfo[targetid][Faction]][FactionShortName], str_replace("_", " ", GetPlayerNameEx(playerid)));
											ClientMessenger(targetid, "FFFFFF", 3, message);
										}
										
										PlayerInfo[targetid][Faction] = 0;
										PlayerInfo[targetid][FakeFaction] = 0;
										PlayerInfo[playerid][FakeFactionLevel] = 0;
										PlayerInfo[targetid][FactionLeader] = 0;
										PlayerInfo[targetid][TempInfo][23] = 0;
										PlayerInfo[targetid][FactionLevel] = 0;
										PlayerInfo[targetid][Skin] = 299;
										SetPlayerFactionColor(playerid);
										SetPlayerSkin(targetid, 299);
									} else {
										ClientMessenger(playerid, "FF0000", 1, "You can not kick out a faction leader. You must have a faction moderator remove them, or have them /quitfaction!");
									}
								} else {
									ClientMessenger(playerid, "FF0000", 1, "That person is not in a faction or the same faction as you!");
								}
							} else {
								ClientMessenger(playerid, "FF0000", 1, "You can not uninvite yourself. /quitfaction instead!");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/uninvite <playerid/playername>");
				}
			} else {
				format(message, sizeof(message), "* You are not a faction leader for {%s}%s *", FactionInfo[PlayerInfo[playerid][Faction]][FactionColor], FactionInfo[PlayerInfo[playerid][Faction]][FactionShortName]);
				ClientMessenger(playerid, "FFFFFF", 3, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
		message[0] = '\0';
		largequery[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
	
COMMAND:checkfaction(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[200];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 2) {
				new factionid;
				if (!sscanf(params, "i", factionid)) {
					if(factionid != 0){
						if(LastFactionID[factionid] == 1){
							new message2[64], largequery[144];
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `faction` = %i", factionid);
							mysql_query(MySQL, largequery);
							format(message2, sizeof(message2), "{%s}%s", FactionInfo[factionid][FactionColor], FactionInfo[factionid][FactionLongName]);
							format(message, sizeof(message), "{FFFFFF}The {%s}%s{FFFFFF} has {FFFF00}%i{FFFFFF} members in it.\nTheir leaders are:\n",FactionInfo[factionid][FactionColor], FactionInfo[factionid][FactionLongName], cache_num_rows());
							strcat(ReadAllMessages[playerid], message);
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `faction` = %i AND `faction_leader` = 1", factionid);
							mysql_query(MySQL, largequery);
							for (new a = 0; a < cache_num_rows(); a++) {
							new tempname[MAX_PLAYER_NAME+1];
							cache_get_field_content(a, "name", tempname);
							format(message, sizeof(message), "%s\n",str_replace("_", " ", tempname));
							strcat(ReadAllMessages[playerid], message);
							}
							format(message, sizeof(message), "\nThe following members are online:\n");
							strcat(ReadAllMessages[playerid], message);
							foreach(Player, i)
							{
								if(PlayerInfo[i][Online] == 1) {
									if(factionid == PlayerInfo[i][Faction]) {
										format(message, sizeof(message), "%s(%i) - %s(%i)[%i]\n", AllFactionRanks[PlayerInfo[i][Faction]][PlayerInfo[i][FactionLevel]], PlayerInfo[i][FactionLevel], str_replace("_", " ", GetPlayerNameEx(i)), i, PlayerInfo[i][DBID]);
										strcat(ReadAllMessages[playerid], message);
									} else if(factionid == PlayerInfo[i][FakeFaction]) {
										format(message, sizeof(message), "%s(%i) - %s(%i)[%i] ~ {FF0000}[Fake Member- %s(%i) - %s]\n", AllFactionRanks[PlayerInfo[i][FakeFaction]][PlayerInfo[i][FakeFactionLevel]], PlayerInfo[i][FakeFactionLevel], str_replace("_", " ", GetPlayerNameEx(i)), i, PlayerInfo[i][DBID], AllFactionRanks[PlayerInfo[i][Faction]][PlayerInfo[i][FactionLevel]], PlayerInfo[i][FactionLevel], FactionInfo[PlayerInfo[i][Faction]][FactionShortName]);
										strcat(ReadAllMessages[playerid], message);
									}
								}
							}
							ShowPlayerDialog(playerid, 99, DIALOG_STYLE_MSGBOX, message2, ReadAllMessages[playerid], "Close", "");
							message2[0] = '\0';
							ReadAllMessages[playerid][0] = '\0';
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "Not a valid faction!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid faction!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/checkfaction <factionid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Director{FFFFFF} to use this command!", GetAdminRanksC(2), GetAdminRanks(2));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
	
COMMAND:deletefaction(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][FactionModerator] >= 2) {
			if(PlayerInfo[playerid][Admin] >= 6 || PlayerInfo[playerid][FactionModerator] >= 2) {
				new factionid, factiondelcon[8];
				if (!sscanf(params, "i", factionid)) {
					if(factionid != 0){
						if (!sscanf(params, "is[8]", factionid, factiondelcon)) {
							if(!strcmp(factiondelcon,"confirm")){
								if(LastFactionID[factionid] == 1){
									new largequery[256];
									mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `factions_locker_items` WHERE `faction_id`=%i", factionid);
									mysql_query(MySQL, largequery);
									for(new q = 1; q <= MAX_FACTIONS_RANKS; q++)
									{
										for(new d = 1; d <= MAX_FACTIONS_LOCKERS_ITEMS; d++)
										{
											LastFactionLockerItemsID[factionid][q][d] = 0;
										}
									}
									
									mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `factions_locker` WHERE `faction_id`=%i", factionid);
									mysql_query(MySQL, largequery);
									for(new b = 1; b <= MAX_FACTIONS_LOCKERS; b++)
									{
										if(FactionLockerInfo[b][FLFaction] == factionid){
											LastFactionLockerID[b] = 0;
											DestroyDynamicPickup(FactionLockerInfo[b][FLIcon]);
											DestroyDynamic3DTextLabel(FactionLockerInfo[b][FLText]);
										}
									}
									
									for(new h = 1; h <= MAX_ARREST_POINTS; h++)
									{
										if(ArrestPointInfo[h][APFaction] == factionid){
											LastArrestPointID[h] = 0;
											DestroyDynamicPickup(ArrestPointInfo[h][APIconStart]);
											DestroyDynamic3DTextLabel(ArrestPointInfo[h][APTextStart]);
											DestroyDynamicPickup(ArrestPointInfo[h][APIconEnd]);
											
											mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `arrestpointzones` WHERE `arrestid` = %i", h);
											mysql_query(MySQL, largequery);
											if(cache_num_rows() >= 1){
												for(new l = 0; l < cache_num_rows(); l++){
													DestroyDynamic3DTextLabel(ArrestPointZonesInfo[cache_get_field_content_int(l, "id")][APZText]);
													LastArrestPointZoneID[cache_get_field_content_int(l, "id")] = 0;
												}
											}
											mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `arrestpoints` WHERE `id` = %i", h);
											mysql_query(MySQL, largequery);
											mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `arrestpointzones` WHERE `arrestid` = %i", h);
											mysql_query(MySQL, largequery);
										}
									}
									
									mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `factions_ranks` WHERE `faction_id`=%i", factionid);
									mysql_query(MySQL, largequery);
									mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `factions_skins` WHERE `faction_id`=%i", factionid);
									mysql_query(MySQL, largequery);
									mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `factions` WHERE `id`=%i", factionid);
									mysql_query(MySQL, largequery);
									foreach(Player, i)
									{
										if(PlayerInfo[i][Faction] == factionid) {
											PlayerInfo[i][Faction] = 0;
											PlayerInfo[i][FactionLeader] = 0;
											PlayerInfo[i][FactionLevel] = 0;
											SetPlayerSkin(i, 299);
											PlayerInfo[i][Skin] = 299;
											mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `faction` = 0, `faction_level` = 0, `faction_leader` = 0, `skin` = 299 WHERE `id` = %i", PlayerInfo[playerid][DBID]);
											mysql_query(MySQL, largequery);
											ClientMessenger(playerid, "FF0000", 1, "Your faction has been deleted, so you've been removed from it. Sorry!");
										}
									}
									mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `faction` = 0, `faction_level` = 0, `faction_leader` = 0, `skin` = 299 WHERE `faction` = %i", factionid);
									mysql_query(MySQL, largequery);
									
									
									format(message, sizeof(message), "%s has deleted faction: {%s}%s{FFFFFF}(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[factionid][FactionColor], FactionInfo[factionid][FactionShortName], factionid);
									ClientMessenger(playerid, "FF0000", 4, message);
									LastFactionID[factionid] = 0;
									for(new b = 1; b <= MAX_FACTIONS_RANK_PERMISSIONS; b++){
										FactionInfo[factionid][FactionPermissions][b] = 0;
									}
									for(new g = 1; g <= MAX_FACTIONS_RANKS; g++)
									{
										format(AllFactionRanks[factionid][g], 51, "nil");
									}
									FactionInfo[factionid][FactionLongName] = '\0';
									FactionInfo[factionid][FactionShortName] = '\0';
									FactionInfo[factionid][FactionColor] = '\0';
									largequery[0] = '\0';
								} else {
									ClientMessenger(playerid, "FF0000", 1, "Not a valid faction!");
								}   
							} else {
								ClientMessenger(playerid, "FF0000", 1, "You did not type confirm correctly!");
							}
						} else {
							format(message, sizeof(message), "Are you sure you want to delete faction {%s}%s{FFFFFF}?", FactionInfo[factionid][FactionColor], FactionInfo[factionid][FactionLongName]);
							ClientMessenger(playerid, "FF0000", 1, message);
							format(message, sizeof(message), "Type /deletefaction %i confirm", factionid);
							ClientMessenger(playerid, "FFFFFF", 3, message);
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid faction!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/deletefaction <factionid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Director{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}   
	
COMMAND:makefaction(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][FactionModerator] >= 2) {
			if(PlayerInfo[playerid][Admin] >= 6 || PlayerInfo[playerid][FactionModerator] >= 2) {
				new fln[51], fsn[11], fc[10];
				if (!sscanf(params, "s[51]s[11]s[10]", fln, fsn, fc)) {
					new getall = sizeof(LastFactionID);
					for(new x = 1; x < sizeof(LastFactionID); x++){
						if(LastFactionID[x] == 0){
							getall = getall-1;
						}
					}
					if(getall != sizeof(LastFactionID)){
						for(new w = 1; w < sizeof(LastFactionID); w++){
							if(LastFactionID[w] == 0){
								TotalFactions = TotalFactions + 1;
								format(message, sizeof(message), "%s has made faction(%i) {%s}%s{FFFFFF} (%s)", str_replace("_", " ", GetPlayerNameEx(playerid)), w, fc, fln, fsn);
								ClientMessenger(playerid, "FF0000", 4, message);
								
								format(fln, sizeof(fln), "%s", str_replace("_", " ", fln));
								
								LastFactionID[w] = 1;
								format(FactionInfo[w][FactionLongName], 51, fln);
								format(FactionInfo[w][FactionShortName], 11, fsn);
								format(FactionInfo[w][FactionColor], 10, fc);
								
								new largequery[500];

								for(new g = 1; g <= MAX_FACTIONS_RANKS; g++)
								{
									format(AllFactionRanks[w][g], 51, "nil");
									for(new n = 1; n <= MAX_FACTIONS_RANK_PERMISSIONS; n++){
										AllFactionRanksPermissions[w][g][n] = 0;
									}
									mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `factions_ranks` (`rank_name`,`rank_id`,`faction_id`, `department_radio`) VALUES ('nil', '%i', '%i', '0')", g, w);
									mysql_query(MySQL, largequery);
								}
								
								mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `factions` (`id`,`factionlongname`,`factionshortname`,`factioncolor`) VALUES ('%i', '%e', '%e', '%e')", w, fln, fsn, fc);
								mysql_query(MySQL, largequery);
								largequery[0] = '\0';
								break;
							}
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Sorry, the faction limit has been reached!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/makefaction <long name (put underscores to make spaces)> <short name> <hex color>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Moderator{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:ogetplayerid(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 2) {
				new targetid[MAX_PLAYER_NAME];
				if (!sscanf(params, "s[30]", targetid)) {
					new largequery[144];
					mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `name` = '%e' LIMIT 1", targetid);
					mysql_query(MySQL, largequery);
					if(cache_num_rows() == 1){
						format(message, sizeof(message), "%s database id is: %i", str_replace("_", " ", targetid), cache_get_field_content_int(0, "id"));
						ClientMessenger(playerid, "FFFFFF", 3, message);
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That account does not exist!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/ogetplayerid <player_name>");
				}
				targetid[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(2), GetAdminRanks(2));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:getplayerid(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 2) {
				new targetid;
				if (!sscanf(params, "u", targetid)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1){
							format(message, sizeof(message), "%s database id is: %i", str_replace("_", " ", GetPlayerNameEx(targetid)), PlayerInfo[targetid][DBID]);
							ClientMessenger(playerid, "FFFFFF", 3, message);
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/getplayerid <playername/playerid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(2), GetAdminRanks(2));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:viptime(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][VIP] >= 1) {
			new largequery[144];
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `vips` WHERE `expired` = 0 AND `vipid` = %i", PlayerInfo[playerid][DBID]);
			mysql_query(MySQL, largequery);
			format(message, sizeof(message), "Your VIP will expire on {FF0000}%i/%i/%i", cache_get_field_content_int(0, "viptime_m"), cache_get_field_content_int(0, "viptime_d"), cache_get_field_content_int(0, "viptime_y"));
			ClientMessenger(playerid, "FFFFFF", 3, message);
			largequery[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not a VIP!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
	
COMMAND:makevip(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6) {
				new targetid, viplevel;
				if (!sscanf(params, "ui", targetid, viplevel)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1){
							if(viplevel >= 0 && viplevel <= 4){
								if(viplevel != 0){
									format(message, sizeof(message), "%s has made %s a %s", str_replace("_", " ", GetPlayerNameEx(playerid)),  str_replace("_", " ", GetPlayerNameEx(targetid)), GetVIPLevels(viplevel));
								} else {
									format(message, sizeof(message), "%s has removed vip from %s", str_replace("_", " ", GetPlayerNameEx(playerid)),  str_replace("_", " ", GetPlayerNameEx(targetid)));
								}
								ClientMessenger(playerid, "FF0000", 4, message);
								PlayerInfo[targetid][VIP] = viplevel;
								new output[4][5];
								strexplode(output, GetVIPDays(), "/");
								new largequery[144];
								if(PlayerInfo[targetid][VIP] != 0){
									mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `vips` SET `expired` = 1 WHERE `vipid` = %i", PlayerInfo[targetid][DBID]);
									mysql_query(MySQL, largequery);
									mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `vips` (`vipid`,`viplevel`,`viptime_d`,`viptime_m`,`viptime_y`,`expired`) VALUES ('%i', '%i', '%i', '%i', '%i', '0')", PlayerInfo[targetid][DBID], viplevel, strval(output[1]), strval(output[0]), strval(output[2]));
									mysql_query(MySQL, largequery);
								} else {
									mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `vips` (`vipid`,`viplevel`,`viptime_d`,`viptime_m`,`viptime_y`,`expired`) VALUES ('%i', '%i', '%i', '%i', '%i', '0')", PlayerInfo[targetid][DBID], viplevel, strval(output[1]), strval(output[0]), strval(output[2]));
									mysql_query(MySQL, largequery);
								}
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `vip` = %i WHERE `id` = %i", viplevel, PlayerInfo[targetid][DBID]);
								mysql_query(MySQL, largequery);
								
								format(message, sizeof(message), "%s has given you %s", str_replace("_", " ", GetPlayerNameEx(playerid)), GetVIPLevels(viplevel));
								ClientMessenger(targetid, "FFFFFF", 3, message);
								format(message, sizeof(message), "Your VIP will expire on {FF0000}%i/%i/%i", strval(output[0]), strval(output[1]), strval(output[2]));
								ClientMessenger(targetid, "FFFFFF", 3, message);
								largequery[0] = '\0';
								output[0][0] = '\0';
							} else {
								ClientMessenger(playerid, "FF0000", 1, "There are only four levels of VIP, put 0 if you want to remove vip from that person!");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/makevip <playername/playerid> <viplevel (1 bronze, 2 silver, 3 gold, 4 platinum)>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
	
COMMAND:makeatm(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new getall = sizeof(LastATMsID);
				for(new x = 1; x < sizeof(LastATMsID); x++){
					if(LastATMsID[x] == 0){
						getall = getall-1;
					}
				}
				if(getall != sizeof(LastATMsID)){
					for(new w = 1; w < sizeof(LastATMsID); w++){
						if(LastATMsID[w] == 0){
							format(message, sizeof(message), "%s has made a ATM(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), w);
							ClientMessenger(playerid, "FF0000", 4, message);
							GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
							GetPlayerFacingAngle(playerid, PlayerInfo[playerid][FacingAngle]);
							LastATMsID[w] = 1;
							ATMs[w][ATMX] = PlayerInfo[playerid][PosX];
							ATMs[w][ATMY] = PlayerInfo[playerid][PosY];
							ATMs[w][ATMZ] = (PlayerInfo[playerid][PosZ]-1);
							ATMs[w][ATMA] = PlayerInfo[playerid][FacingAngle];
							ATMs[w][ATMWorld] = GetPlayerVirtualWorld(playerid);
							ATMs[w][ATMInt] = GetPlayerInterior(playerid);
							ATMs[w][ATMIcon] = CreateDynamicObject(19526, ATMs[w][ATMX], ATMs[w][ATMY], (ATMs[w][ATMZ]), 0, 0, ATMs[w][ATMA], ATMs[w][ATMWorld], ATMs[w][ATMInt], -1, 150);
							format(message, sizeof(message), "{00FFFF}/atm{FFFFFF}\nSerial #%i", w);
							ATMs[w][ATMText] = CreateDynamic3DTextLabel(message, -1, ATMs[w][ATMX], ATMs[w][ATMY], (ATMs[w][ATMZ]+1), GlobalExitRadius+10, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, ATMs[w][ATMWorld], ATMs[w][ATMInt], -1);
						
							new largequery[144];
							mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `atms` (`id`,`x`,`y`,`z`,`a`,`world`,`interior`) VALUES ('%i', '%f', '%f', '%f', '%f', '%i', '%i')", w, ATMs[w][ATMX], ATMs[w][ATMY], ATMs[w][ATMZ], ATMs[w][ATMA], ATMs[w][ATMWorld], ATMs[w][ATMInt]);
							mysql_query(MySQL, largequery);
							largequery[0] = '\0';
							break;
						}
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "Sorry, the atm limit(50) has been reached!");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

EditGate(playerid, gateid)
{
	new largequery[144], GetName[MAX_PLAYER_NAME+1], message[750];
	mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", GateInfo[gateid][GateOwner]);
	mysql_query(MySQL, largequery);
	if(cache_num_rows() == 1){
		cache_get_field_content(0, "name", GetName);
	} else {
		format(GetName, sizeof(GetName), "No Owner");
	}
	format(message, 750, "Information\tValues\nOwner\t%s(%i)\nPassword\t%s\nMoveOpen\t%i\nMoveClose\t%i\nRadius\t%f\nSpeed\t%f\nObject\t%i\nFaction\t%s(%i)\n",GetName,GateInfo[gateid][GateOwner],GateInfo[gateid][GatePassword],gateid,gateid,GateInfo[gateid][GateRadius],GateInfo[gateid][GateSpeed],GateInfo[gateid][GateObjID],FactionInfo[GateInfo[gateid][GateFaction]][FactionLongName],GateInfo[gateid][GateFaction]);
	strcat(ReadAllMessages[playerid], message);
	format(message, 750, "Faction2\t%s(%i)\nFaction3\t%s(%i)\nLevel\t%i\nAutoClose\t%i",FactionInfo[GateInfo[gateid][GateFaction2]][FactionLongName],GateInfo[gateid][GateFaction2], FactionInfo[GateInfo[gateid][GateFaction3]][FactionLongName], GateInfo[gateid][GateFaction3], GateInfo[gateid][GateLevel], GateInfo[gateid][GateAutoClose]);
	strcat(ReadAllMessages[playerid], message);
	PlayerInfo[playerid][AllEditingOptions] = gateid;
	ShowPlayerDialog(playerid, 58, DIALOG_STYLE_TABLIST_HEADERS, "Edit Gate", ReadAllMessages[playerid], "Select", "Cancel");
	ReadAllMessages[playerid][0] = '\0';
	largequery[0] = '\0';
	message[0] = '\0';
}

public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
	if(response == EDIT_RESPONSE_FINAL){
		if(PlayerInfo[playerid][AllEditingOptions] != 0 || PlayerInfo[playerid][AllEditingOptions2] != 0){
			new largequery[250], message[144];
			if(PlayerInfo[playerid][AllEditingOptions2] == 1 || PlayerInfo[playerid][AllEditingOptions2] == 2){
				DestroyDynamicObject(GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateIcon]);
				if(PlayerInfo[playerid][AllEditingOptions2] == 2){
					format(message, sizeof(message), "%s has changed gate(%i) close positon", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions]);
					ClientMessenger(playerid, "FFFFFF", 4, message);
					GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateX] = fX;
					GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateY] = fY;
					GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateZ] = fZ;
					GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateRX] = fRotX;
					GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateRY] = fRotY;
					GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateRZ] = fRotZ;
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `gates` SET `x` = '%f', `y` = '%f', `z` = '%f', `rx` = '%f', `ry` = '%f', `rz` = '%f' WHERE `id` = %i", fX, fY, fZ, fRotX, fRotY, fRotZ, PlayerInfo[playerid][AllEditingOptions]);
					mysql_query(MySQL, largequery);
				} else if(PlayerInfo[playerid][AllEditingOptions2] == 1){
					format(message, sizeof(message), "%s has changed gate(%i) open positon", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions]);
					ClientMessenger(playerid, "FFFFFF", 4, message);
					GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateEndX] = fX;
					GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateEndY] = fY;
					GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateEndZ] = fZ;
					GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateEndRX] = fRotX;
					GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateEndRY] = fRotY;
					GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateEndRZ] = fRotZ;
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `gates` SET `tx` = '%f', `ty` = '%f', `tz` = '%f', `trx` = '%f', `try` = '%f', `trz` = '%f' WHERE `id` = %i", fX, fY, fZ, fRotX, fRotY, fRotZ, PlayerInfo[playerid][AllEditingOptions]);
					mysql_query(MySQL, largequery);
				}
				new tempid = PlayerInfo[playerid][AllEditingOptions];
				GateInfo[PlayerInfo[playerid][AllEditingOptions]][GateIcon] = CreateDynamicObject(GateInfo[tempid][GateObjID], GateInfo[tempid][GateX], GateInfo[tempid][GateY], GateInfo[tempid][GateZ], GateInfo[tempid][GateRX], GateInfo[tempid][GateRY], GateInfo[tempid][GateRZ], GateInfo[tempid][GateWorld], GateInfo[tempid][GateInt], -1, 200.0, 200.0);
			} else if(PlayerInfo[playerid][AllEditingOptions2] == 3){
				DestroyDynamicObject(ObjectInfo[PlayerInfo[playerid][AllEditingOptions]][ObjIcon]);
				format(message, sizeof(message), "%s has changed object(%i) positon", str_replace("_", " ", GetPlayerNameEx(playerid)), PlayerInfo[playerid][AllEditingOptions]);
				ClientMessenger(playerid, "FFFFFF", 4, message);
				ObjectInfo[PlayerInfo[playerid][AllEditingOptions]][ObjX] = fX;
				ObjectInfo[PlayerInfo[playerid][AllEditingOptions]][ObjY] = fY;
				ObjectInfo[PlayerInfo[playerid][AllEditingOptions]][ObjZ] = fZ;
				ObjectInfo[PlayerInfo[playerid][AllEditingOptions]][ObjRX] = fRotX;
				ObjectInfo[PlayerInfo[playerid][AllEditingOptions]][ObjRY] = fRotY;
				ObjectInfo[PlayerInfo[playerid][AllEditingOptions]][ObjRZ] = fRotZ;
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `objects` SET `x` = '%f', `y` = '%f', `z` = '%f', `rx` = '%f', `ry` = '%f', `rz` = '%f' WHERE `id` = %i", fX, fY, fZ, fRotX, fRotY, fRotZ, PlayerInfo[playerid][AllEditingOptions]);
				mysql_query(MySQL, largequery);
				new tempid = PlayerInfo[playerid][AllEditingOptions];
				ObjectInfo[tempid][ObjIcon] = CreateDynamicObject(ObjectInfo[tempid][ObjObjID], ObjectInfo[tempid][ObjX], ObjectInfo[tempid][ObjY], ObjectInfo[tempid][ObjZ], ObjectInfo[tempid][ObjRX], ObjectInfo[tempid][ObjRY], ObjectInfo[tempid][ObjRZ], ObjectInfo[tempid][ObjWorld], ObjectInfo[tempid][ObjInt], -1, 200.0, 200.0);
			}
			largequery[0] = '\0';
			message[0] = '\0';
		}
		PlayerInfo[playerid][AllEditingOptions] = 0;
		PlayerInfo[playerid][AllEditingOptions2] = 0;
	} else if(response == EDIT_RESPONSE_CANCEL) {
		if(PlayerInfo[playerid][AllEditingOptions] != 0 || PlayerInfo[playerid][AllEditingOptions2] != 0){
			if(PlayerInfo[playerid][AllEditingOptions] == 1 || PlayerInfo[playerid][AllEditingOptions2] == 2){
				new tempid = PlayerInfo[playerid][AllEditingOptions];
				DestroyDynamicObject(GateInfo[tempid][GateIcon]);
				GateInfo[tempid][GateIcon] = CreateDynamicObject(GateInfo[tempid][GateObjID], GateInfo[tempid][GateX], GateInfo[tempid][GateY], GateInfo[tempid][GateZ], GateInfo[tempid][GateRX], GateInfo[tempid][GateRY], GateInfo[tempid][GateRZ], GateInfo[tempid][GateWorld], GateInfo[tempid][GateInt], -1, 200.0, 200.0);
			} else if(PlayerInfo[playerid][AllEditingOptions2] == 3){
				new tempid = PlayerInfo[playerid][AllEditingOptions];
				DestroyDynamicObject(ObjectInfo[tempid][ObjIcon]);
				ObjectInfo[tempid][ObjIcon] = CreateDynamicObject(ObjectInfo[tempid][ObjObjID], ObjectInfo[tempid][ObjX], ObjectInfo[tempid][ObjY], ObjectInfo[tempid][ObjZ], ObjectInfo[tempid][ObjRX], ObjectInfo[tempid][ObjRY], ObjectInfo[tempid][ObjRZ], ObjectInfo[tempid][ObjWorld], ObjectInfo[tempid][ObjInt], -1, 200.0, 200.0);
			}
		}
		PlayerInfo[playerid][AllEditingOptions] = 0;
		PlayerInfo[playerid][AllEditingOptions2] = 0;
	}
}

COMMAND:editgate(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new gateid;
				if (!sscanf(params, "i", gateid)) {
					if(gateid != 0 && gateid <= sizeof(LastGateID)) {
						if(LastGateID[gateid] != 0) {
							EditGate(playerid, gateid);
						} else {
							ClientMessenger(playerid, "FFFFFF", 1, "Not a valid gate!");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid gate!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/editgate <gateid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FFFFFF", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:changegatepassword(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new sgatepassword[51], message[144];
		if (!sscanf(params, "s[51]", sgatepassword)) {
			new count = 0, largequery[144];
			for(new a = 1; a < sizeof(GateInfo); a++){
				if(GateInfo[a][GateOwner] == PlayerInfo[playerid][DBID]){
					count = count + 1;
					format(GateInfo[a][GatePassword], 51, sgatepassword);
					mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `gates` SET `password` = '%e' WHERE `id` = %i", sgatepassword, a);
					mysql_query(MySQL, largequery);
				}
			}
			if(count != 0){
				format(message, 145, "You have changed your gate(%i) password to '%s'", count, sgatepassword);
				ClientMessenger(playerid, "FFFFFF", 3, message);
			} else {
				ClientMessenger(playerid, "FF0000", 2, "You do not own any gates!");
			}
			largequery[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 5, "/changegatepassword <new_password>");
			ClientMessenger(playerid, "FFFFFF", 3, "Change the password to 'nil' if you don't want there to be password!");
		}
		message[0] = '\0';
		sgatepassword[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

	
COMMAND:movegate(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		for(new a = 1; a < sizeof(GateInfo); a++){
			if(IsPlayerInRangeOfPoint(playerid, GateInfo[a][GateRadius], GateInfo[a][GateX], GateInfo[a][GateY], GateInfo[a][GateZ]) && GateInfo[a][GateWorld] == GetPlayerVirtualWorld(playerid)){
				new pf = PlayerInfo[playerid][Faction];
				new pff = PlayerInfo[playerid][FakeFaction];
				new pl = PlayerInfo[playerid][Level];
				new gf1 = GateInfo[a][GateFaction];
				new gf2 = GateInfo[a][GateFaction2];
				new gf3 = GateInfo[a][GateFaction3];
				new gl = GateInfo[a][GateLevel];
				// If the gate has no password, and faction or fake factions is equal to the players faction or fake faction then check to see if it has a player level check
				if(!strcmp(GateInfo[a][GatePassword], "nil") && (gf1 == pf && gf1 != 0 || gf1 == pff && gf1 != 0 || gf2 == pf && gf2 != 0 || gf2 == pff && gf2 != 0 || gf3 == pf && gf3 != 0 || gf3 == pff && gf3 != 0)){
					if(gl <= pl){
						if(GateInfo[a][GateOpen] == 0){
							GateInfo[a][GateOpen] = 1;
							MoveDynamicObject(GateInfo[a][GateIcon], GateInfo[a][GateEndX],GateInfo[a][GateEndY], GateInfo[a][GateEndZ], GateInfo[a][GateSpeed], GateInfo[a][GateEndRX], GateInfo[a][GateEndRY], GateInfo[a][GateEndRZ]);
						} else {
							GateInfo[a][GateOpen] = 0;
							MoveDynamicObject(GateInfo[a][GateIcon], GateInfo[a][GateX],GateInfo[a][GateY], GateInfo[a][GateZ], GateInfo[a][GateSpeed], GateInfo[a][GateRX], GateInfo[a][GateRY], GateInfo[a][GateRZ]);
						}
						if(GateInfo[a][GateAutoClose] != 0){
							SetTimerEx("autoclosegate", (GateInfo[a][GateAutoClose]*1000), false, "i", a);
						}
					}
				// If the gate still has no password, but the factions are set to 0, then check for a player level checker
				} else if(!strcmp(GateInfo[a][GatePassword], "nil") && (gf1 == 0 && gf2 == 0 && gf3 == 0)){
					if(gl <= pl){
						if(GateInfo[a][GateOpen] == 0){
							GateInfo[a][GateOpen] = 1;
							MoveDynamicObject(GateInfo[a][GateIcon], GateInfo[a][GateEndX],GateInfo[a][GateEndY], GateInfo[a][GateEndZ], GateInfo[a][GateSpeed], GateInfo[a][GateEndRX], GateInfo[a][GateEndRY], GateInfo[a][GateEndRZ]);
						} else {
							GateInfo[a][GateOpen] = 0;
							MoveDynamicObject(GateInfo[a][GateIcon], GateInfo[a][GateX],GateInfo[a][GateY], GateInfo[a][GateZ], GateInfo[a][GateSpeed], GateInfo[a][GateRX], GateInfo[a][GateRY], GateInfo[a][GateRZ]);
						}
						if(GateInfo[a][GateAutoClose] != 0){
							SetTimerEx("autoclosegate", (GateInfo[a][GateAutoClose]*1000), false, "i", a);
						}
					}
				} else {
					new sgatepassword[51];
					if (!sscanf(params, "s[51]", sgatepassword)) {
						// The gate has a password, and now checks to see if the players faction or fake faction matches the gates factions, as well as checks for a level check at the end.
						if(!strcmp(GateInfo[a][GatePassword], sgatepassword) && (gf1 == pf && gf1 != 0 || gf1 == pff && gf1 != 0 || gf2 == pf && gf2 != 0 || gf2 == pff && gf2 != 0 || gf3 == pf && gf3 != 0 || gf3 == pff && gf3 != 0)){
							if(gl <= pl){
								if(GateInfo[a][GateOpen] == 0){
									GateInfo[a][GateOpen] = 1;
									MoveDynamicObject(GateInfo[a][GateIcon], GateInfo[a][GateEndX],GateInfo[a][GateEndY], GateInfo[a][GateEndZ], GateInfo[a][GateSpeed], GateInfo[a][GateEndRX], GateInfo[a][GateEndRY], GateInfo[a][GateEndRZ]);
								} else {
									GateInfo[a][GateOpen] = 0;
									MoveDynamicObject(GateInfo[a][GateIcon], GateInfo[a][GateX],GateInfo[a][GateY], GateInfo[a][GateZ], GateInfo[a][GateSpeed], GateInfo[a][GateRX], GateInfo[a][GateRY], GateInfo[a][GateRZ]);
								}
								if(GateInfo[a][GateAutoClose] != 0){
									SetTimerEx("autoclosegate", (GateInfo[a][GateAutoClose]*1000), false, "i", a);
								}
							}
						// The gate still has a password, but has no factions listed on it, so it checks for a player level check
						} else if(!strcmp(GateInfo[a][GatePassword], sgatepassword) && (gf1 == 0 && gf2 == 0 && gf3 == 0)){
							if(gl <= pl){
								if(GateInfo[a][GateOpen] == 0){
									GateInfo[a][GateOpen] = 1;
									MoveDynamicObject(GateInfo[a][GateIcon], GateInfo[a][GateEndX],GateInfo[a][GateEndY], GateInfo[a][GateEndZ], GateInfo[a][GateSpeed], GateInfo[a][GateEndRX], GateInfo[a][GateEndRY], GateInfo[a][GateEndRZ]);
								} else {
									GateInfo[a][GateOpen] = 0;
									MoveDynamicObject(GateInfo[a][GateIcon], GateInfo[a][GateX],GateInfo[a][GateY], GateInfo[a][GateZ], GateInfo[a][GateSpeed], GateInfo[a][GateRX], GateInfo[a][GateRY], GateInfo[a][GateRZ]);
								}
								if(GateInfo[a][GateAutoClose] != 0){
									SetTimerEx("autoclosegate", (GateInfo[a][GateAutoClose]*1000), false, "i", a);
								}
							}
						}
					}
				}
			}
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:gateinfo(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144], onemessage = 0, counter = 0;
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				ClientMessenger(playerid, "FFFFFF", 1, "- - - All Nearby Gates - - -");
				for(new a = 1; a < sizeof(GateInfo); a++){
					if(IsPlayerInRangeOfPoint(playerid, 15, GateInfo[a][GateX], GateInfo[a][GateY], GateInfo[a][GateZ]) && GateInfo[a][GateWorld] == GetPlayerVirtualWorld(playerid) && GateInfo[a][GateInt] == GetPlayerInterior(playerid)){
						counter = counter + 1;
						new largequery[144], GetName[MAX_PLAYER_NAME+1];
						mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", GateInfo[a][GateOwner]);
						mysql_query(MySQL, largequery);
						if(cache_num_rows() == 1){
							cache_get_field_content(0, "name", GetName);
						} else {
							format(GetName, sizeof(GetName), "No Owner");
						}
						format(message, sizeof(message), "%i.] GateID: %i  ObjectID: %i  Owner: %s  Password: %s", counter, a, GateInfo[a][GateObjID], GetName, GateInfo[a][GatePassword]);
						ClientMessenger(playerid, "FFFFFF", 3, message);
						onemessage = 1;
						largequery[0] = '\0';
						GetName[0] = '\0';
					}
				}
				if(onemessage == 0){
					ClientMessenger(playerid, "FFFFFF", 1, "You are not near any gates!");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FFFFFF", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:amovegate(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 2 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				for(new a = 1; a < sizeof(GateInfo); a++){
					if(IsPlayerInRangeOfPoint(playerid, GateInfo[a][GateRadius], GateInfo[a][GateX], GateInfo[a][GateY], GateInfo[a][GateZ]) && GateInfo[a][GateWorld] == GetPlayerVirtualWorld(playerid)){
						if(GateInfo[a][GateOpen] == 0){
							GateInfo[a][GateOpen] = 1;
							MoveDynamicObject(GateInfo[a][GateIcon], GateInfo[a][GateEndX],GateInfo[a][GateEndY], GateInfo[a][GateEndZ], GateInfo[a][GateSpeed], GateInfo[a][GateEndRX], GateInfo[a][GateEndRY], GateInfo[a][GateEndRZ]);
						} else {
							GateInfo[a][GateOpen] = 0;
							MoveDynamicObject(GateInfo[a][GateIcon], GateInfo[a][GateX],GateInfo[a][GateY], GateInfo[a][GateZ], GateInfo[a][GateSpeed], GateInfo[a][GateRX], GateInfo[a][GateRY], GateInfo[a][GateRZ]);
						}
						if(GateInfo[a][GateAutoClose] != 0){
							SetTimerEx("autoclosegate", (GateInfo[a][GateAutoClose]*1000), false, "i", a);
						}
					}
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(2), GetAdminRanks(2));
				ClientMessenger(playerid, "FFFFFF", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:deletegate(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new gateid, gateconfirm[8];
				if (!sscanf(params, "is[8]", gateid, gateconfirm)) {
					if(gateid != 0 && gateid <= 50) {
						if(!strcmp(gateconfirm, "confirm")){
							if(LastGateID[gateid] != 0){
								new largequery[144], getname[MAX_PLAYER_NAME];
								mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `gates` WHERE `id`=%i", gateid);
								mysql_query(MySQL, largequery);
								if(GateInfo[gateid][GateOwner] != 0){
									mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id`=%i", GateInfo[gateid][GateOwner]);
									mysql_query(MySQL, largequery);
									cache_get_field_content(0, "name", getname);
								} else {
									format(getname, sizeof(getname), "No One");
								}
								format(message, sizeof(message), "%s has deleted gate(%i) owned by %s", str_replace("_", " ", GetPlayerNameEx(playerid)), gateid, getname);
								ClientMessenger(playerid, "FFFFFF", 4, message);
								
								LastGateID[gateid] = 0;
								GateInfo[gateid][GateX] = 0;
								GateInfo[gateid][GateY] = 0;
								GateInfo[gateid][GateZ] = 0;
								GateInfo[gateid][GateRX] = 0;
								GateInfo[gateid][GateRY] = 0;
								GateInfo[gateid][GateRZ] = 0;
								GateInfo[gateid][GateEndX] = 0;
								GateInfo[gateid][GateEndY] = 0;
								GateInfo[gateid][GateEndZ] = 0;
								GateInfo[gateid][GateEndRX] = 0;
								GateInfo[gateid][GateEndRY] = 0;
								GateInfo[gateid][GateEndRZ] = 0;
								GateInfo[gateid][GateObjID] = 0;
								GateInfo[gateid][GateOwner] = 0;
								GateInfo[gateid][GateRadius] = 0;
								GateInfo[gateid][GateSpeed] = 0;
								GateInfo[gateid][GateWorld] = -1;
								GateInfo[gateid][GateInt] = -1;
								
								DestroyDynamicObject(GateInfo[gateid][GateIcon]);
								largequery[0] = '\0';
							} else {
								ClientMessenger(playerid, "FFFFFF", 1, "Not a valid gate!");
							}
						} else {
							ClientMessenger(playerid, "FFFFFF", 1, "You did not type confirm correctly!!");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid gate!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/deletegate <gateid> confirm");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FFFFFF", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

EditObjectd(playerid, objectid)
{
	format(ReadAllMessages[playerid], 750, "Information\tValues\nPosition\t%i\nObject\t%i", objectid, ObjectInfo[objectid][ObjObjID]);
	PlayerInfo[playerid][AllEditingOptions] = objectid;
	ShowPlayerDialog(playerid, 67, DIALOG_STYLE_TABLIST_HEADERS, "Edit Object", ReadAllMessages[playerid], "Select", "Cancel");
	ReadAllMessages[playerid][0] = '\0';
}

COMMAND:editobject(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new objectid;
				if (!sscanf(params, "i", objectid)) {
					if(LastObjectID[objectid] != 0){
						EditObjectd(playerid, objectid);
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid object!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/editobject <object id>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:objectinfo(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144], onemessage = 0, counter = 0;
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				ClientMessenger(playerid, "FFFFFF", 1, "- - - All Nearby Objects - - -");
				for(new a = 1; a < sizeof(ObjectInfo); a++){
					if(IsPlayerInRangeOfPoint(playerid, 15, ObjectInfo[a][ObjX], ObjectInfo[a][ObjY], ObjectInfo[a][ObjZ]) && ObjectInfo[a][ObjWorld] == GetPlayerVirtualWorld(playerid) && ObjectInfo[a][ObjInt] == GetPlayerInterior(playerid)){
						counter = counter + 1;
						format(message, sizeof(message), "%i.] ObjectID: %i  Object Model: %i", counter, a, ObjectInfo[a][ObjObjID]);
						ClientMessenger(playerid, "FFFFFF", 3, message);
						onemessage = 1;
					}
				}
				if(onemessage == 0){
					ClientMessenger(playerid, "FFFFFF", 1, "You are not near any objects!");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FFFFFF", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:deleteobject(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new objectid, objectconfirm[8];
				if (!sscanf(params, "is[8]", objectid, objectconfirm)) {
					if(!strcmp(objectconfirm, "confirm")){
						if(LastObjectID[objectid] != 0){
							new largequery[144];
							LastObjectID[objectid] = 0;
							mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `objects` WHERE `id`=%i", objectid);
							mysql_query(MySQL, largequery);
							format(message, sizeof(message), "%s has deleted object(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), objectid);
							ClientMessenger(playerid, "FFFFFF", 4, message);
							ObjectInfo[objectid][ObjX] = 0;
							ObjectInfo[objectid][ObjY] = 0;
							ObjectInfo[objectid][ObjZ] = 0;
							ObjectInfo[objectid][ObjRX] = 0;
							ObjectInfo[objectid][ObjRY] = 0;
							ObjectInfo[objectid][ObjRZ] = 0;
							ObjectInfo[objectid][ObjObjID] = 0;
							ObjectInfo[objectid][ObjWorld] = -1;
							ObjectInfo[objectid][ObjInt] = -1;
							DestroyDynamicObject(ObjectInfo[objectid][ObjIcon]);
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FFFFFF", 1, "Not a valid object!");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "You did not type confirm correctly!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/deleteobject <object id> confirm");
				}
				objectconfirm[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:gotocveh(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 2) {
				new vehid;
				if (!sscanf(params, "i", vehid)) {
					if(LastVehicleDBID[vehid] == 1){
						new largequery[200];
						format(message, sizeof(message), "You have gone to dataabase vehicle id: %i", vehid);
						ClientMessenger(playerid, "FF0000", 1, message);
						for(new a = 1; a <= MAX_VEHICLES; a++){
							if(vehid == Vehicles[a][VDBID]){
								SetPlayerPos(playerid, Vehicles[a][VehX], Vehicles[a][VehY], Vehicles[a][VehZ]);
								//SetPlayerVirtualWorld(playerid, Vehicles[objectid][VehWorld]);
								//SetPlayerInterior(playerid, Vehicles[objectid][VehInt]);
								PlayerInfo[playerid][PosX] = Vehicles[a][VehX];
								PlayerInfo[playerid][PosY] = Vehicles[a][VehY];
								PlayerInfo[playerid][PosZ] = Vehicles[a][VehZ];
								//PlayerInfo[playerid][WorldID] = ObjectInfo[objectid][ObjWorld];
								//PlayerInfo[playerid][InteriorID] = ObjectInfo[objectid][ObjInt];
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`=%i, `interior`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], PlayerInfo[playerid][DBID]);
								mysql_query(MySQL, largequery);
								FreezePlayerAfterTeleport(playerid, 2500);
								largequery[0] = '\0';
							}
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid vehid id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/gotocveh <db vehid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(2), GetAdminRanks(2));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:gotoveh(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 2) {
				new vehid;
				if (!sscanf(params, "i", vehid)) {
					if(LastVehicleID[vehid] != 0){
						new largequery[200];
						format(message, sizeof(message), "You have gone to vehicle id: %i", vehid);
						ClientMessenger(playerid, "FF0000", 1, message);
						SetPlayerPos(playerid, Vehicles[vehid][VehX], Vehicles[vehid][VehY], Vehicles[vehid][VehZ]);
						//SetPlayerVirtualWorld(playerid, Vehicles[objectid][VehWorld]);
						//SetPlayerInterior(playerid, Vehicles[objectid][VehInt]);
						PlayerInfo[playerid][PosX] = Vehicles[vehid][VehX];
						PlayerInfo[playerid][PosY] = Vehicles[vehid][VehY];
						PlayerInfo[playerid][PosZ] = Vehicles[vehid][VehZ];
						//PlayerInfo[playerid][WorldID] = ObjectInfo[objectid][ObjWorld];
						//PlayerInfo[playerid][InteriorID] = ObjectInfo[objectid][ObjInt];
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`=%i, `interior`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], PlayerInfo[playerid][DBID]);
						mysql_query(MySQL, largequery);
						FreezePlayerAfterTeleport(playerid, 2500);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid vehid id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/gotoveh <vehid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(2), GetAdminRanks(2));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
			
COMMAND:gotolocker(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][FactionModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 3 || PlayerInfo[playerid][FactionModerator] >= 1) {
				new factionlockerid;
				if (!sscanf(params, "i", factionlockerid)) {
					if(LastFactionLockerID[factionlockerid] != 0){
						new largequery[200];
						format(message, sizeof(message), "You have gone to Faction Locker ID: %i", factionlockerid);
						ClientMessenger(playerid, "FF0000", 1, message);
						SetPlayerPos(playerid, FactionLockerInfo[factionlockerid][FLX], FactionLockerInfo[factionlockerid][FLY], FactionLockerInfo[factionlockerid][FLZ]);
						SetPlayerVirtualWorld(playerid, FactionLockerInfo[factionlockerid][FLWorld]);
						SetPlayerInterior(playerid, FactionLockerInfo[factionlockerid][FLInt]);
						PlayerInfo[playerid][PosX] = FactionLockerInfo[factionlockerid][FLX];
						PlayerInfo[playerid][PosY] = FactionLockerInfo[factionlockerid][FLY];
						PlayerInfo[playerid][PosZ] = FactionLockerInfo[factionlockerid][FLZ];
						PlayerInfo[playerid][WorldID] = FactionLockerInfo[factionlockerid][FLWorld];
						PlayerInfo[playerid][InteriorID] = FactionLockerInfo[factionlockerid][FLInt];
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`=%i, `interior`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], PlayerInfo[playerid][DBID]);
						mysql_query(MySQL, largequery);
						FreezePlayerAfterTeleport(playerid, 2500);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid faction locker id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/gotolocker <lockerid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {FF8C00}Faction Moderator{FFFFFF} to use this command!", GetAdminRanksC(3), GetAdminRanks(3));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:gotoobject(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 3 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new objectid;
				if (!sscanf(params, "i", objectid)) {
					if(LastObjectID[objectid] != 0){
						new largequery[200];
						format(message, sizeof(message), "You have gone to Object ID: %i", objectid);
						ClientMessenger(playerid, "FF0000", 1, message);
						SetPlayerPos(playerid, ObjectInfo[objectid][ObjX], ObjectInfo[objectid][ObjY], ObjectInfo[objectid][ObjZ]);
						SetPlayerVirtualWorld(playerid, ObjectInfo[objectid][ObjWorld]);
						SetPlayerInterior(playerid, ObjectInfo[objectid][ObjInt]);
						PlayerInfo[playerid][PosX] = ObjectInfo[objectid][ObjX];
						PlayerInfo[playerid][PosY] = ObjectInfo[objectid][ObjY];
						PlayerInfo[playerid][PosZ] = ObjectInfo[objectid][ObjZ];
						PlayerInfo[playerid][WorldID] = ObjectInfo[objectid][ObjWorld];
						PlayerInfo[playerid][InteriorID] = ObjectInfo[objectid][ObjInt];
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`=%i, `interior`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], PlayerInfo[playerid][DBID]);
						mysql_query(MySQL, largequery);
						FreezePlayerAfterTeleport(playerid, 2500);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid object id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/gotoobject <objectid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(3), GetAdminRanks(3));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:gotodealer(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 3) {
				new dealerid;
				if (!sscanf(params, "i", dealerid)) {
					if(LastDealershipID[dealerid] != 0){
						new largequery[200];
						format(message, sizeof(message), "You have gone to dealership id: %i", dealerid);
						ClientMessenger(playerid, "FF0000", 1, message);
						SetPlayerPos(playerid, Dealerships[dealerid][DealerX], Dealerships[dealerid][DealerY], Dealerships[dealerid][DealerZ]);
						SetPlayerVirtualWorld(playerid, Dealerships[dealerid][DealerWorld]);
						SetPlayerInterior(playerid, Dealerships[dealerid][DealerInt]);
						PlayerInfo[playerid][PosX] = Dealerships[dealerid][DealerX];
						PlayerInfo[playerid][PosY] = Dealerships[dealerid][DealerY];
						PlayerInfo[playerid][PosZ] = Dealerships[dealerid][DealerZ];
						PlayerInfo[playerid][WorldID] = Dealerships[dealerid][DealerWorld];
						PlayerInfo[playerid][InteriorID] = Dealerships[dealerid][DealerInt];
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`=%i, `interior`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], PlayerInfo[playerid][DBID]);
						mysql_query(MySQL, largequery);
						FreezePlayerAfterTeleport(playerid, 2500);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid dealership id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/gotodealer <houseid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(3), GetAdminRanks(3));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:gotohouse(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 3 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new houseid;
				if (!sscanf(params, "i", houseid)) {
					if(LastHouseID[houseid] != 0){
						new largequery[200];
						format(message, sizeof(message), "You have gone to house id: %i", houseid);
						ClientMessenger(playerid, "FF0000", 1, message);
						SetPlayerPos(playerid, HouseInfo[houseid][HouseX], HouseInfo[houseid][HouseY], HouseInfo[houseid][HouseZ]);
						SetPlayerVirtualWorld(playerid, HouseInfo[houseid][HouseStartWorld]);
						SetPlayerInterior(playerid, HouseInfo[houseid][HouseStartInt]);
						PlayerInfo[playerid][PosX] = HouseInfo[houseid][HouseX];
						PlayerInfo[playerid][PosY] = HouseInfo[houseid][HouseY];
						PlayerInfo[playerid][PosZ] = HouseInfo[houseid][HouseZ];
						PlayerInfo[playerid][WorldID] = HouseInfo[houseid][HouseStartWorld];
						PlayerInfo[playerid][InteriorID] = HouseInfo[houseid][HouseStartInt];
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`=%i, `interior`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], PlayerInfo[playerid][DBID]);
						mysql_query(MySQL, largequery);
						FreezePlayerAfterTeleport(playerid, 2500);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid house id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/gotohouse <houseid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(3), GetAdminRanks(3));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:gotodmv(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 3) {
				new dmvid;
				if (!sscanf(params, "i", dmvid)) {
					if(LastDMVID[dmvid] != 0){
						new largequery[200];
						format(message, sizeof(message), "You have gone to DMV id: %i", dmvid);
						ClientMessenger(playerid, "FF0000", 1, message);
						SetPlayerPos(playerid, DMVInfo[dmvid][DMVX], DMVInfo[dmvid][DMVY], DMVInfo[dmvid][DMVZ]);
						SetPlayerVirtualWorld(playerid, DMVInfo[dmvid][DMVStartWorld]);
						SetPlayerInterior(playerid, DMVInfo[dmvid][DMVStartInt]);
						PlayerInfo[playerid][PosX] = DMVInfo[dmvid][DMVX];
						PlayerInfo[playerid][PosY] = DMVInfo[dmvid][DMVY];
						PlayerInfo[playerid][PosZ] = DMVInfo[dmvid][DMVZ];
						PlayerInfo[playerid][WorldID] = DMVInfo[dmvid][DMVStartWorld];
						PlayerInfo[playerid][InteriorID] = DMVInfo[dmvid][DMVStartInt];
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`=%i, `interior`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], PlayerInfo[playerid][DBID]);
						mysql_query(MySQL, largequery);
						FreezePlayerAfterTeleport(playerid, 2500);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid dmv!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/gotodmv <dmvid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(3), GetAdminRanks(3));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:gotohospital(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 3) {
				new hospid;
				if (!sscanf(params, "i", hospid)) {
					if(LastHospitalID[hospid] != 0){
						new largequery[200];
						format(message, sizeof(message), "You have gone to hospital id: %i, name %s", hospid, HospitalInfo[hospid][HPName]);
						ClientMessenger(playerid, "FF0000", 1, message);
						SetPlayerPos(playerid, HospitalInfo[hospid][HPX], HospitalInfo[hospid][HPY], HospitalInfo[hospid][HPZ]);
						SetPlayerVirtualWorld(playerid, 0);
						SetPlayerInterior(playerid, 0);
						PlayerInfo[playerid][PosX] = HospitalInfo[hospid][HPX];
						PlayerInfo[playerid][PosY] = HospitalInfo[hospid][HPY];
						PlayerInfo[playerid][PosZ] = HospitalInfo[hospid][HPZ];
						PlayerInfo[playerid][WorldID] = 0;
						PlayerInfo[playerid][InteriorID] = 0;
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`=%i, `interior`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], PlayerInfo[playerid][DBID]);
						mysql_query(MySQL, largequery);
						FreezePlayerAfterTeleport(playerid, 2500);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid hospital id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/gotohospital <hospital id>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(3), GetAdminRanks(3));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:gotoint(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 3 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new intid;
				if (!sscanf(params, "i", intid)) {
					if(LastInteriorID[intid] != 0){
						new largequery[200];
						format(message, sizeof(message), "You have gone to int id: %i", intid);
						ClientMessenger(playerid, "FF0000", 1, message);
						SetPlayerPos(playerid, InteriorInfo[intid][IntX], InteriorInfo[intid][IntY], InteriorInfo[intid][IntZ]);
						SetPlayerVirtualWorld(playerid, InteriorInfo[intid][IntStartWorld]);
						SetPlayerInterior(playerid, InteriorInfo[intid][IntStartInt]);
						PlayerInfo[playerid][PosX] = InteriorInfo[intid][IntX];
						PlayerInfo[playerid][PosY] = InteriorInfo[intid][IntY];
						PlayerInfo[playerid][PosZ] = InteriorInfo[intid][IntZ];
						PlayerInfo[playerid][WorldID] = InteriorInfo[intid][IntStartWorld];
						PlayerInfo[playerid][InteriorID] = InteriorInfo[intid][IntStartInt];
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`=%i, `interior`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], PlayerInfo[playerid][DBID]);
						mysql_query(MySQL, largequery);
						FreezePlayerAfterTeleport(playerid, 2500);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid int!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/gotoint <intid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(3), GetAdminRanks(3));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:gotogate(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 3 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new gateid;
				if (!sscanf(params, "i", gateid)) {
					if(LastGateID[gateid] != 0){
						new largequery[200];
						format(message, sizeof(message), "You have gone to gate id: %i", gateid);
						ClientMessenger(playerid, "FF0000", 1, message);
						SetPlayerPos(playerid, GateInfo[gateid][GateX], GateInfo[gateid][GateY], GateInfo[gateid][GateZ]);
						SetPlayerVirtualWorld(playerid, GateInfo[gateid][GateWorld]);
						SetPlayerInterior(playerid, GateInfo[gateid][GateInt]);
						PlayerInfo[playerid][PosX] = GateInfo[gateid][GateX];
						PlayerInfo[playerid][PosY] = GateInfo[gateid][GateY];
						PlayerInfo[playerid][PosZ] = GateInfo[gateid][GateZ];
						PlayerInfo[playerid][WorldID] = GateInfo[gateid][GateWorld];
						PlayerInfo[playerid][InteriorID] = GateInfo[gateid][GateInt];
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`=%i, `interior`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], PlayerInfo[playerid][DBID]);
						mysql_query(MySQL, largequery);
						FreezePlayerAfterTeleport(playerid, 2500);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid gate!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/gotogate <gateid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(3), GetAdminRanks(3));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:gotobiz(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 3 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new bizid;
				if (!sscanf(params, "i", bizid)) {
					if(LastBusinessesID[bizid] != 0){
						new largequery[200];
						format(message, sizeof(message), "You have gone to biz id: %i", bizid);
						ClientMessenger(playerid, "FF0000", 1, message);
						SetPlayerPos(playerid, Businesses[bizid][BizX], Businesses[bizid][BizY], Businesses[bizid][BizZ]);
						SetPlayerVirtualWorld(playerid, Businesses[bizid][BizStartWorld]);
						SetPlayerInterior(playerid, Businesses[bizid][BizStartInt]);
						PlayerInfo[playerid][PosX] = Businesses[bizid][BizX];
						PlayerInfo[playerid][PosY] = Businesses[bizid][BizY];
						PlayerInfo[playerid][PosZ] = Businesses[bizid][BizZ];
						PlayerInfo[playerid][WorldID] = Businesses[bizid][BizStartWorld];
						PlayerInfo[playerid][InteriorID] = Businesses[bizid][BizStartInt];
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`=%i, `interior`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], PlayerInfo[playerid][DBID]);
						mysql_query(MySQL, largequery);
						FreezePlayerAfterTeleport(playerid, 2500);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid biz!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/gotobiz <bizid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(3), GetAdminRanks(3));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:makecustomtext(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new text[100];
				if (!sscanf(params, "s[100]", text)) {
					new getall = sizeof(LastCustomTextID);
					for(new x = 1; x < sizeof(LastCustomTextID); x++){
						if(LastCustomTextID[x] == 0){
							getall = getall-1;
						}
					}
					if(getall != sizeof(LastCustomTextID)){
						for(new w = 1; w < sizeof(LastCustomTextID); w++){
							if(LastCustomTextID[w] == 0){
								format(message, sizeof(message), "%s has made a custom text(%i): %s", str_replace("_", " ", GetPlayerNameEx(playerid)), w, text);
								ClientMessenger(playerid, "FF0000", 4, message);
								GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
								GetPlayerFacingAngle(playerid, PlayerInfo[playerid][FacingAngle]);
								LastCustomTextID[w] = 1;
								
								CustomTextInfo[w][CTX] = PlayerInfo[playerid][PosX];
								CustomTextInfo[w][CTY] = PlayerInfo[playerid][PosY];
								CustomTextInfo[w][CTZ] = (PlayerInfo[playerid][PosZ]);
								CustomTextInfo[w][CTRX] = 0;
								CustomTextInfo[w][CTRY] = 0;
								CustomTextInfo[w][CTRZ] = PlayerInfo[playerid][FacingAngle];
								CustomTextInfo[w][CTWorld] = GetPlayerVirtualWorld(playerid);
								CustomTextInfo[w][CTInterior] = GetPlayerInterior(playerid);
								format(CustomTextInfo[w][CTText], 101, text);
								CustomTextInfo[w][CTIcon] = CreateDynamicObject(19357, CustomTextInfo[w][CTX], CustomTextInfo[w][CTY], CustomTextInfo[w][CTZ], 0, 0, CustomTextInfo[w][CTRZ], CustomTextInfo[w][CTWorld], CustomTextInfo[w][CTInterior], -1, 200.0, 200.0);
								SetDynamicObjectMaterialText(CustomTextInfo[w][CTIcon], 0, CustomTextInfo[w][CTText], OBJECT_MATERIAL_SIZE_256x128, "Arial", 24, 0, 0xFFFF8200, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
								break;
							}
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Sorry, the object limit has been reached!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/makecustomtext <text(100 limit)>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
			
COMMAND:makeobject(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new objectid;
				if (!sscanf(params, "i", objectid)) {
					new getall = sizeof(LastObjectID);
					for(new x = 1; x < sizeof(LastObjectID); x++){
						if(LastObjectID[x] == 0){
							getall = getall-1;
						}
					}
					if(getall != sizeof(LastObjectID)){
						for(new w = 1; w < sizeof(LastObjectID); w++){
							if(LastObjectID[w] == 0){
								format(message, sizeof(message), "%s has made a object(%i) using object id: %i", str_replace("_", " ", GetPlayerNameEx(playerid)), w, objectid);
								ClientMessenger(playerid, "FF0000", 4, message);
								GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
								GetPlayerFacingAngle(playerid, PlayerInfo[playerid][FacingAngle]);
								LastObjectID[w] = 1;
								
								ObjectInfo[w][ObjX] = PlayerInfo[playerid][PosX];
								ObjectInfo[w][ObjY] = PlayerInfo[playerid][PosY];
								ObjectInfo[w][ObjZ] = (PlayerInfo[playerid][PosZ]);
								ObjectInfo[w][ObjRX] = 0;
								ObjectInfo[w][ObjRY] = 0;
								ObjectInfo[w][ObjRZ] = PlayerInfo[playerid][FacingAngle];
								ObjectInfo[w][ObjObjID] = objectid;
								ObjectInfo[w][ObjWorld] = GetPlayerVirtualWorld(playerid);
								ObjectInfo[w][ObjInt] = GetPlayerInterior(playerid);
								ObjectInfo[w][ObjIcon] = CreateDynamicObject(objectid, ObjectInfo[w][ObjX], ObjectInfo[w][ObjY], ObjectInfo[w][ObjZ], 0, 0, ObjectInfo[w][ObjRZ], ObjectInfo[w][ObjWorld], ObjectInfo[w][ObjInt], -1, 200.0, 200.0);

								new largequery[1000], slargequery[1000];
								strcat(largequery, "INSERT INTO `objects` (`id`,`x`,`y`,`z`,`rx`,`ry`,`rz`,`world`,`interior`,`object`) VALUES ");
								format(slargequery, sizeof(slargequery), " ('%i', '%f', '%f', '%f', '0', '0', '%f','%i','%i','%i')", w, ObjectInfo[w][ObjX], ObjectInfo[w][ObjY], ObjectInfo[w][ObjZ], ObjectInfo[w][ObjRZ], ObjectInfo[w][ObjWorld], ObjectInfo[w][ObjInt], objectid);
								strcat(largequery, slargequery);
								mysql_query(MySQL, largequery);
								largequery[0] = '\0';
								slargequery[0] = '\0';
								break;
							}
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Sorry, the object limit has been reached!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/makeobject <object>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:makegate(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new objectid;
				if (!sscanf(params, "i", objectid)) {
					new getall = sizeof(LastGateID);
					for(new x = 1; x < sizeof(LastGateID); x++){
						if(LastGateID[x] == 0){
							getall = getall-1;
						}
					}
					if(getall != sizeof(LastGateID)){
						for(new w = 1; w < sizeof(LastGateID); w++){
							if(LastGateID[w] == 0){
								format(message, sizeof(message), "%s has made a gate(%i) using object id: %i", str_replace("_", " ", GetPlayerNameEx(playerid)), w, objectid);
								ClientMessenger(playerid, "FF0000", 4, message);
								GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
								GetPlayerFacingAngle(playerid, PlayerInfo[playerid][FacingAngle]);
								LastGateID[w] = 1;
								GateInfo[w][GateX] = PlayerInfo[playerid][PosX];
								GateInfo[w][GateY] = PlayerInfo[playerid][PosY];
								GateInfo[w][GateZ] = (PlayerInfo[playerid][PosZ]);
								GateInfo[w][GateRX] = 0;
								GateInfo[w][GateRY] = 0;
								GateInfo[w][GateRZ] = PlayerInfo[playerid][FacingAngle];
								GateInfo[w][GateEndX] = PlayerInfo[playerid][PosX];
								GateInfo[w][GateEndY] = PlayerInfo[playerid][PosY];
								GateInfo[w][GateEndZ] = (PlayerInfo[playerid][PosZ]);
								GateInfo[w][GateEndRX] = 0;
								GateInfo[w][GateEndRY] = 0;
								GateInfo[w][GateEndRZ] = PlayerInfo[playerid][FacingAngle];
								GateInfo[w][GateObjID] = objectid;
								GateInfo[w][GateOwner] = 0;
								GateInfo[w][GateRadius] = 5.0;
								GateInfo[w][GateSpeed] = 5.0;
								GateInfo[w][GateWorld] = GetPlayerVirtualWorld(playerid);
								GateInfo[w][GateInt] = GetPlayerInterior(playerid);
								format(GateInfo[w][GatePassword], 5, "nil");
								GateInfo[w][GateIcon] = CreateDynamicObject(objectid, GateInfo[w][GateX], GateInfo[w][GateY], GateInfo[w][GateZ], 0, 0, GateInfo[w][GateRZ], GateInfo[w][GateWorld], GateInfo[w][GateInt], -1, 200.0, 200.0);

								new largequery[1000], slargequery[1000];
								strcat(largequery, "INSERT INTO `gates` (`id`,`x`,`y`,`z`,`rx`,`ry`,`rz`,`tx`,`ty`,`tz`,`trx`,`try`,`trz`,`world`,`interior`,`speed`,`radius`,`owner`,`password`,`object`) VALUES ");
								format(slargequery, sizeof(slargequery), " ('%i', '%f', '%f', '%f', '0', '0', '%f', '%f', '%f', '%f', '0', '0', '%f', '%i', '%i', '%f', '%f', '0', 'nil', '%i')", w, GateInfo[w][GateX], GateInfo[w][GateY], GateInfo[w][GateZ], GateInfo[w][GateRZ], GateInfo[w][GateEndX], GateInfo[w][GateEndY], GateInfo[w][GateEndZ], GateInfo[w][GateEndRZ], GateInfo[w][GateWorld], GateInfo[w][GateInt], GateInfo[w][GateSpeed], GateInfo[w][GateRadius], objectid);
								strcat(largequery, slargequery);
								mysql_query(MySQL, largequery);
								largequery[0] = '\0';
								slargequery[0] = '\0';
								break;
							}
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Sorry, the gate limit has been reached!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/makegate <object>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
	

COMMAND:movehouse(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new houseid;
				if (!sscanf(params, "i", houseid)) {
					if(houseid != 0 && houseid <= sizeof(LastHouseID)) {
						if(LastHouseID[houseid] != 0) {
							new largequery[144];
							GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
							PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
							PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
							mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `houses` SET `x` = '%f', `y` = '%f', `z` = '%f',`startworld`=%i,`startint`=%i WHERE `id` = %i", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], houseid);
							mysql_query(MySQL, largequery);
							HouseInfo[houseid][HouseX] = PlayerInfo[playerid][PosX];
							HouseInfo[houseid][HouseY] = PlayerInfo[playerid][PosY];
							HouseInfo[houseid][HouseZ] = PlayerInfo[playerid][PosZ];
							HouseInfo[houseid][HouseStartWorld] = PlayerInfo[playerid][WorldID];
							HouseInfo[houseid][HouseStartInt] = PlayerInfo[playerid][InteriorID];
							DestroyDynamicPickup(HouseInfo[houseid][HouseIcon]);
							DestroyDynamic3DTextLabel(HouseInfo[houseid][HouseText]);
							DestroyDynamicMapIcon(HouseInfo[houseid][HouseMapIcon]);
							foreach(Player, i)
							{
								if(PlayerInfo[i][House] == houseid){
									SetTimerEx("findplayerhouse", 1500, false, "i", i);
								}
							}
							if(HouseInfo[houseid][HouseOwner] == 0) { 
								format(HouseInfo[houseid][HouseTempText], 128, "{FFFF00}House for Sell{FFFFFF} (ID: %i)\n {FF0000}Price{FFFFFF}: ${FF0000}%i{FFFFFF}\n Type /buyhouse to buy!", houseid, HouseInfo[houseid][HousePrice]);
								HouseInfo[houseid][HouseText] = CreateDynamic3DTextLabel(HouseInfo[houseid][HouseTempText], -1, HouseInfo[houseid][HouseX], HouseInfo[houseid][HouseY], HouseInfo[houseid][HouseZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, HouseInfo[houseid][HouseStartWorld], HouseInfo[houseid][HouseStartInt], -1);
								HouseInfo[houseid][HouseIcon] = CreateDynamicPickup(1273, 23, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], HouseInfo[houseid][HouseStartWorld], HouseInfo[houseid][HouseStartInt], -1);
								format(message, sizeof(message), "%s has moved a house(%i) which is not owned by anyone", str_replace("_", " ", GetPlayerNameEx(playerid)), houseid);
							} else {
								mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", HouseInfo[houseid][HouseOwner]);
								mysql_query(MySQL, largequery);
								new tempname[MAX_PLAYER_NAME];
								cache_get_field_content(0, "name", tempname);
								format(message, sizeof(message), "%s has moved a house(%i) which was owned by %s", str_replace("_", " ", GetPlayerNameEx(playerid)), houseid, str_replace("_", " ", tempname));
								format(HouseInfo[houseid][HouseTempText], 128, "{FFFF00}%s's House{FFFFFF} (ID: %i)\n%s", str_replace("_", " ", tempname), houseid, HouseInfo[houseid][HouseTag]);
								HouseInfo[houseid][HouseText] = CreateDynamic3DTextLabel(HouseInfo[houseid][HouseTempText], -1, HouseInfo[houseid][HouseX], HouseInfo[houseid][HouseY], HouseInfo[houseid][HouseZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, HouseInfo[houseid][HouseStartWorld], HouseInfo[houseid][HouseStartInt], -1);
								HouseInfo[houseid][HouseIcon] = CreateDynamicPickup(1272, 23, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], HouseInfo[houseid][HouseStartWorld], HouseInfo[houseid][HouseStartInt], -1);
								tempname[0] = '\0';
							}       
							ClientMessenger(playerid, "FFFFFF", 4, message);
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FFFFFF", 1, "Not a valid house!");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid house!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/movehouse <houseid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FFFFFF", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
	
EditInterior(playerid, interiorid)
{
	new largequery[144], GetName[MAX_PLAYER_NAME+1];
	mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", InteriorInfo[interiorid][IntOwner]);
	mysql_query(MySQL, largequery);
	if(cache_num_rows() == 1){
		cache_get_field_content(0, "name", GetName);
	} else {
		format(GetName, sizeof(GetName), "No Owner");
	}
	new fid1 = InteriorInfo[interiorid][IntFaction];
	new fid2 = InteriorInfo[interiorid][IntFaction2];
	new fid3 = InteriorInfo[interiorid][IntFaction3];
	format(ReadAllMessages[playerid], 750, "Information\tValues\nName:\t%s\nOwner:\t%s(%i)\nFaction1\t%s(%i)\nFaction2\t%s(%i)\nFaction3\t%s(%i)\nFaction Whitelist\t%i\nMapID\t%i", InteriorInfo[interiorid][IntName], GetName, InteriorInfo[interiorid][IntOwner], FactionInfo[fid1][FactionLongName], fid1, FactionInfo[fid2][FactionLongName], fid2, FactionInfo[fid3][FactionLongName], fid3, InteriorInfo[interiorid][IntWhiteList], InteriorInfo[interiorid][IntMapIconID]);
	PlayerInfo[playerid][AllEditingOptions] = interiorid;
	ShowPlayerDialog(playerid, 55, DIALOG_STYLE_TABLIST_HEADERS, "Interior Edit", ReadAllMessages[playerid], "Select", "Cancel");
	ReadAllMessages[playerid][0] = '\0';
	GetName[0] = '\0';
	largequery[0] = '\0';
}


Editcveh(playerid, vehicleid)
{
	format(ReadAllMessages[playerid], 750, "Information\tValues\nColor One:\t%i\nColor Two:\t%i\nHealth\t%f\nFaction\t%s(%i)", Vehicles[vehicleid][Color1], Vehicles[vehicleid][Color2], Vehicles[vehicleid][Health], FactionInfo[Vehicles[vehicleid][Faction]][FactionLongName], Vehicles[vehicleid][Faction]);
	ShowPlayerDialog(playerid, 76, DIALOG_STYLE_TABLIST_HEADERS, "Vehicle Edit", ReadAllMessages[playerid], "Select", "Cancel");
	ReadAllMessages[playerid][0] = '\0';
}


COMMAND:editcveh(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4) {
				new vehicleid;
				if(!sscanf(params, "i", vehicleid)) {
					for(new a = 0; a < MAX_VEHICLES; a++){
						if(Vehicles[a][VDBID] == vehicleid){
							if(LastVehicleDBID[vehicleid] == 1){
								PlayerInfo[playerid][AllEditingOptions] = vehicleid; // DBID
								PlayerInfo[playerid][AllEditingOptions2] = a; // Vehicle ID
								Editcveh(playerid, a);
							}
						}
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/editcveh <dbvehicleid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

EditGameSettings(playerid)
{
	strcat(ReadAllMessages[playerid], "Name\tValues\n");
	for(new a = 1; a <= MAX_SETTINGS; a++){
		new message[144];
		format(message, 144, "%s\t%i\n", GameSettings[a][GameSettingName], GameSettings[a][GameSetting]);
		strcat(ReadAllMessages[playerid], message);
		message[0] = '\0';
	}
	ShowPlayerDialog(playerid, 84, DIALOG_STYLE_TABLIST_HEADERS, "Edit Game Settings", ReadAllMessages[playerid], "Select", "Cancel");
	ReadAllMessages[playerid][0] = '\0';
}

COMMAND:editgamesettings(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6) {
				EditGameSettings(playerid);
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:editint(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new interiorid;
				if (!sscanf(params, "i", interiorid)) {
					if(LastInteriorID[interiorid] != 0) {
						EditInterior(playerid, interiorid);
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid interior id");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/editint <interiorid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:deletedmv(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1){
			if(PlayerInfo[playerid][Admin] >= 6) {
				new dmvid, dmvconfirm[8];
				if (!sscanf(params, "is[8]", dmvid, dmvconfirm)) {
					if(!strcmp(dmvconfirm, "confirm")){
						if(LastDMVID[dmvid] != 0){
							new largequery[144];
							mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `dmv` WHERE `id`=%i", dmvid);
							mysql_query(MySQL, largequery);
							format(message, sizeof(message), "%s has deleted dmv %i", str_replace("_", " ", GetPlayerNameEx(playerid)), dmvid);
							ClientMessenger(playerid, "FFFFFF", 4, message);
							
							LastDMVID[dmvid] = 0;
							DMVInfo[dmvid][DMVX] = 0;
							DMVInfo[dmvid][DMVY] = 0;
							DMVInfo[dmvid][DMVZ] = 0;
							DMVInfo[dmvid][DMVIntX] = 0;
							DMVInfo[dmvid][DMVIntY] = 0;
							DMVInfo[dmvid][DMVIntZ] = 0;
							DMVInfo[dmvid][DMVStartWorld] = -1;
							DMVInfo[dmvid][DMVStartInt] = -1;
							DMVInfo[dmvid][DMVEndWorld] = -1;
							DMVInfo[dmvid][DMVEndInt] = -1;
							DestroyDynamicPickup(DMVInfo[dmvid][DMVStartIcon]);
							DestroyDynamic3DTextLabel(DMVInfo[dmvid][DMVStartText]);
							DestroyDynamicPickup(DMVInfo[dmvid][DMVEndIcon]);
							DestroyDynamic3DTextLabel(DMVInfo[dmvid][DMVEndText]);
							DestroyDynamicMapIcon(DMVInfo[dmvid][DMVMapIcon]);
							
							mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `dmv_test` WHERE `dmv_id` = %i;", dmvid);
							mysql_query(MySQL, largequery);
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FFFFFF", 1, "Not a valid dmv!");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "You did not type confirm correctly!!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/deletedmv <dmvid> confirm");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				ClientMessenger(playerid, "FFFFFF", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:movedmv(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6) {
				new dmvid;
				if (!sscanf(params, "i", dmvid)) {
					if(LastDMVID[dmvid] != 0) {
						new largequery[256];
						format(message, sizeof(message), "%s has moved DMV(%i) to his location", str_replace("_", " ", GetPlayerNameEx(playerid)), dmvid);
						ClientMessenger(playerid, "FF0000", 1, message);
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
						PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
						DMVInfo[dmvid][DMVX] = PlayerInfo[playerid][PosX];
						DMVInfo[dmvid][DMVY] = PlayerInfo[playerid][PosY];
						DMVInfo[dmvid][DMVZ] = PlayerInfo[playerid][PosZ];
						DMVInfo[dmvid][DMVStartInt] = PlayerInfo[playerid][InteriorID];
						DMVInfo[dmvid][DMVStartWorld] = PlayerInfo[playerid][WorldID];
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `dmv` SET `x`='%f', `y`='%f', `z`='%f', `startworld`=%i, `startint`=%i WHERE `id` = %i", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], dmvid);
						mysql_query(MySQL, largequery);
						DestroyDynamicPickup(DMVInfo[dmvid][DMVStartIcon]);
						DestroyDynamic3DTextLabel(DMVInfo[dmvid][DMVStartText]);
						DMVInfo[dmvid][DMVStartIcon] = CreateDynamicPickup(1239, 23, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], -1);
						format(DMVInfo[dmvid][DMVTempText], 325, "DMV (%i){FFFFFF}\n(/enter)", dmvid);
						DMVInfo[dmvid][DMVStartText] = CreateDynamic3DTextLabel(DMVInfo[dmvid][DMVTempText], -1, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], -1);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid DMV id");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/moveDMV <dmvid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

forward TakeLicenseTest(playerid);
public TakeLicenseTest(playerid)
{
	PlayerInfo[playerid][TempInfo][8] = 1;
}

COMMAND:taketest(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new onemessage = 1;
		for(new a = 1; a < sizeof(DMVInfo); a++) {
			if(DMVInfo[a][DMVEndWorld] == GetPlayerVirtualWorld(playerid) && DMVInfo[a][DMVEndInt] == GetPlayerInterior(playerid)) {
				if(LastDMVID[a] == 1){
					onemessage = 0;
					if(PlayerInfo[playerid][Licenses][1] == 0){
						if(0 <= (PlayerInfo[playerid][Money] - GameSettings[4][GameSetting])){
							new largequery[256];
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `dmv_test` WHERE `dmv_id` = %i AND `part` = 1 LIMIT 1", a);
							mysql_query(MySQL, largequery);
							SetPlayerVirtualWorld(playerid, cache_get_field_content_int(0, "world"));
							SetPlayerInterior(playerid, cache_get_field_content_int(0, "interior"));
							SetPlayerPos(playerid, cache_get_field_content_float(0, "x"), cache_get_field_content_float(0, "y"), cache_get_field_content_float(0, "z"));
							
							for(new w = 1; w <= sizeof(LastVehicleID); w++){
								if(LastVehicleID[w] == 0){
									LastVehicleID[w] = 1;
									CreateVehicle(405, cache_get_field_content_float(0, "x"), cache_get_field_content_float(0, "y"), cache_get_field_content_float(0, "z"), cache_get_field_content_float(0, "a"), -1, -1, -1);
									SetVehicleParamsEx(w, 0, 0, 0, 0, 0, 0, 0);
									Vehicles[w][Vehicle] = 405;
									Vehicles[w][Faction] = 0;
									Vehicles[w][Color1] = -1;
									Vehicles[w][Color2] = -1;
									Vehicles[w][EngineS] = 0;
									Vehicles[w][LightS] = 0;
									Vehicles[w][DoorLS] = 0;
									Vehicles[w][HoodS] = 0;
									Vehicles[w][TrunkS] = 0;
									Vehicles[w][Temp] = 1;
									Vehicles[w][Health] = 1000;
									Vehicles[w][VDBID] = 0;
									Vehicles[w][VehX] = cache_get_field_content_float(0, "x");
									Vehicles[w][VehY] = cache_get_field_content_float(0, "y");
									Vehicles[w][VehZ] = cache_get_field_content_float(0, "z");
									Vehicles[w][VehA] = cache_get_field_content_float(0, "a");
									PlayerInfo[playerid][AllEditingOptions3][0] = w;
									PutPlayerInVehicle(playerid, w, 0);
									break;
								}
							}
							largequery[0] = '\0';
							
							SetTimerEx("TakeLicenseTest", 1000, false, "i", playerid);
							
							ClientMessenger(playerid, "FFFFFF", 3, "You're now taking your drivers license test.");
							ClientMessenger(playerid, "FFFFFF", 3, "Make sure to follow all the rules of the road, and obey the speed limit.");

							// Ignore this comment line
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `dmv_test` WHERE `dmv_id` = %i AND `part` = 2 LIMIT 1", a);
							mysql_query(MySQL, largequery);

							PlayerInfo[playerid][CPLoc] = CreateDynamicCP(cache_get_field_content_float(0, "x"), cache_get_field_content_float(0, "y"), cache_get_field_content_float(0, "z"), 5, -1, -1, playerid, 999999);
							PlayerInfo[playerid][AllEditingOptions] = 2;
							PlayerInfo[playerid][AllEditingOptions2] = a;
							PlayerInfo[playerid][Money] = (PlayerInfo[playerid][Money] - GameSettings[4][GameSetting]);
							mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = %i WHERE `id` = %i", PlayerInfo[playerid][Money], PlayerInfo[playerid][DBID]);
							mysql_query(MySQL, largequery);
							ResetPlayerMoney(playerid);
							GivePlayerMoney(playerid, PlayerInfo[playerid][Money]);
							largequery[0] = '\0';
							break;
						} else {
							new message[144];
							format(message, 144, "Sorry, you do not have enough money to take the DMV test. You need %i on hand to begin!", GameSettings[4][GameSetting]);
							ClientMessenger(playerid, "FF0000", 2, message);
							message[0] = '\0';
						}
					} else {
						ClientMessenger(playerid, "FF0000", 2, "You can not take a driving test again. You already have your drivers license!");
					}
					break; // <-- THIS IS THE LAST CHANGE I MADE, I AM TOO LAZY TO CHECK TO SEE IF IT WORKS.
				}
			}
		}
		if(onemessage == 1){
			ClientMessenger(playerid, "FF0000", 2, "You're not in any place to take a test right now!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:movedmvintpos(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6) {
				new dmvid;
				if (!sscanf(params, "i", dmvid)) {
					if(LastDMVID[dmvid] != 0) {
						new largequery[256];
						format(message, sizeof(message), "%s has moved DMV int(%i) to their location", str_replace("_", " ", GetPlayerNameEx(playerid)), dmvid);
						ClientMessenger(playerid, "FF0000", 1, message);
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
						PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
						DMVInfo[dmvid][DMVIntX] = PlayerInfo[playerid][PosX];
						DMVInfo[dmvid][DMVIntY] = PlayerInfo[playerid][PosY];
						DMVInfo[dmvid][DMVIntZ] = PlayerInfo[playerid][PosZ];
						DMVInfo[dmvid][DMVEndWorld] = PlayerInfo[playerid][WorldID];
						DMVInfo[dmvid][DMVEndInt] = PlayerInfo[playerid][InteriorID];
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `dmv` SET `intx`='%f', `inty`='%f', `intz`='%f', `endworld`=%i, `endint`=%i WHERE `id` = %i", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], dmvid);
						mysql_query(MySQL, largequery);
						DestroyDynamicPickup(DMVInfo[dmvid][DMVEndIcon]);
						DestroyDynamic3DTextLabel(DMVInfo[dmvid][DMVEndText]);
						DMVInfo[dmvid][DMVEndIcon] = CreateDynamicPickup(1239, 23, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], -1);
						DMVInfo[dmvid][DMVEndText] = CreateDynamic3DTextLabel("/exit", -1, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], -1);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid DMV id");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/movedmvintpos <dmvid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:deletedmvtestpos(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6) {
				new dmvid, dmvtestid;
				if (!sscanf(params, "ii", dmvid, dmvtestid)) {
					if(LastDMVID[dmvid] != 0) {
						new largequery[300];
						mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `dmv_test` WHERE `dmv_id` = %i AND `part` = %i LIMIT 1;", dmvid, dmvtestid);
						mysql_query(MySQL, largequery);
						if(cache_num_rows() == 1){
							format(message, sizeof(message), "%s has deleted DMV(%i) test position %i", str_replace("_", " ", GetPlayerNameEx(playerid)), dmvid, dmvtestid);
							ClientMessenger(playerid, "FF0000", 4, message);
							mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `dmv_test` WHERE `dmv_id` = %i AND `part` = %i LIMIT 1;", dmvid, dmvtestid);
							mysql_query(MySQL, largequery);
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `dmv_test` WHERE `dmv_id` = %i;", dmvid);
							mysql_query(MySQL, largequery);
							for(new a = 0; a < cache_num_rows(); a++)
							{   
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `dmv_test` SET `part` = %i WHERE `dmv_id` = %i AND `part` = %i", (a+1), dmvid, cache_get_field_content_int(a, "part"));
								mysql_query(MySQL, largequery); 
								mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `dmv_test` WHERE `dmv_id` = %i;", dmvid);
								mysql_query(MySQL, largequery);
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "Not a valid DMV test position id!");
						}
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid DMV id");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/deletedmvtestpos <dmvid> <test position>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:gotodmvtestpos(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6) {
				new dmvid, testpos;
				if (!sscanf(params, "ii", dmvid, testpos)) {
					if(LastDMVID[dmvid] != 0){
						new largequery[200];
						mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `dmv_test` WHERE `dmv_id` = %i AND `part` = %i LIMIT 1;", dmvid, testpos);
						mysql_query(MySQL, largequery);
						if(cache_num_rows() == 1){
							format(message, sizeof(message), "You have gone to DMV id: %i, test position %i", dmvid, testpos);
							ClientMessenger(playerid, "FF0000", 1, message);
							SetPlayerPos(playerid, cache_get_field_content_float(0, "x"), cache_get_field_content_float(0, "y"), cache_get_field_content_float(0, "z"));
							SetPlayerVirtualWorld(playerid, cache_get_field_content_int(0, "world"));
							SetPlayerInterior(playerid, cache_get_field_content_int(0, "interior"));
							PlayerInfo[playerid][PosX] = cache_get_field_content_float(0, "x");
							PlayerInfo[playerid][PosY] = cache_get_field_content_float(0, "y");
							PlayerInfo[playerid][PosZ] = cache_get_field_content_float(0, "z");
							PlayerInfo[playerid][WorldID] = cache_get_field_content_int(0, "world");
							PlayerInfo[playerid][InteriorID] = cache_get_field_content_int(0, "interior");
							mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`=%i, `interior`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], PlayerInfo[playerid][DBID]);
							mysql_query(MySQL, largequery);
							FreezePlayerAfterTeleport(playerid, 2500);
						} else {
							ClientMessenger(playerid, "FF0000", 1, "Not a valid DMV test position id!");
						}
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid dmv!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/gotodmvtestpos <dmvid> <testposid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:makedmvtestpos(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6) {
				new dmvid;
				if (!sscanf(params, "i", dmvid)) {
					if(LastDMVID[dmvid] != 0) {
						new largequery[300];
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						GetPlayerFacingAngle(playerid, PlayerInfo[playerid][FacingAngle]);
						PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
						PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
						mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `dmv_test` WHERE `dmv_id` = %i ORDER BY `part` DESC LIMIT 1;", dmvid);
						mysql_query(MySQL, largequery);
						new lastpart;
						if(cache_num_rows() == 1){
							lastpart = (cache_get_field_content_int(0, "part")+1);
						} else {
							lastpart = 1;
						}
						format(message, sizeof(message), "%s has made a DMV(%i) test position %i", str_replace("_", " ", GetPlayerNameEx(playerid)), dmvid, lastpart);
						ClientMessenger(playerid, "FF0000", 4, message);
						mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `dmv_test` (`x`, `y`, `z`, `a`, `part`, `world`, `interior`, `dmv_id`) VALUES ('%f', '%f', '%f', '%f', '%i', '%i', '%i', '%i')", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][FacingAngle], lastpart, PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], dmvid);
						mysql_query(MySQL, largequery);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid DMV id");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/makedmvtestpos <dmvid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:airportfasttravel(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(PlayerInfo[playerid][Level] >= 5) {
			new onemessage = 0;
			for(new a = 1; a < sizeof(AirportFTInfo); a++){
				if(IsPlayerInRangeOfPoint(playerid, 3, AirportFTInfo[a][APX], AirportFTInfo[a][APY], AirportFTInfo[a][APZ])){
					if(LastAirportFTID[a] == 1){
						if(0 <= (PlayerInfo[playerid][Money] - GameSettings[3][GameSetting])){
							PlayerInfo[playerid][AllEditingOptions] = AirportFTInfo[a][APAirportID];
							if(AirportFTInfo[a][APAirportID] == 1){
								ShowPlayerDialog(playerid, 73, DIALOG_STYLE_LIST, "Los Santos International Airport Terminal", "Los Santos International\nSan Fierro International\nLas Venturas International", "Select", "Exit");
							} else if(AirportFTInfo[a][APAirportID] == 2){
								ShowPlayerDialog(playerid, 73, DIALOG_STYLE_LIST, "San Fierro International Airport Terminal", "Los Santos International\nSan Fierro International\nLas Venturas International", "Select", "Exit");
							} else if(AirportFTInfo[a][APAirportID] == 3){
								ShowPlayerDialog(playerid, 73, DIALOG_STYLE_LIST, "Las Venturas International Airport Terminal", "Los Santos International\nSan Fierro International\nLas Venturas International", "Select", "Exit");
							}
						} else {
							new message[144];
							format(message, 144, "You do not have enough money to buy a plane ticket! You need %i dollars on hand!", GameSettings[3][GameSetting]);
							ClientMessenger(playerid, "FF0000", 2, message);
							message[0] = '\0';
						}
						onemessage = 1;
					}
				}
			}
			if(onemessage == 0){
				ClientMessenger(playerid, "FF0000", 2, "You're not near an airport terminal!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You need to be at least level 5 to fast travel!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
	
COMMAND:deleteairportft(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 7) {
				new airportid;
				if (!sscanf(params, "i", airportid)) {
					if(LastAirportFTID[airportid] == 1){
						new largequery[144];
						mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `airport_fasttravel` WHERE `id`=%i", airportid);
						mysql_query(MySQL, largequery);
						format(message, sizeof(message), "%s has deleted airport fast travel %i", str_replace("_", " ", GetPlayerNameEx(playerid)), airportid);
						ClientMessenger(playerid, "FFFFFF", 4, message);
						
						LastAirportFTID[airportid] = 0;
						AirportFTInfo[airportid][APX] = 0;
						AirportFTInfo[airportid][APY] = 0;
						AirportFTInfo[airportid][APZ] = 0;
						AirportFTInfo[airportid][APAirportID] = 0;
						DestroyDynamicPickup(AirportFTInfo[airportid][APIcon]);
						DestroyDynamic3DTextLabel(AirportFTInfo[airportid][APText]);
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "Not a valid airport fast travel!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/deleteairportft <airportid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(7), GetAdminRanks(7));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
				
COMMAND:makeairportft(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 7) {
				new airportid;
				if (!sscanf(params, "i", airportid)) {
					if(airportid == 1 || airportid == 2 || airportid == 3){
						new largequery[300];
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						new getall = sizeof(LastAirportFTID);
						for(new x = 1; x < sizeof(LastAirportFTID); x++){
							if(LastAirportFTID[x] == 0){
								getall = getall-1;
							}
						}
						if(getall != sizeof(LastAirportFTID)){
							for(new w = 1; w < sizeof(LastAirportFTID); w++){
								if(LastAirportFTID[w] == 0){
									LastAirportFTID[w] = 1;
									AirportFTInfo[w][APX] = PlayerInfo[playerid][PosX];
									AirportFTInfo[w][APY] = PlayerInfo[playerid][PosY];
									AirportFTInfo[w][APZ] = PlayerInfo[playerid][PosZ];
									AirportFTInfo[w][APAirportID] = airportid;
									format(message, sizeof(message), "%s has made a airport fast travel(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), w);
									ClientMessenger(playerid, "FF0000", 4, message);

									if(airportid == 1) {
										format(message, sizeof(message), "{FF0000}Los Santos Airport{FFFFFF} Checkout #%i\n/airportfasttravel", w);
										AirportFTInfo[w][APIcon] = CreateDynamicPickup(19606, 23, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], -1, -1, -1);
									} else if(airportid == 2) {
										format(message, sizeof(message), "{FF0000}San Fierro Airport{FFFFFF} Checkout #%i\n/airportfasttravel", w);
										AirportFTInfo[w][APIcon] = CreateDynamicPickup(19607, 23, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], -1, -1, -1);
									} else if(airportid == 3) {
										format(message, sizeof(message), "{FF0000}Las Venturas Airport{FFFFFF} Checkout #%i\n/airportfasttravel", w);
										AirportFTInfo[w][APIcon] = CreateDynamicPickup(19605, 23, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], -1, -1, -1);
									}
									AirportFTInfo[w][APText] = CreateDynamic3DTextLabel(message, -1, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1);
								
									strcat(ReadAllMessages[playerid], "INSERT INTO `airport_fasttravel` (`id`,`x`,`y`,`z`,`airport_id`) VALUES ");
									format(largequery, sizeof(largequery), "('%i', '%f', '%f', '%f','%i')", w, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], airportid);
									strcat(ReadAllMessages[playerid], largequery);
									mysql_format(MySQL, ReadAllMessages[playerid], 500, ReadAllMessages[playerid]);
									mysql_query(MySQL, ReadAllMessages[playerid]);
									ReadAllMessages[playerid][0] = '\0';
									break;
								}
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "The airport fast travel limit has been reached. Sorry!");
						}
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 5, "/makeairportft <airportid (1 los santos, 2 san fierro, 3 las venturas)>");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/makeairportft <airportid (1 los santos, 2 san fierro, 3 las venturas)>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(7), GetAdminRanks(7));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:movehospitalcamera(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 7) {
				new hid;
				if (!sscanf(params, "i", hid)) {
					if(LastHospitalID[hid] == 1){
						new largequery[200];
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						HospitalInfo[hid][HPCX] = PlayerInfo[playerid][PosX];
						HospitalInfo[hid][HPCY] = PlayerInfo[playerid][PosY];
						HospitalInfo[hid][HPCZ] = PlayerInfo[playerid][PosZ];
						format(message, sizeof(message), "%s has moved Hospital(%i) camera", str_replace("_", " ", GetPlayerNameEx(playerid)), hid);
						ClientMessenger(playerid, "FF0000", 4, message);

						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `hospitals` SET `cx`='%f', `cy`='%f', `cz`='%f' WHERE `id` = %i", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], hid);
						mysql_query(MySQL, largequery);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid hospital id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/movehospitalcamera <hospital id>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(7), GetAdminRanks(7));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:deletehospital(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 ) {
			if(PlayerInfo[playerid][Admin] >= 7) {
				new hospid, hospitalconfirm[8];
				if (!sscanf(params, "is[8]", hospid, hospitalconfirm)) {
					if(!strcmp(hospitalconfirm, "confirm")){
						if(LastHospitalID[hospid] != 0){
							new largequery[144];
							mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `hospitals` WHERE `id`=%i", hospid);
							mysql_query(MySQL, largequery);
							format(message, sizeof(message), "%s has deleted hospital(%i) %s", str_replace("_", " ", GetPlayerNameEx(playerid)), hospid, HospitalInfo[hospid][HPName]);
							ClientMessenger(playerid, "FFFFFF", 4, message);
							
							LastHospitalID[hospid] = 0;
							HospitalInfo[hospid][HPX] = 0;
							HospitalInfo[hospid][HPY] = 0;
							HospitalInfo[hospid][HPZ] = 0;
							
							DestroyDynamicPickup(HospitalInfo[hospid][HPIcon]);
							DestroyDynamicMapIcon(HospitalInfo[hospid][HPMapIcon]);
							DestroyDynamic3DTextLabel(HospitalInfo[hospid][HPText]);
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FFFFFF", 1, "Not a valid hospital id!");
						}
					} else {
						ClientMessenger(playerid, "FFFFFF", 1, "You did not type confirm correctly!!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/deletehospital <hospital id> confirm");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(7), GetAdminRanks(7));
				ClientMessenger(playerid, "FFFFFF", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:edithospital(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 7) {
				new hospitalid, hospname[51];
				if (!sscanf(params, "is[51]", hospitalid, hospname)) {
					if(LastHospitalID[hospitalid] != 0) {
						if(strval(hospname) < 51){
							new largequery[256];
							format(message, sizeof(message), "%s has changed hospital(%i) name to %s from %s", str_replace("_", " ", GetPlayerNameEx(playerid)), hospitalid, hospname, HospitalInfo[hospitalid][HPName]);
							ClientMessenger(playerid, "FF0000", 1, message);
							mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `hospitals` SET `name`='%e' WHERE `id` = %i", hospname, hospitalid);
							mysql_query(MySQL, largequery);
							DestroyDynamic3DTextLabel(HospitalInfo[hospitalid][HPText]);
							
							format(HospitalInfo[hospitalid][HPName], 51, hospname);
							format(HospitalInfo[hospitalid][HPTempText], 144, "{FF00FF}%s Hospital\n{FFFFFF}Station #%i", HospitalInfo[hospitalid][HPName], hospitalid);
							HospitalInfo[hospitalid][HPText] = CreateDynamic3DTextLabel(HospitalInfo[hospitalid][HPTempText], -1, HospitalInfo[hospitalid][HPX], HospitalInfo[hospitalid][HPY], HospitalInfo[hospitalid][HPZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1);
							
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "You can not have a name above 50 characters!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid hospital id");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/edithospital <hospitalid> <new name>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(7), GetAdminRanks(7));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}   

COMMAND:movehospital(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 7) {
				new hospitalid;
				if (!sscanf(params, "i", hospitalid)) {
					if(LastHospitalID[hospitalid] != 0) {
						new largequery[256];
						format(message, sizeof(message), "%s has moved hospital(%i) %s to his location ", str_replace("_", " ", GetPlayerNameEx(playerid)), hospitalid, HospitalInfo[hospitalid][HPName]);
						ClientMessenger(playerid, "FF0000", 1, message);
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						HospitalInfo[hospitalid][HPX] = PlayerInfo[playerid][PosX];
						HospitalInfo[hospitalid][HPY] = PlayerInfo[playerid][PosY];
						HospitalInfo[hospitalid][HPZ] = PlayerInfo[playerid][PosZ];
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `hospitals` SET `x`='%f', `y`='%f', `z`='%f' WHERE `id` = %i", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], hospitalid);
						mysql_query(MySQL, largequery);
						DestroyDynamicPickup(HospitalInfo[hospitalid][HPIcon]);
						DestroyDynamicMapIcon(HospitalInfo[hospitalid][HPMapIcon]);
						DestroyDynamic3DTextLabel(HospitalInfo[hospitalid][HPText]);
						
						HospitalInfo[hospitalid][HPMapIcon] = CreateDynamicMapIcon(HospitalInfo[hospitalid][HPX], HospitalInfo[hospitalid][HPY], HospitalInfo[hospitalid][HPZ], 22, -1, -1, -1, -1, 300, MAPICON_GLOBAL);
						HospitalInfo[hospitalid][HPIcon] = CreateDynamicPickup(1240, 23, HospitalInfo[hospitalid][HPX], HospitalInfo[hospitalid][HPY], HospitalInfo[hospitalid][HPZ], -1, -1, -1);
						format(HospitalInfo[hospitalid][HPTempText], 144, "{FF00FF}%s Hospital\n{FFFFFF}Station #%i", HospitalInfo[hospitalid][HPName], hospitalid);
						HospitalInfo[hospitalid][HPText] = CreateDynamic3DTextLabel(HospitalInfo[hospitalid][HPTempText], -1, HospitalInfo[hospitalid][HPX], HospitalInfo[hospitalid][HPY], HospitalInfo[hospitalid][HPZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1);
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid hospital id");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/movehospital <hospitalid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(7), GetAdminRanks(7));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}   

COMMAND:makehospital(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6) {
				new hospitalname[51];
				if (!sscanf(params, "s[51]", hospitalname)) {
					if(strlen(hospitalname) < 35){
						new largequery[300];
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						new getall = sizeof(LastHospitalID);
						for(new x = 1; x < sizeof(LastHospitalID); x++){
							if(LastHospitalID[x] == 0){
								getall = getall-1;
							}
						}
						if(getall != sizeof(LastHospitalID)){
							for(new w = 1; w < sizeof(LastHospitalID); w++){
								if(LastHospitalID[w] == 0){
									LastHospitalID[w] = 1;
									HospitalInfo[w][HPX] = PlayerInfo[playerid][PosX];
									HospitalInfo[w][HPY] = PlayerInfo[playerid][PosY];
									HospitalInfo[w][HPZ] = PlayerInfo[playerid][PosZ];
									format(HospitalInfo[w][HPName], 51, hospitalname);
									format(message, sizeof(message), "%s has made a Hospital(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), w);
									ClientMessenger(playerid, "FF0000", 4, message);
									
									HospitalInfo[w][HPMapIcon] = CreateDynamicMapIcon(HospitalInfo[w][HPX], HospitalInfo[w][HPY], HospitalInfo[w][HPZ], 22, -1, -1, -1, -1, 300, MAPICON_GLOBAL);
									HospitalInfo[w][HPIcon] = CreateDynamicPickup(1240, 23, HospitalInfo[w][HPX], HospitalInfo[w][HPY], HospitalInfo[w][HPZ], -1, -1, -1);
									format(HospitalInfo[w][HPTempText], 144, "{FF00FF}%s Hospital\n{FFFFFF}Station #%i", HospitalInfo[w][HPName], w);
									HospitalInfo[w][HPText] = CreateDynamic3DTextLabel(HospitalInfo[w][HPTempText], -1, HospitalInfo[w][HPX], HospitalInfo[w][HPY], HospitalInfo[w][HPZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1);
									
									strcat(ReadAllMessages[playerid], "INSERT INTO `hospitals` (`id`,`x`,`y`,`z`,`cx`,`cy`,`cz`,`name`) VALUES ");
									mysql_format(MySQL, largequery, sizeof(largequery), "('%i', '%f', '%f', '%f', '0', '0', '0', '%e')", w, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], HospitalInfo[w][HPName]);
									strcat(ReadAllMessages[playerid], largequery);
									mysql_format(MySQL, ReadAllMessages[playerid], 500, ReadAllMessages[playerid]);
									mysql_query(MySQL, ReadAllMessages[playerid]);
									ReadAllMessages[playerid][0] = '\0';
									break;
								}
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "The Hospital limit has been reached. Sorry!");
						}
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "You can not have more then 35 characters in the name!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/makehospital <hospital name>");
				}
				hospitalname[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:makedmv(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 6) {
				new largequery[300];
				GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
				new getall = sizeof(LastDMVID);
				for(new x = 1; x < sizeof(LastDMVID); x++){
					if(LastDMVID[x] == 0){
						getall = getall-1;
					}
				}
				if(getall != sizeof(LastDMVID)){
					for(new w = 1; w < sizeof(LastDMVID); w++){
						if(LastDMVID[w] == 0){
							LastDMVID[w] = 1;
							PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
							PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
							DMVInfo[w][DMVX] = PlayerInfo[playerid][PosX];
							DMVInfo[w][DMVY] = PlayerInfo[playerid][PosY];
							DMVInfo[w][DMVZ] = PlayerInfo[playerid][PosZ];
							DMVInfo[w][DMVStartWorld] = PlayerInfo[playerid][WorldID];
							DMVInfo[w][DMVStartInt] = PlayerInfo[playerid][InteriorID];
							DMVInfo[w][DMVEndWorld] = 0; // DEFAULT WORLD
							DMVInfo[w][DMVEndInt] = 3; // DEFAULT INT
							DMVInfo[w][DMVIntX] = (-2027.051147); // DEFAULT POS
							DMVInfo[w][DMVIntY] = (-103.704513); // DEFAULT POS
							DMVInfo[w][DMVIntZ] = (1035.171875); // DEFAULT POS
							format(message, sizeof(message), "%s has made a DMV(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), w);
							ClientMessenger(playerid, "FF0000", 4, message);
							
							DMVInfo[w][DMVMapIcon] = CreateDynamicMapIcon(DMVInfo[w][DMVX], DMVInfo[w][DMVY], DMVInfo[w][DMVZ], 51, -1, DMVInfo[w][DMVStartWorld], DMVInfo[w][DMVStartInt], -1, 500, MAPICON_GLOBAL);
		
							
							DMVInfo[w][DMVEndIcon] = CreateDynamicPickup(1239, 23, DMVInfo[w][DMVIntX], DMVInfo[w][DMVIntY], DMVInfo[w][DMVIntZ], DMVInfo[w][DMVEndWorld], DMVInfo[w][DMVEndInt], -1);
							DMVInfo[w][DMVEndText] = CreateDynamic3DTextLabel("/exit", -1, DMVInfo[w][DMVIntX], DMVInfo[w][DMVIntY], DMVInfo[w][DMVIntZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DMVInfo[w][DMVEndWorld], DMVInfo[w][DMVEndInt], -1);
							
							DMVInfo[w][DMVStartIcon] = CreateDynamicPickup(1239, 23, DMVInfo[w][DMVX], DMVInfo[w][DMVY], DMVInfo[w][DMVZ], DMVInfo[w][DMVStartWorld], DMVInfo[w][DMVStartInt], -1);
							format(message, sizeof(message), "DMV (%i){FFFFFF}\n(/enter)", w);
							
							DMVInfo[w][DMVStartText] = CreateDynamic3DTextLabel(message, -1, DMVInfo[w][DMVX], DMVInfo[w][DMVY], DMVInfo[w][DMVZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DMVInfo[w][DMVStartWorld], DMVInfo[w][DMVStartInt], -1);
						
							strcat(ReadAllMessages[playerid], "INSERT INTO `dmv` (`id`,`x`,`y`,`z`,`intx`,`inty`,`intz`,`startworld`, `startint`, `endworld`, `endint`) VALUES ");
							format(largequery, sizeof(largequery), "('%i', '%f', '%f', '%f', '%f', '%f', '%f','%i', '%i', '%i', '%i')", w, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], DMVInfo[w][DMVIntX], DMVInfo[w][DMVIntY], DMVInfo[w][DMVIntZ], DMVInfo[w][DMVStartWorld], DMVInfo[w][DMVStartInt], DMVInfo[w][DMVEndWorld], DMVInfo[w][DMVEndInt]);
							strcat(ReadAllMessages[playerid], largequery);
							mysql_format(MySQL, ReadAllMessages[playerid], 500, ReadAllMessages[playerid]);
							mysql_query(MySQL, ReadAllMessages[playerid]);
							ReadAllMessages[playerid][0] = '\0';
							break;
						}
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "The DMV limit has been reached. Sorry!");
				}
				largequery[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(6), GetAdminRanks(6));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
			
	
COMMAND:makeint(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new largequery[300];
				GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
				new getall = sizeof(LastInteriorID);
				for(new x = 1; x < sizeof(LastInteriorID); x++){
					if(LastInteriorID[x] == 0){
						getall = getall-1;
					}
				}
				if(getall != sizeof(LastInteriorID)){
					for(new w = 1; w < sizeof(LastInteriorID); w++){
						if(LastInteriorID[w] == 0){
							LastInteriorID[w] = 1;
							PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
							PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
							InteriorInfo[w][IntX] = PlayerInfo[playerid][PosX];
							InteriorInfo[w][IntY] = PlayerInfo[playerid][PosY];
							InteriorInfo[w][IntZ] = PlayerInfo[playerid][PosZ];
							InteriorInfo[w][IntFaction] = 0;
							InteriorInfo[w][IntFaction2] = 0;
							InteriorInfo[w][IntFaction3] = 0;
							InteriorInfo[w][IntMapIconID] = 0;
							InteriorInfo[w][IntOwner] = 0;
							InteriorInfo[w][IntStartWorld] = PlayerInfo[playerid][WorldID];
							InteriorInfo[w][IntStartInt] = PlayerInfo[playerid][InteriorID];
							InteriorInfo[w][IntEndWorld] = 0; // DEFAULT WORLD
							InteriorInfo[w][IntEndInt] = 18; // DEFAULT INT
							InteriorInfo[w][IntIntX] = (1287.396728); // DEFAULT POS
							InteriorInfo[w][IntIntY] = (-53.987983); // DEFAULT POS
							InteriorInfo[w][IntIntZ] = (1002.504028); // DEFAULT POS
							format(InteriorInfo[w][IntName], 4, "nil");
							format(message, sizeof(message), "%s has made a interior(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), w);
							ClientMessenger(playerid, "FF0000", 4, message);
							
							InteriorInfo[w][IntIntIcon] = CreateDynamicPickup(1239, 23, InteriorInfo[w][IntIntX], InteriorInfo[w][IntIntY], InteriorInfo[w][IntIntZ], InteriorInfo[w][IntEndWorld], InteriorInfo[w][IntEndInt], -1);
							InteriorInfo[w][IntIntText] = CreateDynamic3DTextLabel("/exit", -1, InteriorInfo[w][IntIntX], InteriorInfo[w][IntIntY], InteriorInfo[w][IntIntZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, InteriorInfo[w][IntEndWorld], InteriorInfo[w][IntEndInt], -1);
							
							InteriorInfo[w][IntIcon] = CreateDynamicPickup(1239, 23, InteriorInfo[w][IntX], InteriorInfo[w][IntY], InteriorInfo[w][IntZ], InteriorInfo[w][IntStartWorld], InteriorInfo[w][IntStartInt], -1);
							format(InteriorInfo[w][IntTempText], 300, "%s (%i){FFFFFF}\n(/enter)", InteriorInfo[w][IntName], w);
							
							InteriorInfo[w][IntText] = CreateDynamic3DTextLabel(InteriorInfo[w][IntTempText], -1, InteriorInfo[w][IntX], InteriorInfo[w][IntY], InteriorInfo[w][IntZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, InteriorInfo[w][IntStartWorld], InteriorInfo[w][IntStartInt], -1);
						
							strcat(ReadAllMessages[playerid], "INSERT INTO `interiors` (`id`,`x`,`y`,`z`,`intx`,`inty`,`intz`,`name`,`owner`,`password`,`faction1`,`faction2`,`faction3`,`startworld`, `startint`, `endworld`, `endint`) VALUES ");
							format(largequery, sizeof(largequery), "('%i', '%f', '%f', '%f', '%f', '%f', '%f', 'nil', '0', 'nil', '0', '0','0','%i', '%i', '%i', '%i')", w, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], InteriorInfo[w][IntIntX], InteriorInfo[w][IntIntY], InteriorInfo[w][IntIntZ], InteriorInfo[w][IntStartWorld], InteriorInfo[w][IntStartInt], InteriorInfo[w][IntEndWorld], InteriorInfo[w][IntEndInt]);
							strcat(ReadAllMessages[playerid], largequery);
							mysql_format(MySQL, ReadAllMessages[playerid], 500, ReadAllMessages[playerid]);
							mysql_query(MySQL, ReadAllMessages[playerid]);
							ReadAllMessages[playerid][0] = '\0';
							break;
						}
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "The interior limit has been reached. Sorry!");
				}
				largequery[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:makehouse(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new houseprice;
				if (!sscanf(params, "i", houseprice)) {
					if(houseprice > 0 && houseprice != 0) {
						new largequery[300];
						GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
						new getall = sizeof(LastHouseID);
						for(new x = 1; x < sizeof(LastHouseID); x++){
							if(LastHouseID[x] == 0){
								getall = getall-1;
							}
						}
						if(getall != sizeof(LastHouseID)){
							for(new w = 1; w < sizeof(LastHouseID); w++){
								if(LastHouseID[w] == 0){
									LastHouseID[w] = 1;
									PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
									PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
									HouseInfo[w][HouseX] = PlayerInfo[playerid][PosX];
									HouseInfo[w][HouseY] = PlayerInfo[playerid][PosY];
									HouseInfo[w][HouseZ] = PlayerInfo[playerid][PosZ];
									HouseInfo[w][HousePrice] = houseprice;
									HouseInfo[w][HouseStartWorld] = PlayerInfo[playerid][WorldID];
									HouseInfo[w][HouseStartInt] = PlayerInfo[playerid][InteriorID];
									HouseInfo[w][HouseEndWorld] = 0; // DEFAULT WORLD
									HouseInfo[w][HouseEndInt] = 2; // DEFAULT INT
									HouseInfo[w][HouseIntX] = 267.313; // DEFAULT POS
									HouseInfo[w][HouseIntY] = 305.058; // DEFAULT POS
									HouseInfo[w][HouseIntZ] = 999.147; // DEFAULT POS
									HouseInfo[w][HouseOwner] = 0;
									format(HouseInfo[w][HouseTag], 25, "/sethousetag");
									format(message, sizeof(message), "%s has made a house(%i) at the price of %i ", str_replace("_", " ", GetPlayerNameEx(playerid)), w, houseprice);
									ClientMessenger(playerid, "FF0000", 4, message);
									
									HouseInfo[w][HouseIntIcon] = CreateDynamicPickup(1239, 23, HouseInfo[w][HouseIntX], HouseInfo[w][HouseIntY], HouseInfo[w][HouseIntZ], HouseInfo[w][HouseEndWorld], HouseInfo[w][HouseEndInt], -1);
									HouseInfo[w][HouseIntText] = CreateDynamic3DTextLabel("/exit", -1, HouseInfo[w][HouseIntX], HouseInfo[w][HouseIntY], HouseInfo[w][HouseIntZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, HouseInfo[w][HouseEndWorld], HouseInfo[w][HouseEndInt], -1);
									
									HouseInfo[w][HouseIcon] = CreateDynamicPickup(1273, 23, HouseInfo[w][HouseX], HouseInfo[w][HouseY], HouseInfo[w][HouseZ], HouseInfo[w][HouseStartWorld], HouseInfo[w][HouseStartInt], -1);
									format(HouseInfo[w][HouseTempText], 128, "{FFFF00}House for Sell{FFFFFF} (ID: %i)\n {FF0000}Price{FFFFFF}: ${FF0000}%i{FFFFFF}\n Type /buyhouse to buy!", w, HouseInfo[w][HousePrice]);
									HouseInfo[w][HouseText] = CreateDynamic3DTextLabel(HouseInfo[w][HouseTempText], -1, HouseInfo[w][HouseX], HouseInfo[w][HouseY], HouseInfo[w][HouseZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, HouseInfo[w][HouseStartWorld], HouseInfo[w][HouseStartInt], -1);
								
									strcat(ReadAllMessages[playerid], "INSERT INTO `houses` (`id`,`x`,`y`,`z`,`intx`,`inty`,`intz`,`ownerid`, `tag`, `price`, `startworld`, `startint`, `endworld`, `endint`) VALUES ");
									format(largequery, sizeof(largequery), "('%i', '%f', '%f', '%f', '%f', '%f', '%f', '0', '/sethousetag', '%i', '%i', '%i', '%i', '%i')", w, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], HouseInfo[w][HouseIntX], HouseInfo[w][HouseIntY], HouseInfo[w][HouseIntZ], houseprice, HouseInfo[w][HouseStartWorld], HouseInfo[w][HouseStartInt], HouseInfo[w][HouseEndWorld], HouseInfo[w][HouseEndInt]);
									strcat(ReadAllMessages[playerid], largequery);
									mysql_format(MySQL, ReadAllMessages[playerid], 500, ReadAllMessages[playerid]);
									mysql_query(MySQL, ReadAllMessages[playerid]);
									ReadAllMessages[playerid][0] = '\0';
									break;
								}
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "The house limit(1000) has been reached. Sorry!");
						}
						largequery[0] = '\0';
					} else {
						ClientMessenger(playerid, "FF0000", 1, "You can't have a house that is free! Make it one dollar!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/makehouse <price>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:deletehouse(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][PropertyModerator] >= 1) {
				new houseid, houseconfirm[8];
				if (!sscanf(params, "is[8]", houseid, houseconfirm)) {
					if(!strcmp(houseconfirm, "confirm")){
						if(LastHouseID[houseid] != 0){
							new largequery[144];
							mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `houses` WHERE `id`=%i", houseid);
							mysql_query(MySQL, largequery);
							foreach(Player, i)
							{
								if(PlayerInfo[i][House] == houseid) {
									PlayerInfo[i][House] = 0;
								}
							}
							if(HouseInfo[houseid][HouseOwner] != 0){
								mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id` = %i LIMIT 1", HouseInfo[houseid][HouseOwner]);
								mysql_query(MySQL, largequery);
								new tempname[MAX_PLAYER_NAME];
								cache_get_field_content(0, "name", tempname);
								format(message, sizeof(message), "%s has deleted a house(%i) owned by %s", str_replace("_", " ", GetPlayerNameEx(playerid)), houseid, str_replace("_", " ", tempname));
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `house` = 0 WHERE `house` = %i", houseid);
								mysql_query(MySQL, largequery);
								tempname[0] = '\0';
							} else {
								format(message, sizeof(message), "%s has deleted a house(%i) owned by no one.", str_replace("_", " ", GetPlayerNameEx(playerid)), houseid);
							}
							ClientMessenger(playerid, "FF0000", 4, message);
							
							DestroyDynamicMapIcon(HouseInfo[houseid][HouseMapIcon]);
							DestroyDynamicPickup(HouseInfo[houseid][HouseIcon]);
							DestroyDynamic3DTextLabel(HouseInfo[houseid][HouseText]);
							DestroyDynamicPickup(HouseInfo[houseid][HouseIntIcon]);
							DestroyDynamic3DTextLabel(HouseInfo[houseid][HouseIntText]);
							
							HouseInfo[houseid][HouseX] = 0;
							HouseInfo[houseid][HouseY] = 0;
							HouseInfo[houseid][HouseZ] = 0;
							HouseInfo[houseid][HouseIntX] = 0;
							HouseInfo[houseid][HouseIntY] = 0;
							HouseInfo[houseid][HouseIntZ] = 0;
							HouseInfo[houseid][HousePrice] = 0;
							HouseInfo[houseid][HouseStartWorld] = -1;
							HouseInfo[houseid][HouseStartInt] = -1;
							HouseInfo[houseid][HouseEndWorld] = -1;
							HouseInfo[houseid][HouseEndInt] = -1;
							LastHouseID[houseid] = 0;
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "Not a valid house");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "You did not type confirm correctly!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/deletehouse <houseid> confirm");
				}
				houseconfirm[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Moderator{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
		
		

COMMAND:makebiz(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1 || PlayerInfo[playerid][PropertyModerator] >= 2) {
			if(PlayerInfo[playerid][Admin] >= 5 || PlayerInfo[playerid][PropertyModerator] >= 2) {
				new biztype, bizprice;
				if (!sscanf(params, "ii", biztype, bizprice)) {
					if(biztype > 0 && biztype < 6) {
						if(bizprice > 0 && bizprice != 0) {
							new largequery[300];
							GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
							new getall = sizeof(LastBusinessesID);
							for(new x = 1; x < sizeof(LastBusinessesID); x++){
								if(LastBusinessesID[x] == 0){
									getall = getall-1;
								}
							}
							if(getall != sizeof(LastBusinessesID)){
								for(new w = 1; w < sizeof(LastBusinessesID); w++){
									if(LastBusinessesID[w] == 0){
										LastBusinessesID[w] = 1;
										PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
										PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
										Businesses[w][BizX] = PlayerInfo[playerid][PosX];
										Businesses[w][BizY] = PlayerInfo[playerid][PosY];
										Businesses[w][BizZ] = PlayerInfo[playerid][PosZ];
										Businesses[w][BizStartWorld] = PlayerInfo[playerid][WorldID];
										Businesses[w][BizStartInt] = PlayerInfo[playerid][InteriorID];
										Businesses[w][BizType] = biztype;
										Businesses[w][BizPrice] = bizprice;
										Businesses[w][BizOPrice] = bizprice;
										Businesses[w][BizEndInt] = 4;
										Businesses[w][BizStock] = 0;
										Businesses[w][BizMoney] = 0;
										Businesses[w][BizIntX] = -27.349880;
										Businesses[w][BizIntY] = -31.172672;
										Businesses[w][BizIntZ] = 1003.557250;
										
										Businesses[w][BizOwner] = 0;
										format(message, sizeof(message), "%s has made a biz(%i): %s at the price of %i ", str_replace("_", " ", GetPlayerNameEx(playerid)), w, GetBusinesses(biztype), bizprice);
										ClientMessenger(playerid, "FF0000", 4, message);
										
										Businesses[w][BizIntIcon] = CreateDynamicPickup(1239, 23, Businesses[w][BizIntX], Businesses[w][BizIntY], Businesses[w][BizIntZ], Businesses[w][BizEndWorld], Businesses[w][BizEndInt], -1);
										Businesses[w][BizIntText] = CreateDynamic3DTextLabel("/exit", -1, Businesses[w][BizIntX], Businesses[w][BizIntY], Businesses[w][BizIntZ], GlobalExitRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, Businesses[w][BizEndWorld], Businesses[w][BizEndInt], -1);
										
										format(Businesses[w][BizTempText], 325, "{FFFF00}%s for Sell{FFFFFF} (ID: %i)\n ${FF0000}Price{FFFFFF}: {FF0000}%i{FFFFFF}\n Type /buybiz to buy!", GetBusinesses(biztype), w, bizprice);
										Businesses[w][BizText] = CreateDynamic3DTextLabel(Businesses[w][BizTempText], -1, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], GlobalExtranceRadius, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, Businesses[w][BizStartWorld], Businesses[w][BizStartInt], -1);
										
										strcat(ReadAllMessages[playerid], "INSERT INTO `businesses` (`id`,`x`,`y`,`z`,`intx`,`inty`,`intz`,`OwnerID`, `Type`, `Price`, `Original_Sell_Price`, `StartWorld`, `StartInt`, `EndWorld`, `EndInt`) VALUES ");
										format(largequery, sizeof(largequery), "('%i', '%f', '%f', '%f', '%f', '%f', '%f', '0', '%i', '%i', '%i', '%i', '%i', '%i', '%i')", w, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], Businesses[w][BizIntX], Businesses[w][BizIntY], Businesses[w][BizIntZ], Businesses[w][BizType], Businesses[w][BizPrice], Businesses[w][BizPrice], Businesses[w][BizStartWorld], Businesses[w][BizStartInt], Businesses[w][BizEndWorld], Businesses[w][BizEndInt]);
										strcat(ReadAllMessages[playerid], largequery);
										mysql_format(MySQL, ReadAllMessages[playerid], 500, ReadAllMessages[playerid]);
										mysql_query(MySQL, ReadAllMessages[playerid]);
										
										BizMapIconLoader(w);
										BizIconLoader(w); 
										
										ReadAllMessages[playerid][0] = '\0';
										break;
									}
								}
							} else {
								format(message, sizeof(message), "The business limit(%i) has been reached. Sorry!", MAX_BIZ);
								ClientMessenger(playerid, "FF0000", 1, message);
							}
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "You can't make a business that is free! Make it one dollar!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "You need to select ammunation(1), 24/7(2), binco(3), sexshop(4), food(5)!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/makebiz <gunshop(1), 24/7(2), binco(3), sexshop(4), food(5)> <price>");
					ClientMessenger(playerid, "FF0000", 3, "EXAMPLE{FFFFFF}: /makebiz 1 14999");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} or {800080}Property Director{FFFFFF} to use this command!", GetAdminRanksC(5), GetAdminRanks(5));
				SendClientMessage(playerid, -1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
 
ActionMessager(playerid, radius, text[])
{
	new message[144];
	//format(message, sizeof(message), "* %s", text);
	SetPlayerChatBubble(playerid, text, 0xC2A2DAFF, radius, 7000);
	GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
	foreach(Player, i)
	{
		if(PlayerInfo[i][Online] == 1){
			if (IsPlayerInRangeOfPoint(i, radius, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) 
			{
				SendClientMessage(i,-1, text);
			}
		}
	}
	message[0] = '\0';
}

COMMAND:s(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144], text[144];
		if (!sscanf(params, "s[144]", text)) {
		
			format(message, sizeof(message), "Shouts: %s", text);
			SetPlayerChatBubble(playerid, message, 0xFFFFFFFF, 30, 7000);
			format(message, sizeof(message), "%s shouts: %s", str_replace("_", " ", GetPlayerNameEx(playerid)), text);
			
			GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
			foreach(Player, i){
				if(PlayerInfo[i][Online] == 1) {
					if(IsPlayerInRangeOfPoint(i, 15, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xFFFFFFFF, message);
					} else if(IsPlayerInRangeOfPoint(i, 16, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xFAFAFAFF, message);
					} else if(IsPlayerInRangeOfPoint(i, 17, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xF6F6F6FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 18, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xF1F1F1FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 19, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xEDEDEDFF, message);
					} else if(IsPlayerInRangeOfPoint(i, 20, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xE9E9E9FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 21, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xE4E4E4FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 22, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xE0E0E0FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 23, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xDBDBDBFF, message);
					} else if(IsPlayerInRangeOfPoint(i, 24, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xD7D7D7FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 25, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xD3D3D3FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 26, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xBDBDBDFF, message);
					} else if(IsPlayerInRangeOfPoint(i, 27, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xA8A8A8FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 28, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0x939393FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 29, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0x7E7E7EFF, message);
					} else if(IsPlayerInRangeOfPoint(i, 30, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0x696969FF, message);
					}
				}
			}
		} else {
			ClientMessenger(playerid, "FF0000", 5, "/s <shout message>");
		}
		message[0] = '\0';
		text[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:noooc(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1){
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1){
			if(PlayerInfo[playerid][Admin] >= 3){
				if(NoOOC == 0){
					foreach(Player, i)
					{
						if(PlayerInfo[i][Online] == 1){
							ClientMessenger(i, "FF0000", 1, "OOC chat has been disabled!");
						}
					}
					NoOOC = 1;
					
					format(message, sizeof(message), "%s has disabled OOC chat!", str_replace("_", " ", GetPlayerNameEx(playerid)));
					ClientMessenger(playerid, "FF0000", 4, message);
				} else if(NoOOC == 1){
					foreach(Player, i)
					{
						if(PlayerInfo[i][Online] == 1){
							ClientMessenger(i, "FF0000", 1, "OOC chat has been enabled!");
						}
					}
					format(message, sizeof(message), "%s has enabled OOC chat!", str_replace("_", " ", GetPlayerNameEx(playerid)));
					ClientMessenger(playerid, "FF0000", 4, message);
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(3), GetAdminRanks(3));
				SendClientMessage(playerid, -1, message);
			}
			message[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:o(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[250];
		if (!sscanf(params, "s[200]", message)) {
			if(NoOOC == 1 || PlayerInfo[playerid][Admin] >= 2){
				format(message, sizeof(message), "(( %s: %s ))", str_replace("_", " ", GetPlayerNameEx(playerid)), message);
				foreach(Player, i){
					if(PlayerInfo[i][Online] == 1) {
						SendClientMessage(i, -1, message);
					}
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "Sorry, this chat is disabled!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 5, "/o <ooc message>");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:b(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144], text[144];
		if (!sscanf(params, "s[200]", text)) 
		{
			format(message, sizeof(message), "(( %s ))", text);
			SetPlayerChatBubble(playerid, message, 0xFFFFFFFF, 16, 7000);
			format(message, sizeof(message), "%s: (( %s ))", str_replace("_", " ", GetPlayerNameEx(playerid)), text);
			
			GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
			foreach(Player, i){
				if(PlayerInfo[i][Online] == 1) {
					if(IsPlayerInRangeOfPoint(i, 1, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xFFFFFFFF, message);
					} else if(IsPlayerInRangeOfPoint(i, 2, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xFAFAFAFF, message);
					} else if(IsPlayerInRangeOfPoint(i, 3, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xF6F6F6FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 4, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xF1F1F1FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 5, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xEDEDEDFF, message);
					} else if(IsPlayerInRangeOfPoint(i, 6, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xE9E9E9FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 7, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xE4E4E4FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 8, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xE0E0E0FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 9, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xDBDBDBFF, message);
					} else if(IsPlayerInRangeOfPoint(i, 10, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xD7D7D7FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 11, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xD3D3D3FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 12, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xBDBDBDFF, message);
					} else if(IsPlayerInRangeOfPoint(i, 13, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xA8A8A8FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 14, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0x939393FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 15, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0x7E7E7EFF, message);
					} else if(IsPlayerInRangeOfPoint(i, 16, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0x696969FF, message);
					}
				}
			}
		} else {
			ClientMessenger(playerid, "FF0000", 5, "/b <ooc message>");
		}
		message[0] = '\0';
		text[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:low(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144], text[144];
		if (!sscanf(params, "s[144]", text)) {
		
			format(message, sizeof(message), "Quietly: %s", text);
			SetPlayerChatBubble(playerid, message, 0xFFFFFFFF, 4, 7000);
			format(message, sizeof(message), "%s quietly says: %s", str_replace("_", " ", GetPlayerNameEx(playerid)), text);
			
			GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
			foreach(Player, i){
				if(PlayerInfo[i][Online] == 1) {
					if(IsPlayerInRangeOfPoint(i, 1.0, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xFFFFFFFF, message);
					} else if(IsPlayerInRangeOfPoint(i, 1.2, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xFAFAFAFF, message);
					} else if(IsPlayerInRangeOfPoint(i, 1.4, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xF6F6F6FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 1.6, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xF1F1F1FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 1.8, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xEDEDEDFF, message);
					} else if(IsPlayerInRangeOfPoint(i, 2.0, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xE9E9E9FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 2.2, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xE4E4E4FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 2.4, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xE0E0E0FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 2.6, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xDBDBDBFF, message);
					} else if(IsPlayerInRangeOfPoint(i, 2.8, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xD7D7D7FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 3.0, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xD3D3D3FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 3.2, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xBDBDBDFF, message);
					} else if(IsPlayerInRangeOfPoint(i, 3.4, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0xA8A8A8FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 3.6, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0x939393FF, message);
					} else if(IsPlayerInRangeOfPoint(i, 3.8, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0x7E7E7EFF, message);
					} else if(IsPlayerInRangeOfPoint(i, 4.0, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
						SendClientMessage(i, 0x696969FF, message);
					}
				}
			}
		} else {
			ClientMessenger(playerid, "FF0000", 5, "/low <quiet message>");
		}
		message[0] = '\0';
		text[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

public OnPlayerUpdate(playerid)
{
	PlayerInfo[playerid][TempInfo][11] = 0;
	return 1;
}

COMMAND:spec(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144], targetid;
		if (!sscanf(params, "u", targetid)) {
			if(targetid != 65535){
				if(targetid != playerid){
					if(PlayerInfo[targetid][Online] == 1){
						if(PlayerInfo[targetid][ViewingCamera] == 0){
							PlayerInfo[playerid][ViewingCamera] = 1;
							GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
							PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
							PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
							format(message, sizeof(message), "%s has begun spectating %s(%i)!", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)), targetid);
							ClientMessenger(playerid, "FF0000", 4, message);
							ClientMessenger(playerid, "FF0000", 1, "Type /spec again to stop spectating!");
							
							PlayerInfo[targetid][WorldID] = GetPlayerVirtualWorld(targetid);
							PlayerInfo[targetid][InteriorID] = GetPlayerInterior(targetid);
							SetPlayerVirtualWorld(playerid, PlayerInfo[targetid][WorldID]);
							SetPlayerInterior(playerid, PlayerInfo[targetid][InteriorID]);
							TogglePlayerSpectating(playerid, 1);
							
							if(IsPlayerInAnyVehicle(targetid) == 1){
								PlayerSpectatePlayer(playerid, targetid);
								PlayerSpectateVehicle(playerid, GetPlayerVehicleID(targetid));
							} else {
								PlayerSpectatePlayer(playerid, targetid);
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player is currently spectating someone!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "You can not spectate yourself!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
			}
		} else {
			if(PlayerInfo[playerid][ViewingCamera] == 1){
				PlayerInfo[playerid][ViewingCamera] = 0;
				SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][WorldID]);
				SetPlayerInterior(playerid, PlayerInfo[playerid][InteriorID]);
				TogglePlayerSpectating(playerid, 0);
				ClientMessenger(playerid, "FF0000", 1, "You have stopped spectating!");
			} else {
				ClientMessenger(playerid, "FF0000", 5, "/spec <playerid/player_name>");
			}
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	if(PlayerInfo[clickedplayerid][Online] == 1){
		new message[144];
		format(message, sizeof(message), "Name: [%s], ID: [%i], Level: [%i], AFK: [%s]", str_replace("_", " ", GetPlayerNameEx(clickedplayerid)), clickedplayerid, GetPlayerScore(clickedplayerid), CheckPlayerAFK(clickedplayerid));
		ClientMessenger(playerid, "FFFFFF", 3, message);
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "That player is logged in, but has not spawned yet!");
	}
	return 1;
}

COMMAND:id(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144], targetid;
		if (!sscanf(params, "u", targetid)) {
			if(targetid != 65535){
				if(PlayerInfo[targetid][Online] == 1){
					format(message, sizeof(message), "Name: [%s], ID: [%i], Level: [%i], AFK: [%s]", str_replace("_", " ", GetPlayerNameEx(targetid)), targetid, GetPlayerScore(targetid), CheckPlayerAFK(targetid));
					ClientMessenger(playerid, "FFFFFF", 3, message);
				} else {
					ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
				}
			} else {
				ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 5, "/id <playerid/player_name>");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:me(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if (!sscanf(params, "s[128]", message)) {
			format(message, sizeof(message), "{C2A2DA}* %s %s", str_replace("_", " ", GetPlayerNameEx(playerid)), message);
			ActionMessager(playerid, 25, message);
		} else {
			ClientMessenger(playerid, "FF0000", 5, "/me <action message>");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:do(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if (!sscanf(params, "s[128]", message)) {
			format(message, sizeof(message), "{C2A2DA}* %s (( %s ))", message, str_replace("_", " ", GetPlayerNameEx(playerid)));
			ActionMessager(playerid, 25, message);
		} else {
			ClientMessenger(playerid, "FF0000", 5, "/do <action explanation>");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:bringpveh(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 3) {
				new targetid, carslot;
				if (!sscanf(params, "ui", targetid, carslot)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1) {
							if(PlayerInfo[targetid][PVehsID][carslot] != 0) {
								GetPlayerPos(playerid, PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ]);
								SetVehiclePos(PlayerInfo[targetid][PVehsID][carslot], PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ]);
								format(message, sizeof(message), "%s has brought %s vehicle %s(%i) to them", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)), GetVehicleInformation(PlayerInfo[targetid][PVehs][carslot]), PlayerInfo[targetid][PVehsID][carslot]);
								ClientMessenger(playerid, "FF0000", 4, message);
								format(message, sizeof(message), "Your %s has been sent to %s", GetVehicleInformation(PlayerInfo[targetid][PVehs][carslot]), str_replace("_", " ", GetPlayerNameEx(playerid)));
								ClientMessenger(targetid, "FF0000", 1, message);
							} else {
								ClientMessenger(playerid, "FFFFFF", 1, "That player does not own a vehicle on that slot");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/bringpveh <playerid/playername> <carslot>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(3), GetAdminRanks(3));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:bring(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 3) {
				new targetid, largequery[144];
				if (!sscanf(params, "u", targetid)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1) {
							if(PlayerInfo[targetid][ViewingCamera] == 0){
								if(PlayerInfo[targetid][Admin] >= PlayerInfo[playerid][Admin]) {
									format(message, sizeof(message), "{%s}%s{FFFFFF} is either same rank or high rank admin then you!", GetAdminRanksC(PlayerInfo[targetid][Admin]), str_replace("_", " ", GetPlayerNameEx(targetid)));
									ClientMessenger(playerid, "FF0000", 1, message);
								} else if(PlayerInfo[targetid][Admin] < PlayerInfo[playerid][Admin]) {
									GetPlayerFacingAngle(playerid, PlayerInfo[playerid][FacingAngle]);
									PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
									PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
									GetPlayerPos(playerid, PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ]);
									SetPlayerVirtualWorld( targetid, PlayerInfo[playerid][WorldID] );
									SetPlayerInterior( targetid, PlayerInfo[playerid][InteriorID] );
									if(IsPlayerInAnyVehicle(targetid) == 1){
										SetVehiclePos(GetPlayerVehicleID(targetid), PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ]+1.5);
										SetVehicleZAngle(GetPlayerVehicleID(targetid), PlayerInfo[playerid][FacingAngle]);
										SetVehicleVirtualWorld(GetPlayerVehicleID(targetid), PlayerInfo[playerid][WorldID]);
										LinkVehicleToInterior(GetPlayerVehicleID(targetid), PlayerInfo[playerid][InteriorID]);
									} else {
										SetPlayerPos(targetid, PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ]+1.5);
										SetPlayerFacingAngle( targetid, PlayerInfo[playerid][FacingAngle] );
									}
									PlayerInfo[targetid][PosX] = PlayerInfo[playerid][PosX];
									PlayerInfo[targetid][PosY] = PlayerInfo[playerid][PosY];
									PlayerInfo[targetid][PosZ] = PlayerInfo[playerid][PosZ]+1.5;
									PlayerInfo[targetid][WorldID] = PlayerInfo[playerid][WorldID];
									PlayerInfo[targetid][InteriorID] = PlayerInfo[playerid][InteriorID];
									format(message, sizeof(message), "You have been sent to %s by %s", str_replace("_", " ", GetPlayerNameEx(playerid)));
									ClientMessenger(targetid, "FF0000", 1, message);
									mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `world`=%i, `interior`=%i WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID], PlayerInfo[targetid][DBID]);
									mysql_query(MySQL, largequery);
									format(message, sizeof(message), "%s has brought %s to them", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)));
									ClientMessenger(playerid, "FF0000", 4, message);
									FreezePlayerAfterTeleport(targetid, 2500);
								}
							} else {
								ClientMessenger(playerid, "FF0000", 1, "That player is currently spectating someone!");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/bring <playerid/playername>");
				}
				largequery[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(3), GetAdminRanks(3));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:deletecveh(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { 
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4) {
				new vehicleid, vehconfirm[8];
				if (!sscanf(params, "is[8]", vehicleid, vehconfirm)) {
					if(vehicleid != 0 && vehicleid <= MAX_VEHICLES) {
						if(!strcmp(vehconfirm, "confirm")){
							if(LastVehicleDBID[vehicleid] == 1){
								new largequery[124];
								mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `vehicles` WHERE `id`=%i", vehicleid);
								mysql_query(MySQL, largequery);
								new fixtest = 0;
								for(new gh = 1; gh < MAX_VEHICLES; gh++){
									if(Vehicles[gh][VDBID] == vehicleid){
										fixtest = gh;
									}
								}
								format(message, sizeof(message), "%s has deleted a permanate(%i) vehicle: %i", str_replace("_", " ", GetPlayerNameEx(playerid)), vehicleid, GetVehicleModel(fixtest));
								ClientMessenger(playerid, "FF0000", 4, message);
								LastVehicleDBID[vehicleid] = 0;
								LastVehicleID[fixtest] = 0;
								Vehicles[fixtest][VDBID] = 0;
								DestroyVehicle(fixtest);
								largequery[0] = '\0';
							} else {
								ClientMessenger(playerid, "FF0000", 1, "Invalid vehicle database id!");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "You did not type confirm correctly!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Invalid vehicle database id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/deletecveh <dbvehicleid> confirm");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				SendClientMessage(playerid, -1, message);
			}
			message[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:movecveh(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { 
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4) {
				new vehicleid, largequery[144];
				if (!sscanf(params, "i", vehicleid)) {
					if(LastVehicleDBID[vehicleid] == 1){
					
						new fixtest;
						for(new gh = 1; gh < MAX_VEHICLES; gh++){
							if(Vehicles[gh][VDBID] == vehicleid){
								fixtest = gh;
							}
						}
						if(!IsPlayerInAnyVehicle(playerid)) {
							GetPlayerPos(playerid,PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ]);
							GetPlayerFacingAngle(playerid, PlayerInfo[playerid][FacingAngle]);
						} else if(IsPlayerInAnyVehicle(playerid)) {
							GetVehiclePos(fixtest, PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ]);
							GetVehicleZAngle(fixtest, PlayerInfo[playerid][FacingAngle]);
						}
						Vehicles[fixtest][VehX] = PlayerInfo[playerid][PosX];
						Vehicles[fixtest][VehY] = PlayerInfo[playerid][PosY];
						Vehicles[fixtest][VehZ] = PlayerInfo[playerid][PosZ];
						Vehicles[fixtest][VehA] = PlayerInfo[playerid][FacingAngle];
						Vehicles[fixtest][VehPX] = PlayerInfo[playerid][PosX];
						Vehicles[fixtest][VehPY] = PlayerInfo[playerid][PosY];
						Vehicles[fixtest][VehPZ] = PlayerInfo[playerid][PosZ];
						Vehicles[fixtest][VehPA] = PlayerInfo[playerid][FacingAngle];
						SetVehiclePos(fixtest, PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ]);
						SetVehicleZAngle(fixtest, PlayerInfo[playerid][FacingAngle]);
						format(message, sizeof(message), "%s has moved a permanate(DB: %i, GID: %i) vehicle: %i",str_replace("_", " ", GetPlayerNameEx(playerid)), vehicleid, fixtest, GetVehicleModel(fixtest));
						ClientMessenger(playerid, "FF0000", 4, message);
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `vehicles` SET `x` = '%f', `y` = '%f', `z` = '%f', `a` = '%f' WHERE `id` = %i", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][FacingAngle], vehicleid);
						mysql_query(MySQL, largequery);
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid vehicle id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/movecveh <dbvehicleid>");
				}
				largequery[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

RandomPlateGenerator()
{
	const len = 7, hyphenpos = 4;
	new plate[len+1];
	for (new i = 0; i < len; i++)  {
		if (i + 1 == hyphenpos) {
		  plate[i] = '-';
		  continue;
		}
		if (random(2)) {
		  plate[i] = 'A' + random(26);
		} else { // number
			plate[i] = '0' + random(10);
		}
	}
	return plate;
}


/*
COMMAND:wave(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		if(IsPlayerInAnyVehicle(playerid) == true){
			ClientMessenger(playerid, "FF0000", 3, "* You can't do this when you're in a vehicle! *");
		} else {
			ApplyAnimation(playerid, "BD_FIRE", "BD_GF_Wave", 4.1, 1, 1, 1, 0, 0, 1);
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}
*/


COMMAND:cveh(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4) {
				new vehicleid, factionid, largequery[300];
				GetPlayerFacingAngle(playerid, PlayerInfo[playerid][FacingAngle]);
				GetPlayerPos(playerid, PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ]);
				
				new getall = sizeof(LastVehicleDBID);
				for(new x = 1; x < sizeof(LastVehicleDBID); x++){
					if(LastVehicleDBID[x] == 0){
						getall = getall-1;
					}
				}

				
				if(getall != sizeof(LastVehicleID)){
					if(!sscanf(params, "ii", vehicleid, factionid)) {
						if(factionid <= TotalFactions || factionid == 0) {
							if(vehicleid >= 400 && vehicleid <= 611) {
								CreateVehicle(vehicleid, PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ], PlayerInfo[playerid][FacingAngle], -1, -1, 300);
								for(new w = 1; w <= sizeof(LastVehicleID); w++){
									if(LastVehicleID[w] == 0){
										SetVehicleParamsEx(w, 0, 0, 0, 0, 0, 0, 0);
										LastVehicleID[w] = 1;
										Vehicles[w][Vehicle] = vehicleid;
										Vehicles[w][Faction] = factionid;
										
										RedoGenerator:
										format(Vehicles[w][VehLicence], 33, RandomPlateGenerator());
										new largequery2[144], largequery3[144], limit1, limit2;
										mysql_format(MySQL, largequery2, sizeof(largequery2), "SELECT * FROM `vehicles` WHERE `licenceplate`='%e' LIMIT 1", Vehicles[w][VehLicence]);
										mysql_query(MySQL, largequery2);
										limit1 = cache_num_rows();
										mysql_format(MySQL, largequery3, sizeof(largequery3), "SELECT * FROM `player_vehicles` WHERE `licenceplate`='%e' LIMIT 1", Vehicles[w][VehLicence]);
										mysql_query(MySQL, largequery3);
										limit2 = cache_num_rows();
										if(limit1 == 1 || limit2 == 1){
											goto RedoGenerator;
										}
										largequery2[0] = '\0';
										largequery3[0] = '\0';
										
										SetVehicleNumberPlate(w, Vehicles[w][VehLicence]);
										Vehicles[w][Color1] = -1;
										Vehicles[w][Color2] = -1;
										Vehicles[w][EngineS] = 0;
										Vehicles[w][LightS] = 0;
										Vehicles[w][DoorLS] = 0;
										Vehicles[w][HoodS] = 0;
										Vehicles[w][TrunkS] = 0;
										Vehicles[w][Temp] = 0;
										Vehicles[w][Health] = 1000;
										
										new vehdbid;
										for(new q = 1; q < sizeof(LastVehicleDBID); q++){
											if(LastVehicleDBID[q] == 0){
												LastVehicleDBID[q] = 1;
												vehdbid = q;
												break;
											}
										}
										
										Vehicles[w][VDBID] = vehdbid;
										Vehicles[w][VehX] = PlayerInfo[playerid][PosX];
										Vehicles[w][VehY] = PlayerInfo[playerid][PosY];
										Vehicles[w][VehZ] = PlayerInfo[playerid][PosZ];
										Vehicles[w][VehA] = PlayerInfo[playerid][FacingAngle];
										SetVehicleToRespawn(w);
										mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `vehicles` (`id`, `x`, `y`, `z`, `a`, `vehicleid`, `factionid`, `health`, `color1`, `color2`, `licenceplate`) VALUES ('%i', '%f', '%f', '%f', '%f', '%i', '%i', '1000', '-1', '-1', '%e')", vehdbid, PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ],PlayerInfo[playerid][FacingAngle], vehicleid, factionid, Vehicles[w][VehLicence]);
										mysql_query(MySQL, largequery);
										if(factionid != 0) {
											format(message, sizeof(message), "%s has made a permanate(%i) vehicle: %s(%i) for {%s}%s", str_replace("_", " ", GetPlayerNameEx(playerid)), vehdbid, GetVehicleInformation(vehicleid), vehicleid, FactionInfo[factionid][FactionColor], FactionInfo[factionid][FactionShortName]);
										} else {
											format(message, sizeof(message), "%s has made a permanate(%i) vehicle: %s(%i) for everyone", str_replace("_", " ", GetPlayerNameEx(playerid)), vehdbid, GetVehicleInformation(vehicleid), vehicleid);
										}
										ClientMessenger(playerid, "FF0000", 4, message);
										break;
									}
								}
							} else {
								ClientMessenger(playerid, "FF0000", 1, "Invalid vehicle model");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That faction does not exist!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 5, "/cveh <vehicleid> <factionid (type 0 for use by everyone)>");
					}
				} else {
					format(message, sizeof(message), "The vehicle limit(%i) has been reached, sorry!", MAX_VEHICLES);
					ClientMessenger(playerid, "FF0000", 1, message);
				}
				largequery[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:invite(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new targetid, message[144];
		if(PlayerInfo[playerid][Faction] != 0) {
			if(PlayerInfo[playerid][FactionLeader] == 1) {
				if (!sscanf(params, "u", targetid)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1) {
							if(PlayerInfo[targetid][Faction] == 0) {
								InvitesAwaiting[targetid][Faction] = PlayerInfo[playerid][Faction];
								InvitesAwaiting[targetid][FactionInviter] = playerid;
								
								format(message, sizeof(message), "** You have offered %s an invite to join (/accept faction) {%s}%s{FFFFFF} **", str_replace("_", " ", GetPlayerNameEx(targetid)), FactionInfo[PlayerInfo[playerid][Faction]][FactionColor], FactionInfo[PlayerInfo[playerid][Faction]][FactionShortName]);
								ClientMessenger(playerid, "FFFFFF", 3, message);
								format(message, sizeof(message), "** %s has offered you an invite to join (/accept faction) {%s}%s{FFFFFF} **", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[PlayerInfo[playerid][Faction]][FactionColor], FactionInfo[PlayerInfo[playerid][Faction]][FactionShortName]);
								ClientMessenger(targetid, "FFFFFF", 3, message);
	
							} else {
								format(message, sizeof(message), "%s is already in a faction or family!", str_replace("_", " ", GetPlayerNameEx(targetid)));
								ClientMessenger(playerid, "FFFFFF", 1,message);
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/invite <playerid/playername>");
				}
			} else {
				format(message, sizeof(message), "* You are not a faction leader for {%s}%s *", FactionInfo[PlayerInfo[playerid][Faction]][FactionColor], FactionInfo[PlayerInfo[playerid][Faction]][FactionShortName]);
				ClientMessenger(playerid, "FFFFFF", 3, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not in a faction!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	new message[144];
	if(PlayerInfo[playerid][Faction] != 0 && Vehicles[vehicleid][Faction] != 0 || PlayerInfo[playerid][FakeFaction] != 0 && Vehicles[vehicleid][Faction] != 0) {
		if(PlayerInfo[playerid][Faction] == Vehicles[vehicleid][Faction] || PlayerInfo[playerid][FakeFaction] == Vehicles[vehicleid][Faction]){
		} else if(PlayerInfo[playerid][Faction] != Vehicles[vehicleid][Faction] && PlayerInfo[playerid][FakeFaction] == 0) {
			if(ispassenger == 0) {
				TogglePlayerControllable(playerid,0);
				TogglePlayerControllable(playerid,1);
				format(message, sizeof(message), "* You are not apart of {%s}%s *", FactionInfo[Vehicles[vehicleid][Faction]][FactionColor], FactionInfo[Vehicles[vehicleid][Faction]][FactionShortName]);
				ClientMessenger(playerid, "FFFFFF", 3, message);
			}
		} else if(PlayerInfo[playerid][FakeFaction] != Vehicles[vehicleid][Faction]) {
			if(ispassenger == 0) {
				TogglePlayerControllable(playerid,0);
				TogglePlayerControllable(playerid,1);
				format(message, sizeof(message), "* You are not apart of {%s}%s *", FactionInfo[Vehicles[vehicleid][Faction]][FactionColor], FactionInfo[Vehicles[vehicleid][Faction]][FactionShortName]);
				ClientMessenger(playerid, "FFFFFF", 3, message);
			}
		}
	} else if(Vehicles[vehicleid][Faction] == 0) {
	} else {
		if(ispassenger == 0) {
			TogglePlayerControllable(playerid,0);
			TogglePlayerControllable(playerid,1);
			if(Vehicles[vehicleid][Faction] != 0) {
				format(message, sizeof(message), "* You are not apart of {%s}%s *", FactionInfo[Vehicles[vehicleid][Faction]][FactionColor], FactionInfo[Vehicles[vehicleid][Faction]][FactionShortName]);
				ClientMessenger(playerid, "FFFFFF", 3, message);
			}
		}
	}
	if(PlayerInfo[playerid][Admin] >= 2){
		format(message, sizeof(message), "VehicleDBID: %i", Vehicles[vehicleid][VDBID]);
		SendClientMessage(playerid, -1, message);
	}
	message[0] = '\0';
	return 1;
}


COMMAND:gps(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { 
		if(PlayerInfo[playerid][TempInfo][9] == 1) {
			if(PlayerInfo[playerid][TempInfo][7] == 1){
				TurnGPSStatusOff(playerid);
				ClientMessenger(playerid, "800080", 3, "* You have turned off your GPS *");
				PlayerInfo[playerid][TempInfo][7] = 0;
			} else {
				TurnGPSStatusOn(playerid);
				ClientMessenger(playerid, "800080", 3, "* You have turned on your GPS *");
				PlayerInfo[playerid][TempInfo][7] = 1;
			}
		} else {
			ClientMessenger(playerid, "800080", 2, "* You don't own a GPS. You can buy one from a 24/7 *");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:respawnveh(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { 
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 3) {
				new vehicleid;
				if(!sscanf(params, "i", vehicleid)) {
					if(LastVehicleID[vehicleid] == 1){
						//SetVehicleToRespawn(vehicleid);
						if(Vehicles[vehicleid][Vehicle]){
							SetVehicleHealth(vehicleid, Vehicles[vehicleid][Health]);
						}
						if(Vehicles[vehicleid][Temp] == 2){
							SetVehiclePos(vehicleid, Vehicles[vehicleid][VehPX], Vehicles[vehicleid][VehPY], Vehicles[vehicleid][VehPZ]);
							SetVehicleZAngle(vehicleid, Vehicles[vehicleid][VehPA]);
						} else {
							SetVehiclePos(vehicleid, Vehicles[vehicleid][VehX], Vehicles[vehicleid][VehY], Vehicles[vehicleid][VehZ]);
							SetVehicleZAngle(vehicleid, Vehicles[vehicleid][VehA]);
						}
						Vehicles[vehicleid][EngineS] = 0;
						Vehicles[vehicleid][LightS] = 0;
						Vehicles[vehicleid][DoorLS] = 0;
						Vehicles[vehicleid][HoodS] = 0;
						Vehicles[vehicleid][TrunkS] = 0;
						format(message, sizeof(message), "%s has respawned vehicle %i", str_replace("_", " ", GetPlayerNameEx(playerid)), vehicleid);
						ClientMessenger(playerid, "FF0000", 4, message);
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Not a valid vehicle!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/respawnveh <vehicleid>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(3), GetAdminRanks(3));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:checkrestsurname(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144], largequery[256];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5) {
				mysql_query(MySQL, "SELECT * FROM `surnames`");
				new lastid = cache_num_rows();
				strcat(ReadAllMessages[playerid], "Surname\tOwner\n");
				for(new a = 0; a < lastid; a++){
					new surnameowner[MAX_PLAYER_NAME], surname[MAX_PLAYER_NAME];
					mysql_query(MySQL, "SELECT * FROM `surnames`");
					cache_get_field_content(a, "surname", surname);
					mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id`=%i", cache_get_field_content_int(a, "playerid"));
					mysql_query(MySQL, largequery);
					cache_get_field_content(0, "name", surnameowner);
					format(message, sizeof(message), "%s\t%s\n", surname, surnameowner);
					strcat(ReadAllMessages[playerid], message);
					surname[0] = '\0';
					surnameowner[0] = '\0';
				}
				ShowPlayerDialog(playerid, 99, DIALOG_STYLE_TABLIST_HEADERS, "Surname Restriction", ReadAllMessages[playerid], "Select", "Cancel");
				ReadAllMessages[playerid][0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(3), GetAdminRanks(3));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:removerestsurname(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144], largequery[256];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5) {
				new surname[31];
				if(!sscanf(params, "s[30]", surname)) {
					mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `surnames` WHERE `surname`='%e' LIMIT 1", surname);
					mysql_query(MySQL, largequery);
					if(cache_num_rows() == 1){
						format(message, sizeof(message), "%s has removed the restricted name {00FFFF}%s{FFFFFF}", str_replace("_", " ", GetPlayerNameEx(playerid)), surname);
						ClientMessenger(playerid, "FF0000", 4, message);
						mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `surnames` WHERE `surname`='%e'", surname);
						mysql_query(MySQL, largequery);
						mysql_query(MySQL, "SELECT * FROM `surnames`");
						new lastid = cache_num_rows();
						strcat(ReadAllMessages[playerid], "Surname\tOwner\n");
						for(new a = 0; a < lastid; a++){
							new surnameowner[MAX_PLAYER_NAME];
							mysql_query(MySQL, "SELECT * FROM `surnames`");
							cache_get_field_content(a, "surname", surname);
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id`=%i", cache_get_field_content_int(a, "playerid"));
							mysql_query(MySQL, largequery);
							cache_get_field_content(0, "name", surnameowner);
							format(message, sizeof(message), "%s\t%s\n", surname, surnameowner);
							strcat(ReadAllMessages[playerid], message);
							surname[0] = '\0';
							surnameowner[0] = '\0';
						}
						ShowPlayerDialog(playerid, 99, DIALOG_STYLE_TABLIST_HEADERS, "Surname Restriction", ReadAllMessages[playerid], "Select", "Cancel");
						ReadAllMessages[playerid][0] = '\0';
					} else {
						format(message, sizeof(message), "The name {00FFFF}%s{FFFFFF} is not a restricted name!", surname);
						ClientMessenger(playerid, "FF0000", 1, message);
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/removerestsurname <surname>");
				}
				surname[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(3), GetAdminRanks(3));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:addrestsurname(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144], largequery[256];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 5) {
				new targetid, surname[31];
				if(!sscanf(params, "us[30]", targetid, surname)) {
					if(targetid != 65535){
						if(PlayerInfo[targetid][Online] == 1) {
							mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `surnames` WHERE `surname`='%e' LIMIT 1", surname);
							mysql_query(MySQL, largequery);
							if(cache_num_rows() == 0){
								format(message, sizeof(message), "%s has made {00FFFF}%s{FFFFFF} a restricted name", str_replace("_", " ", GetPlayerNameEx(playerid)), surname);
								ClientMessenger(playerid, "FF0000", 4, message);
								mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO surnames (`surname`, `playerid`) VALUES ('%e', '%i')", surname, PlayerInfo[targetid][DBID]);
								mysql_query(MySQL, largequery);
								mysql_query(MySQL, "SELECT * FROM `surnames`");
								new lastid = cache_num_rows();
								strcat(ReadAllMessages[playerid], "Surname\tOwner\n");
								for(new a = 0; a < lastid; a++){
									new surnameowner[MAX_PLAYER_NAME];
									mysql_query(MySQL, "SELECT * FROM `surnames`");
									cache_get_field_content(a, "surname", surname);
									mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id`=%i", cache_get_field_content_int(a, "playerid"));
									mysql_query(MySQL, largequery);
									cache_get_field_content(0, "name", surnameowner);
									format(message, sizeof(message), "%s\t%s\n", surname, surnameowner);
									strcat(ReadAllMessages[playerid], message);
									surname[0] = '\0';
									surnameowner[0] = '\0';
								}
								ShowPlayerDialog(playerid, 99, DIALOG_STYLE_TABLIST_HEADERS, "Surname Restriction", ReadAllMessages[playerid], "Select", "Cancel");
								ReadAllMessages[playerid][0] = '\0';
							} else {
								mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `id`=%i", cache_get_field_content_int(0, "playerid"));
								mysql_query(MySQL, largequery);
								cache_get_field_content(0, "name", surname);
								format(message, sizeof(message), "That surname is already resricted. It's currently owned by: {00FFFF}%s", surname);
								ClientMessenger(playerid, "FF0000", 1, message);
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/addrestsurname <playername/playerid> <surname>");
				}
				surname[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(3), GetAdminRanks(3));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:veh(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 3) {
				new Float:a, vehicleid;
				GetPlayerFacingAngle(playerid, a);
				GetPlayerPos(playerid, PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ]);
				if(!sscanf(params, "i", vehicleid)) {
					if(vehicleid >= 400 && vehicleid <= 611) {
						for(new w = 1; w <= sizeof(LastVehicleID); w++){
							if(LastVehicleID[w] == 0){
								LastVehicleID[w] = 1;
								CreateVehicle(vehicleid, PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ], a, -1, -1, -1);
								SetVehicleParamsEx(w, 0, 0, 0, 0, 0, 0, 0);
								Vehicles[w][Vehicle] = vehicleid;
								Vehicles[w][Faction] = 0;
								Vehicles[w][Color1] = -1;
								Vehicles[w][Color2] = -1;
								Vehicles[w][EngineS] = 0;
								Vehicles[w][LightS] = 0;
								Vehicles[w][DoorLS] = 0;
								Vehicles[w][HoodS] = 0;
								Vehicles[w][TrunkS] = 0;
								Vehicles[w][Temp] = 1;
								Vehicles[w][Health] = 1000;
								Vehicles[w][VDBID] = 0;
								Vehicles[w][VehX] = PlayerInfo[playerid][PosX];
								Vehicles[w][VehY] = PlayerInfo[playerid][PosY];
								Vehicles[w][VehZ] = PlayerInfo[playerid][PosZ];
								Vehicles[w][VehA] = PlayerInfo[playerid][FacingAngle];
								format(message, sizeof(message), "%s has made a temp vehicle, model id: %s(%i)", str_replace("_", " ", GetPlayerNameEx(playerid)), GetVehicleInformation(vehicleid), vehicleid);
								ClientMessenger(playerid, "FF0000", 4, message);
								break;
							}
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "Invalid vehicle model");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/veh <vehicleid> <colorid1 (optional)> <colorid2 optional)>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(3), GetAdminRanks(3));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:accept(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new message[144], largequery[256];
		if(InvitesAwaiting[playerid][Faction] != 0){
			new faction[10], invite[10];
			if (InvitesAwaiting[playerid][CHMSG] == 0) {
				if(InvitesAwaiting[playerid][FactionInviter] != 65535) {
					format(message, sizeof(message), "** You have one invitation to join {%s}%s{FFFFFF} by %s. Type (/accept faction invite) to join! **", FactionInfo[InvitesAwaiting[playerid][Faction]][FactionColor], FactionInfo[InvitesAwaiting[playerid][Faction]][FactionLongName], str_replace("_", " ", GetPlayerNameEx(InvitesAwaiting[playerid][FactionInviter])));
					ClientMessenger(playerid, "FFFFFF", 3, message);
				} else {
					format(message, sizeof(message), "** You have one invitation to join {%s}%s{FFFFFF}. Type (/accept faction invite) to join! **", FactionInfo[InvitesAwaiting[playerid][Faction]][FactionColor], FactionInfo[InvitesAwaiting[playerid][Faction]][FactionLongName]);
					ClientMessenger(playerid, "FFFFFF", 3, message);
				}
				InvitesAwaiting[playerid][CHMSG] = 1;
			}
			
			if (!sscanf(params, "s[10]s[10]", faction, invite)) {
				if(!strcmp("faction", faction)) {
					if(!strcmp("invite", invite)) {
						PlayerInfo[playerid][Faction] = InvitesAwaiting[playerid][Faction];
						PlayerInfo[playerid][FactionLevel] = 1;
						PlayerInfo[playerid][FactionLeader] = 0;
								
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `faction` = %i, `faction_level` = 1, `faction_leader` = 0, `skin` = '%i' WHERE `id` = %i", InvitesAwaiting[playerid][Faction], cache_get_field_content_int(0, "faction_skin"), PlayerInfo[playerid][DBID]);
						mysql_query(MySQL, largequery);
						
						InvitesAwaiting[playerid][CHMSG] = 0;
						
						if(InvitesAwaiting[playerid][FactionInviter] != 65535) {
							format(message, sizeof(message), "** %s has accepted your invite to join {%s}%s{FFFFFF}. **", str_replace("_", " ", GetPlayerNameEx(playerid)), FactionInfo[InvitesAwaiting[playerid][Faction]][FactionColor], FactionInfo[InvitesAwaiting[playerid][Faction]][FactionShortName]);
							ClientMessenger(InvitesAwaiting[playerid][FactionInviter], "FFFFFF", 3, message);
						}
						format(message, sizeof(message), "** You have accepted the invite to join {%s}%s{FFFFFF}. **", FactionInfo[InvitesAwaiting[playerid][Faction]][FactionColor], FactionInfo[InvitesAwaiting[playerid][Faction]][FactionShortName]);
						ClientMessenger(playerid, "FFFFFF", 3, message);
						InvitesAwaiting[playerid][Faction] = 0;
						InvitesAwaiting[playerid][FactionInviter] = 65535;
					} else {
						ClientMessenger(playerid, "FFFFFF", 5, "/accept faction invite");
					}
				} else {
					ClientMessenger(playerid, "FFFFFF", 5, "/accept faction invite");
				}
			}
			faction[0] = '\0';
			invite[0] = '\0';
		} else if(InvitesAwaiting[playerid][MarriageInviter] != 65535) {
			new marriage[9];
			if (InvitesAwaiting[playerid][CHMSG] == 0) {
				format(message, sizeof(message), "** %s has asked you to marry %s. Type (/accept marriage) to accept the proposal! **", str_replace("_", " ", GetPlayerNameEx(InvitesAwaiting[playerid][MarriageInviter])), GenderIdentification2(PlayerInfo[playerid][Gender]));
				ClientMessenger(playerid, "FFFFFF", 3, message);
				InvitesAwaiting[playerid][CHMSG] = 1;
			}
			if (!sscanf(params, "s[9]", marriage)) {
				if(!strcmp("marriage", marriage)) {
					format(message, sizeof(message), "** %s has accepted your proposal! **", str_replace("_", " ", GetPlayerNameEx(playerid)));
					ClientMessenger(InvitesAwaiting[playerid][FactionInviter], "FFFFFF", 3, message);
					format(message, sizeof(message), "** You have accepted %s proposal **", str_replace("_", " ", GetPlayerNameEx(InvitesAwaiting[playerid][MarriageInviter])));
					ClientMessenger(playerid, "FFFFFF", 3, message);
				}
				PlayerInfo[InvitesAwaiting[playerid][MarriageInviter]][Marriage] = PlayerInfo[playerid][DBID];
				PlayerInfo[playerid][Marriage] = PlayerInfo[InvitesAwaiting[playerid][MarriageInviter]][DBID];
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `married` = %i WHERE `id` = %i", PlayerInfo[playerid][DBID], PlayerInfo[InvitesAwaiting[playerid][MarriageInviter]][DBID]);
				mysql_query(MySQL, largequery);
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `married` = %i WHERE `id` = %i", PlayerInfo[InvitesAwaiting[playerid][MarriageInviter]][DBID], PlayerInfo[playerid][DBID]);
				mysql_query(MySQL, largequery);
				foreach(Player, i){
					if(PlayerInfo[i][Online] == 1) {
						format(message, sizeof(message), "[NEWS] %s has married %s!", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(InvitesAwaiting[playerid][MarriageInviter])));
						ClientMessenger(i, "3CB371", 3, message);
					}
				}
				PlayAudioStreamForPlayer(InvitesAwaiting[playerid][MarriageInviter], "https://raw.githubusercontent.com/chaos12135/sarp_forum/master/_files/marriage.mp3");
				PlayAudioStreamForPlayer(playerid, "https://raw.githubusercontent.com/chaos12135/sarp_forum/master/_files/marriage.mp3");
				InvitesAwaiting[playerid][MarriageInviter] = 65535;
			}
		} else {
			ClientMessenger(playerid, "FFFFFF", 3, "* You nothing to accept from anyone at this time! *");
		}
		message[0] = '\0';
		largequery[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:propose(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) {
		new targetid, message[144], largequery[256];
		mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `married` = 0 AND `id` = %i LIMIT 1", PlayerInfo[playerid][DBID]);
		mysql_query(MySQL, largequery);
		if(cache_num_rows() == 1){
			if (!sscanf(params, "u", targetid)) {
				if(targetid != 65535){
					if(PlayerInfo[targetid][Online] == 1) {
						if(playerid != targetid){
							GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
							if(IsPlayerInRangeOfPoint(targetid, 3, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
								mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `married` = 0 AND `id` = %i LIMIT 1", PlayerInfo[targetid][DBID]);
								mysql_query(MySQL, largequery);
								if(cache_num_rows() == 1){
									InvitesAwaiting[targetid][MarriageInviter] = playerid;
									format(message, sizeof(message), "** You have proposed to %s **", str_replace("_", " ", GetPlayerNameEx(targetid)));
									ClientMessenger(playerid, "FFFFFF", 3, message);
									format(message, sizeof(message), "** %s has proposed to you! (/accept marriage) **", str_replace("_", " ", GetPlayerNameEx(playerid)));
									ClientMessenger(targetid, "FFFFFF", 3, message);
								} else {
									ClientMessenger(playerid, "FFFFFF", 3, "* That person is already married to someone, they can not marry anyone else unless they get a divorce! *");
								}
							} else {
								ClientMessenger(playerid, "FFFFFF", 3, "* You're not in range of that person to propose to them! *");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 2, "* You can not marry yourself... loser! *");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, has not spawned yet, or invalid player id/name!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
				}
			} else {
				ClientMessenger(playerid, "FFFFFF", 5, "/propose <playerid/playername>");
			}
		} else {
			ClientMessenger(playerid, "FFFFFF", 3, "* You are already married to someone, you can not marry anyone else unless you divorce them! *");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:a(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][Admin] > 0) {
			new message[144];
			if (!sscanf(params, "s[145]", message)) {
				//format(message, sizeof(message), "* {%s}%s{FFFFFF} %s: %s *", GetAdminRanksC(PlayerInfo[playerid][Admin]), GetAdminRanks(PlayerInfo[playerid][Admin]), GetPlayerNameEx(playerid), message);
				format(message, sizeof(message), "{FF4500}* %s %s: %s *", GetAdminRanks(PlayerInfo[playerid][Admin]), str_replace("_", " ", GetPlayerNameEx(playerid)), message);
				foreach(Player, i)
				{
					if(PlayerInfo[i][Admin] > 0) {
						if(PlayerInfo[i][Online] == 1){
							SendClientMessage(i, -1, message);
						}
					}
				}
			} else {
				ClientMessenger(playerid, "FF0000", 5, "/a <message>");
			}
			message[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not a admin!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:hc(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		if(PlayerInfo[playerid][Helper] > 0) {
			new message[144];
			if (!sscanf(params, "s[300]", message)) {
				//format(message, sizeof(message), "* {00FFFF}%s{FFFFFF} %s: %s *", GetPlayerHelperRank(playerid), GetPlayerNameEx(playerid), message);
				format(message, sizeof(message), "{D2B48C}* %s %s: %s *", GetPlayerHelperRank(playerid), str_replace("_", " ", GetPlayerNameEx(playerid)), message);
				foreach(Player, i)
				{
					if(PlayerInfo[i][Helper] > 0) {
						if(PlayerInfo[i][Online] == 1){
							SendClientMessage(i, -1, message);
						}
					}
				}
			} else {
				ClientMessenger(playerid, "FF0000", 5, "/hc <message>");
			}
			message[0] = '\0';
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You are not a helper!");
		}
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:lastlogin(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new largequery[144], message[144];
		if (!sscanf(params, "s[30]", message)) {
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `accounts` WHERE `name` = '%e' LIMIT 1", message);
			mysql_query(MySQL, largequery);
			if(cache_num_rows() == 1){
				new getpdate[15], getptime[15];
				cache_get_field_content(0, "lastlogin_time", getptime);
				cache_get_field_content(0, "lastlogin_date", getpdate);
				format(message, sizeof(message), "The account %s was last online on: %s - %s", message, getpdate, getptime);
				ClientMessenger(playerid, "FF0000", 1, message);
				getpdate[0] = '\0';
				getptime[0] = '\0';
			} else {
				ClientMessenger(playerid, "FF0000", 1, "That account does not exist");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 5, "/lastlogin <player_name>");
		}
		largequery[0] = '\0';
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:changepass(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new password[30], largequery[144], message[144];
		if (!sscanf(params, "s[30]", password)) {
			if(strlen(password) > 3 && strlen(password) < 30) {
				mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `password` = '%e' WHERE `id` = %i", password, PlayerInfo[playerid][DBID]);
				mysql_query(MySQL, largequery);
				format(message, sizeof(message), "You have changed your password to %s", password);
				ClientMessenger(playerid, "FF0000", 1, message);
			} else {
			ClientMessenger(playerid, "FF0000", 1, "Your password can not have less then 4 or more then 29 character!");
			}
		} else {
			ClientMessenger(playerid, "FF0000", 5, "/changepass <password_here>");
		}
		largequery[0] = '\0';
		password[0] = '\0';
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:setmoney(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4) {
				new targetid, amount;
				if (!sscanf(params, "ui", targetid, amount)){ /* Checks to see if its in proper format */
					if(targetid != 65535){
						if (PlayerInfo[targetid][Online] == 1){ /* If target player is not logged in, they may not recieve money */
							new largequery[144];
							ResetPlayerMoney(targetid);
							GivePlayerMoney(targetid, amount);
							PlayerInfo[targetid][Money] = amount;
							
							format(message, sizeof(message), "Your money was set to $%d by %s!", amount, str_replace("_", " ", GetPlayerNameEx(playerid)));
							ClientMessenger(targetid, "FF0000", 1, message);
							format(message, sizeof(message), "%s has setmoney to %i on account %s", str_replace("_", " ", GetPlayerNameEx(playerid)), amount, str_replace("_", " ", GetPlayerNameEx(targetid)));
							ClientMessenger(playerid, "FF0000", 4, message);
							mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = %i WHERE `id` = %i", PlayerInfo[playerid][Money], PlayerInfo[targetid][DBID]);
							mysql_query(MySQL, largequery);
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/setmoney <playerid/playername> <amount>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:setrespectpoints(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4) {
				new targetid, points;
				if (!sscanf(params, "ui", targetid, points)){ /* Checks to see if its in proper format */
					if(points >= 1){
						if(targetid != 65535){
							if (PlayerInfo[targetid][Online] == 1){ /* If target player is not logged in, they may not recieve money */
								new largequery[144];
								PlayerInfo[targetid][RespectPoints] = points;
								format(message, sizeof(message), "Your respect points was set to %d by %s!", points, str_replace("_", " ", GetPlayerNameEx(playerid)));
								ClientMessenger(targetid, "FF0000", 1, message);
								format(message, sizeof(message), "%s has set respect points to %i for %s", str_replace("_", " ", GetPlayerNameEx(playerid)), points, str_replace("_", " ", GetPlayerNameEx(targetid)));
								ClientMessenger(playerid, "FF0000", 4, message);
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `respectpoints` = %i WHERE `id` = %i", PlayerInfo[targetid][RespectPoints], PlayerInfo[targetid][DBID]);
								mysql_query(MySQL, largequery);
								largequery[0] = '\0';
							} else {
								ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "You can not go below 1");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/setrespectpoints <playerid/playername> <points>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:setlevel(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4) {
				new targetid, level;
				if (!sscanf(params, "ui", targetid, level)){ /* Checks to see if its in proper format */
					if(level >= 1){
						if(targetid != 65535){
							if (PlayerInfo[targetid][Online] == 1){ /* If target player is not logged in, they may not recieve money */
								new largequery[144];
								PlayerInfo[targetid][Level] = level;
								SetPlayerScore(playerid, level);
								format(message, sizeof(message), "Your level was set to %d by %s!", level, str_replace("_", " ", GetPlayerNameEx(playerid)));
								ClientMessenger(targetid, "FF0000", 1, message);
								format(message, sizeof(message), "%s has set level to %i for %s", str_replace("_", " ", GetPlayerNameEx(playerid)), level, str_replace("_", " ", GetPlayerNameEx(targetid)));
								ClientMessenger(playerid, "FF0000", 4, message);
								mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `level` = %i WHERE `id` = %i", PlayerInfo[targetid][Level], PlayerInfo[targetid][DBID]);
								mysql_query(MySQL, largequery);
								largequery[0] = '\0';
							} else {
								ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "You can not go below 1");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/setlevel <playerid/playername> <level>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:setlicenses(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4) {
				new targetid, licenseid, licenselevel;
				if (!sscanf(params, "uii", targetid, licenseid, licenselevel)){ /* Checks to see if its in proper format */
					if(licenseid >= 1 && licenseid <= 5){
						if(licenselevel == 0 || licenselevel == 1){
							if(targetid != 65535){
								if (PlayerInfo[targetid][Online] == 1){ /* If target player is not logged in, they may not recieve money */
									new largequery[144];
									PlayerInfo[targetid][Licenses][licenseid] = licenselevel;
									if(licenselevel == 1){
										format(message, sizeof(message), "You have been given your %s license by Administrator %s!", GetLicenseNames(licenseid), str_replace("_", " ", GetPlayerNameEx(playerid)));
									} else {
										format(message, sizeof(message), "Your %s license has been removed by Administrator %s", GetLicenseNames(licenseid), str_replace("_", " ", GetPlayerNameEx(playerid)));
									}
									ClientMessenger(targetid, "FF0000", 1, message);
									
									if(licenselevel == 1){
										format(message, sizeof(message), "%s has given %s his %s license", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)), GetLicenseNames(licenseid));
									} else {
										format(message, sizeof(message), "%s has removed %s %s license", str_replace("_", " ", GetPlayerNameEx(playerid)), str_replace("_", " ", GetPlayerNameEx(targetid)), GetLicenseNames(licenseid));
									}
									ClientMessenger(playerid, "FF0000", 4, message);
									
									if(licenseid == 1){
										mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `vehicle_licence` = %i WHERE `id` = %i", licenselevel, PlayerInfo[targetid][DBID]);
									}
									mysql_query(MySQL, largequery);
									largequery[0] = '\0';
								} else {
									ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
								}
							} else {
								ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
							}
						} else {
							ClientMessenger(playerid, "FF0000", 1, "You can only take(0) or give license(1), so choose one!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "The only available license are: <licence (1 drivers, 2 flying, 3 weapon, 4 boating, 5 fishing)>");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/setlicenses <playerid/playername> <licence (1 drivers, 2 flying, 3 weapon, 4 boating, 5 fishing)> <level (0 take, 1 give)>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:setbankmoney(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4) {
				new targetid, amount;
				if (!sscanf(params, "ui", targetid, amount)){ /* Checks to see if its in proper format */
					if(targetid != 65535){
						if (PlayerInfo[targetid][Online] == 1){ /* If target player is not logged in, they may not recieve money */
							new largequery[144];
							PlayerInfo[targetid][BankMoney] = amount;
							
							format(message, sizeof(message), "Your bank money was set to $%d by %s!", amount, str_replace("_", " ", GetPlayerNameEx(playerid)));
							ClientMessenger(targetid, "FF0000", 1, message);
							format(message, sizeof(message), "%s has set bank money to %i on account %s", str_replace("_", " ", GetPlayerNameEx(playerid)), amount, str_replace("_", " ", GetPlayerNameEx(targetid)));
							ClientMessenger(playerid, "FF0000", 4, message);
							mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `bank` = %i WHERE `id` = %i", PlayerInfo[targetid][BankMoney], PlayerInfo[targetid][DBID]);
							mysql_query(MySQL, largequery);
							largequery[0] = '\0';
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/setbankmoney <playerid/playername> <amount>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:osetbankmoney(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4) {
				new target_name[MAX_PLAYER_NAME], amount, largequery[144];
				if (!sscanf(params, "s[25]i", target_name, amount)){ /* Checks to see if its in proper format */
					mysql_format(MySQL, largequery, sizeof(largequery), "SELECT `id` FROM `accounts` WHERE `name` = '%e'", target_name);
					mysql_query(MySQL, largequery);
					if(cache_num_rows() == 1) { /* If player exists do this */
						format(message, sizeof(message), "%s has offline set bank money to %i on account %s", str_replace("_", " ", GetPlayerNameEx(playerid)), amount, target_name);
						ClientMessenger(playerid, "FF0000", 4, message);
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `bank` = %i WHERE `name` = '%e'", amount, target_name);
						mysql_query(MySQL, largequery);
						
					} else { /* Player account does not exist */
						ClientMessenger(playerid, "FF0000", 1, "That account does not exist!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/osetbankmoney <player_name> <amount>");
				}
				largequery[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

COMMAND:osetmoney(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4) {
				new target_name[MAX_PLAYER_NAME], amount, largequery[144];
				if (!sscanf(params, "s[25]i", target_name, amount)){ /* Checks to see if its in proper format */
					mysql_format(MySQL, largequery, sizeof(largequery), "SELECT `id` FROM `accounts` WHERE `name` = '%e'", target_name);
					mysql_query(MySQL, largequery);
					if(cache_num_rows() == 1) { /* If player exists do this */
						format(message, sizeof(message), "%s has offline set money to %i on account %s", str_replace("_", " ", GetPlayerNameEx(playerid)), amount, target_name);
						ClientMessenger(playerid, "FF0000", 4, message);
						mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `money` = %i WHERE `name` = '%e'", amount, target_name);
						mysql_query(MySQL, largequery);
						
					} else { /* Player account does not exist */
						ClientMessenger(playerid, "FF0000", 1, "That account does not exist!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/osetmoney <player_name> <amount>");
				}
				largequery[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:checkmoney(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4) {
				new targetid;
				if (!sscanf(params, "u", targetid)){ /* Checks to see if its in proper format */
					if(targetid != 65535){
						if (PlayerInfo[targetid][Online] == 1){ /* If target player is not logged in, then we can not check money */
						//  mysql_format(MySQL, largequery, sizeof(largequery), "SELECT `money` FROM `accounts` WHERE `name` = '%e'", GetPlayerNameEx(targetid));
						//  mysql_query(MySQL, largequery);
							format(message, sizeof(message), "%s has $%d dollars!", str_replace("_", " ", GetPlayerNameEx(targetid)), PlayerInfo[playerid][Money]);
							ClientMessenger(playerid, "FF0000", 1, message);
						} else {
							ClientMessenger(playerid, "FF0000", 1, "That player has not spawned yet!");
						}
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That player isn't online, or invalid player id!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/checkmoney <playerid/playername>");
				}
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}


COMMAND:ocheckmoney(playerid, params[])
{
	if(PlayerInfo[playerid][Online] == 1) { /* If player is not logged in, they may not use commands */
		new message[144];
		if(PlayerInfo[playerid][Admin] >= 1) {
			if(PlayerInfo[playerid][Admin] >= 4) {
				new checkplayername[MAX_PLAYER_NAME], largequery[144];
				if (!sscanf(params, "s[26]", checkplayername)){ /* Checks to see if its in proper format */
					mysql_format(MySQL, largequery, sizeof(largequery), "SELECT `id` FROM `accounts` WHERE `name` = '%e'", checkplayername);
					mysql_query(MySQL, largequery);
					if(cache_num_rows() == 1) {  /* If player exists do this */
						mysql_format(MySQL, largequery, sizeof(largequery), "SELECT `money` FROM `accounts` WHERE `name` = '%e'", checkplayername);
						mysql_query(MySQL, largequery);
						format(message, sizeof(message), "%s has $%d!", checkplayername, cache_get_field_content_int(0, "money"));
						ClientMessenger(playerid, "FF0000", 1, message);
					} else {
						ClientMessenger(playerid, "FF0000", 1, "That account does not exist!");
					}
				} else {
					ClientMessenger(playerid, "FF0000", 5, "/ocheckmoney <player_name>");
				}
				largequery[0] = '\0';
			} else {
				format(message, sizeof(message), "You must be a {%s}%s{FFFFFF} to use this command!", GetAdminRanksC(4), GetAdminRanks(4));
				ClientMessenger(playerid, "FF0000", 1, message);
			}
		} else {
			ClientMessenger(playerid, "FF0000", 1, "You must be an Administrator to use this command!");
		}
		message[0] = '\0';
	} else {
		ClientMessenger(playerid, "FF0000", 1, "You have not spawned yet!");
	}
	return 1;
}

/*
public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
	if(PlayerInfo[playerid][Online] == 1) {
		GetPlayerHealth(playerid,PlayerInfo[playerid][HP]);
		if(PlayerInfo[playerid][HP] <= 0){
			for(new a = 0; a <= 13; a++)
			{
				PlayerInfo[playerid][Weapons][a] = 0;
			}
			PlayerInfo[playerid][TempInfo][6] = 1;
		}
		new largequery[350];
		GetPlayerHealth(playerid,PlayerInfo[playerid][HP]);
		GetPlayerArmour(playerid, PlayerInfo[playerid][Armor]);
		GetPlayerPos(playerid, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ]);
		mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `health`='%f', `armor`='%f' WHERE `id` = '%i' LIMIT 1", PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ], PlayerInfo[playerid][HP], PlayerInfo[playerid][Armor], PlayerInfo[playerid][DBID]);
		mysql_query(MySQL, largequery);
		largequery[0] = '\0';
	}
	return 1;
}
*/


public OnPlayerDeath(playerid, killerid, reason)
{
	if(PlayerInfo[playerid][Online] == 1) {
		PlayerInfo[playerid][TempInfo][13] = 1;
		DestroyDynamicCP(PlayerInfo[playerid][CPLoc]);
		PlayerInfo[playerid][CPLoc] = 0;
		PlayerInfo[playerid][TempInfo][22] = 0;
		new largequery[300];
		new CHID = FindClosestHospital(playerid);
		PlayerInfo[playerid][HP] = 0;
		PlayerInfo[playerid][TempInfo][6] = CHID;
		mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `accounts` SET `dead`=%i, WHERE `id` = %i", CHID, PlayerInfo[playerid][DBID]);
		mysql_query(MySQL, largequery);
		PlayerInfo[playerid][Armor] = 0;
		PlayerInfo[playerid][WorldID] = 0;
		PlayerInfo[playerid][InteriorID] = 0;
		if(PlayerInfo[playerid][TempInfo][8] != 0){
			PlayerInfo[playerid][TempInfo][8] = 0;
			PlayerInfo[playerid][AllEditingOptions] = 0;
			PlayerInfo[playerid][AllEditingOptions2] = 0;
			DestroyVehicle(PlayerInfo[playerid][AllEditingOptions3][0]);
			LastVehicleID[PlayerInfo[playerid][AllEditingOptions3][0]] = 0;
			PlayerInfo[playerid][AllEditingOptions3][0] = 0;
		}
		for(new a = 0; a < 12; a++)
		{
			PlayerInfo[playerid][Weapons][a] = 0;
		}
		mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_weapons` SET `weapon`=0, `weapon_ammo`='0' WHERE `playerid` = %i", PlayerInfo[playerid][DBID]);
		mysql_query(MySQL, largequery);
		largequery[0] = '\0';
	}
	return 1;
}


public OnPlayerDisconnect(playerid, reason)
{
	if(PlayerInfo[playerid][Online] == 1 && !IsPlayerNPC(playerid)) {
		new largequery[300], slargequery[144], message[144];
		
		DestroyDynamicCP(PlayerInfo[playerid][CPLoc]);
		
		for(new g = 1; g <= (MAX_PLAYER_VEHICLES); g++){
			if(PlayerInfo[playerid][PVehsID][g] != 0){
				GetVehiclePos(PlayerInfo[playerid][PVehsID][g], Vehicles[PlayerInfo[playerid][PVehsID][g]][VehX], Vehicles[PlayerInfo[playerid][PVehsID][g]][VehY], Vehicles[PlayerInfo[playerid][PVehsID][g]][VehZ]);
				GetVehicleZAngle(PlayerInfo[playerid][PVehsID][g], Vehicles[PlayerInfo[playerid][PVehsID][g]][VehA]);
				mysql_format(MySQL, slargequery, sizeof(slargequery), "UPDATE `player_vehicles` SET `x`='%f', `y`='%f', `z`='%f', `a`='%f' WHERE `playerid` = %i AND `slot` = %i LIMIT 1", Vehicles[PlayerInfo[playerid][PVehsID][g]][VehX], Vehicles[PlayerInfo[playerid][PVehsID][g]][VehY], Vehicles[PlayerInfo[playerid][PVehsID][g]][VehZ], Vehicles[PlayerInfo[playerid][PVehsID][g]][VehA], PlayerInfo[playerid][DBID], g);
				mysql_query(MySQL, slargequery);
				LastVehicleID[PlayerInfo[playerid][PVehsID][g]] = 0;
				DestroyVehicle(PlayerInfo[playerid][PVehsID][g]);
			}
		}
		
		if(PlayerInfo[playerid][TempInfo][12] >= 1){
			mysql_format(MySQL, slargequery, sizeof(slargequery), "UPDATE `player_arrested` SET `arresttime`=%i WHERE `playerid` = %i LIMIT 1", PlayerInfo[playerid][TempInfo][12], PlayerInfo[playerid][DBID]);
			mysql_query(MySQL, slargequery);
		}
		
		for (new i = 0; i < 12; i++)
		{
			if(PlayerInfo[playerid][WeaponsAmmo][i] <= 0){
				mysql_format(MySQL, slargequery, sizeof(slargequery), "UPDATE `player_weapons` SET `weapon_ammo`=0 WHERE `playerid` = %i AND `slot` = %i LIMIT 1", PlayerInfo[playerid][DBID], i);
			} else if(PlayerInfo[playerid][Weapons][i] == 0 && PlayerInfo[playerid][WeaponsAmmo][i] >= 1){
				mysql_format(MySQL, slargequery, sizeof(slargequery), "UPDATE `player_weapons` SET `weapon_ammo`=%i WHERE `playerid` = %i AND `slot` = %i LIMIT 1", PlayerInfo[playerid][WeaponsAmmo][i], PlayerInfo[playerid][DBID], i);
			} else {
				GetPlayerWeaponData(playerid, i, PlayerInfo[playerid][Weapons][i], PlayerInfo[playerid][WeaponsAmmo][i]);
				mysql_format(MySQL, slargequery, sizeof(slargequery), "UPDATE `player_weapons` SET `weapon`=%i, `weapon_ammo`=%i WHERE `playerid` = %i AND `slot` = %i LIMIT 1", PlayerInfo[playerid][Weapons][i], PlayerInfo[playerid][WeaponsAmmo][i], PlayerInfo[playerid][DBID], i);
			}
			mysql_query(MySQL, slargequery);
		}
		
		for(new o = 0; o < 10; o++){
			RemovePlayerAttachedObject(playerid, o);
		}
		
		if(PlayerInfo[playerid][TempInfo][2] >= 1 || PlayerInfo[playerid][TempInfo][4] == 1){
			mysql_format(MySQL, largequery, sizeof(largequery), "UPDATE `player_weapons` SET `weapon`=0, `weapon_ammo`='0' WHERE `playerid` = %i", PlayerInfo[playerid][DBID]);
			mysql_query(MySQL, largequery);
			
			mysql_format(MySQL, largequery, sizeof(largequery), "SELECT * FROM `player_arrested` WHERE `playerid` = %i LIMIT 1", PlayerInfo[playerid][DBID]);
			mysql_query(MySQL, largequery);
			if(cache_num_rows() == 0){
				mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `player_arrested` (`arrestid`,`arresttime`,`playerid`) VALUES ('1','%i','%i')", (10*60), PlayerInfo[playerid][DBID]);
				mysql_query(MySQL, largequery);
			} else {
				mysql_format(MySQL, largequery, sizeof(largequery), "DELETE FROM `player_arrested` WHERE `playerid` = %i", PlayerInfo[playerid][DBID]);
				mysql_query(MySQL, largequery);
				mysql_format(MySQL, largequery, sizeof(largequery), "INSERT INTO `player_arrested` (`arrestid`,`arresttime`,`playerid`) VALUES ('1','%i','%i')", (10*60), PlayerInfo[playerid][DBID]);
				mysql_query(MySQL, largequery);
			}
		}
		
		
		if(PlayerInfo[playerid][TempInfo][8] != 0){
			PlayerInfo[playerid][TempInfo][8] = 0;
			PlayerInfo[playerid][AllEditingOptions] = 0;
			PlayerInfo[playerid][AllEditingOptions2] = 0;
			DestroyVehicle(PlayerInfo[playerid][AllEditingOptions3][0]);
			LastVehicleID[PlayerInfo[playerid][AllEditingOptions3][0]] = 0;
			PlayerInfo[playerid][AllEditingOptions3][0] = 0;
		}
		
		for(new c; c < MAX_PLAYERS; c++){
			if(InvitesAwaiting[c][MarriageInviter] == playerid){
				InvitesAwaiting[c][MarriageInviter] = 65535;                
			}
			if(InvitesAwaiting[c][FactionInviter] == playerid){
				InvitesAwaiting[c][FactionInviter] = 65535;
			}
		}
		
		PlayerInfo[playerid][CPLoc] = 0;
		PlayerInfo[playerid][TempInfo][22] = 0;
		
		
		SetPlayerName(playerid, PlayerInfo[playerid][RealName]);
		GetPlayerHealth(playerid,PlayerInfo[playerid][HP]);
		GetPlayerArmour(playerid, PlayerInfo[playerid][Armor]);
		
		if(PlayerInfo[playerid][ViewingCamera] == 0){
			GetPlayerPos(playerid, PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ]);
			PlayerInfo[playerid][WorldID] = GetPlayerVirtualWorld(playerid);
			PlayerInfo[playerid][InteriorID] = GetPlayerInterior(playerid);
		}
		
		if(PlayerInfo[playerid][TempInfo][7] == 1){
			TurnGPSStatusOff(playerid);
			PlayerInfo[playerid][TempInfo][7] = 0;
		}
		
		PlayerTextDrawDestroy(playerid, PlayerInfo[playerid][GameText]);
		GetPlayerFacingAngle(playerid, PlayerInfo[playerid][FacingAngle]);
		
		format(message, sizeof(message), "%s(%i) has left the server!", str_replace("_", " ", GetPlayerNameEx(playerid)), playerid);
		foreach(Player, i){
			if(PlayerInfo[i][Online] == 1) {
				if(IsPlayerInRangeOfPoint(i, 25, PlayerInfo[playerid][PosX], PlayerInfo[playerid][PosY], PlayerInfo[playerid][PosZ])) {
					ClientMessenger(i, "FFFF00", 3, message);
				}
			}
		}
		
		format(slargequery, sizeof(slargequery), "UPDATE `accounts` SET `x`='%f', `y`='%f', `z`='%f', `a`='%f', `world`=%i, `interior`=%i,", PlayerInfo[playerid][PosX],PlayerInfo[playerid][PosY],PlayerInfo[playerid][PosZ],PlayerInfo[playerid][FacingAngle],PlayerInfo[playerid][WorldID], PlayerInfo[playerid][InteriorID]);
		strcat(largequery, slargequery);
		format(slargequery, sizeof(slargequery), "`money`=%i, `health`='%f', `armor`='%f', `fakename`='', `online`=0 WHERE `id` = %i LIMIT 1", PlayerInfo[playerid][Money],PlayerInfo[playerid][HP],PlayerInfo[playerid][Armor], PlayerInfo[playerid][DBID]);
		strcat(largequery, slargequery);
		mysql_format(MySQL, largequery, sizeof(largequery), largequery);
		mysql_query(MySQL, largequery);
		largequery[0] = '\0';
		slargequery[0] = '\0';
		message[0] = '\0';
		SystemLogsInsert(playerid, "CONNECTION", "PLAYER_DISCONNECTED");
	} else {
		KillTimer(CoolSpawnCamerai[playerid]);
	}
	return 1;
}

//End Commenmen
